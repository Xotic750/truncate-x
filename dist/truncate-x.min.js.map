{"version":3,"sources":["webpack://truncateX/webpack/universalModuleDefinition","webpack://truncateX/webpack/bootstrap","webpack://truncateX/./node_modules/is-symbol/index.js","webpack://truncateX/./node_modules/is-primitive/index.js","webpack://truncateX/./node_modules/is-string/index.js","webpack://truncateX/./node_modules/is-date-object/index.js","webpack://truncateX/./node_modules/is-arguments/index.js","webpack://truncateX/./node_modules/has-symbols/index.js","webpack://truncateX/(webpack)/buildin/global.js","webpack://truncateX/./node_modules/has-symbols/shams.js","webpack://truncateX/../src/attempt-x.js","webpack://truncateX/../src/white-space-x.js","webpack://truncateX/../src/has-symbol-support-x.js","webpack://truncateX/../src/to-boolean-x.js","webpack://truncateX/../src/to-string-tag-x.js","webpack://truncateX/../src/has-to-string-tag-x.js","webpack://truncateX/../src/is-nil-x.js","webpack://truncateX/../src/require-object-coercible-x.js","webpack://truncateX/../src/to-string-x.js","webpack://truncateX/../src/require-coercible-to-string-x.js","webpack://truncateX/../src/trim-left-x.js","webpack://truncateX/../src/trim-right-x.js","webpack://truncateX/../src/trim-x.js","webpack://truncateX/../src/normalize-space-x.js","webpack://truncateX/../src/replace-comments-x.js","webpack://truncateX/../src/is-function-x.js","webpack://truncateX/../src/to-primitive-x.js","webpack://truncateX/../src/parse-int-x.js","webpack://truncateX/../src/nan-x.js","webpack://truncateX/../src/to-number-x.js","webpack://truncateX/../src/is-nan-x.js","webpack://truncateX/../src/is-finite-x.js","webpack://truncateX/../src/infinity-x.js","webpack://truncateX/../src/math-sign-x.js","webpack://truncateX/../src/to-integer-x.js","webpack://truncateX/../src/to-length-x.js","webpack://truncateX/../src/is-object-like-x.js","webpack://truncateX/../src/to-object-x.js","webpack://truncateX/../src/to-property-key-x.js","webpack://truncateX/../src/object-get-own-property-descriptor-x.js","webpack://truncateX/../src/has-own-property-x.js","webpack://truncateX/../src/to-string-symbols-supported-x.js","webpack://truncateX/../src/math-clamp-x.js","webpack://truncateX/../src/is-index-x.js","webpack://truncateX/../src/property-is-enumerable-x.js","webpack://truncateX/../src/object-define-property-x.js","webpack://truncateX/../src/assert-is-object-x.js","webpack://truncateX/../src/array-slice-x.js","webpack://truncateX/../src/is-regexp-x.js","webpack://truncateX/../src/is-array-x.js","webpack://truncateX/../src/has-boxed-string-x.js","webpack://truncateX/../src/split-if-boxed-bug-x.js","webpack://truncateX/../src/array-like-slice-x.js","webpack://truncateX/../src/truncate-x.js"],"names":["root","factory","exports","module","define","amd","$globalThis","ObjectCtr","constructor","objectPrototype","prototype","defineProperty","getGlobalFallback","self","window","global","returnThis","this","get","configurable","__defineGetter__","$$globalThis$$","error","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","enumerable","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","hasOwnProperty","p","s","toStr","toString","symToStr","symStringRegex","valueOf","test","isSymbolObject","e","val","strValue","String","hasToStringTag","tryStringObject","getDay","Date","tryDateObject","isStandardArguments","isLegacyArguments","length","callee","supportsStandardArguments","arguments","origSymbol","hasSymbolSham","g","Function","getOwnPropertySymbols","iterator","obj","sym","symObj","keys","getOwnPropertyNames","syms","propertyIsEnumerable","getOwnPropertyDescriptor","descriptor","attempt_x_esm","fn","_len","args","Array","_key","threw","apply","hasSymbolSupport","_newArrowCheck","is_symbol_default","undefined","has_symbol_support_x_esm","to_boolean_x_esm","nativeObjectToString","to_string_tag_x_esm","has_to_string_tag_x_esm","is_nil_x_esm","require_object_coercible_x_esm","TypeError","concat","ERROR_MESSAGE","castString","to_string_x_esm","require_coercible_to_string_x_esm","list","code","description","es5","es2015","es2016","es2017","es2018","string","stringES2018","white_space_x_esm_length","white_space_x_esm_i","white_space_x_esm","reLeft","RegExpCtr","replace","trim_left_x_esm","reRight2018","trim_right_x_esm_RegExpCtr","trim_right_x_esm_replace","trim_right_x_esm","trim_x_esm","reNormalize2018","normalize_space_x_esm_RegExpCtr","normalize_space_x_esm_replace","normalize_space_x_esm","STRIP_COMMENTS","replace_comments_x_esm_replace","replace_comments_x_esm","replacement","FunctionCtr","fToString","ctrRx","hasNativeClass","is_function_x_esm_testClassString","isES6ClassFn","result","is_function_x_esm","allowClass","is_primitive_default","tryFuncToString","strTag","is_function_x_esm_compareTags","StringCtr","NumberCtr","symToPrimitive","toPrimitive","symValueOf","toStringOrder","toNumberOrder","to_primitive_x_esm_ordinaryToPrimitive","ordinary","hint","assertHint","method","methodNames","getHint","supplied","to_primitive_x_esm_getExoticToPrim","func","to_primitive_x_esm_getMethod","to_primitive_x_esm_evalExotic","exoticToPrim","input","to_primitive_x_esm_evalPrimitive","newHint","is_date_object_default","to_primitive_x_esm","preferredType","nativeParseInt","parseInt","castNumber","charAt","hexRegex","parse_int_x_esm_test","parse_int_x_esm","radix","str","to_number_x_esm_castNumber","pStrSlice","slice","binaryRegex","to_number_x_esm_test","octalRegex","nonWSregex","RegExpConstructor","invalidHexLiteral","to_number_x_esm_parseBase","parseString","toNum","isBinary","isOctal","to_number_x_esm_convertString","hasNonWS","isInvalidHexLiteral","trimmed","to_number_x_esm","toNumber","argument","to_number_x_esm_assertNotSymbol","is_nan_x_esm","is_finite_x_esm","number","math_sign_x_esm","x","abs","Math","floor","to_integer_x_esm","to_length_x_esm","len","is_object_like_x_esm","castObject","to_object_x_esm","getOPDFallback1","getOPDFallback2","$getOwnPropertyDescriptor","to_property_key_x_esm","_typeof","hop","has_own_property_x_esm","pToString","isSymbolFn","a","to_string_symbols_supported_x_esm_castString","to_string_symbols_supported_x_esm","math_clamp_x_esm_getMaxMin","minVal","max","min","RangeError","math_clamp_x_esm","_getMaxMin","reIsUint","rxTest","is_index_x_esm","propIsEnumerable","property_is_enumerable_x_esm","object_get_own_property_descriptor_x_esm_charAt","ngopd","nativeGOPD","object_get_own_property_descriptor_x_esm_doesGOPDWork","prop","testResult","object_get_own_property_descriptor_x_esm_doc","document","createElement","object_get_own_property_descriptor_x_esm_res","worksWithPrim","lookupGetter","lookupSetter","prototypeOfObject","supportsAccessors","lg","__lookupGetter__","ls","__lookupSetter__","propKey","isStringIndex","is_string_default","__proto__","notPrototypeOfObject","setter","set","writable","definePropertyFallback","$defineProperty","object_get_own_property_descriptor_x_esm","assert_is_object_x_esm","object_define_property_x_esm_ObjectCtr","nd","nativeDefProp","object_define_property_x_esm_toPropertyDescriptor","desc","object_define_property_x_esm_testWorksWith","object_define_property_x_esm_doc","object_define_property_x_esm_prototypeOfObject","object_define_property_x_esm_supportsAccessors","defineGetter","__defineGetter_","defineSetter","__defineSetter__","object_define_property_x_esm_lookupGetter","object_define_property_x_esm_lookupSetter","propDesc","res","doc","resultDocElement","object_define_property_x_esm","regexExec","exec","is_regexp_x_esm","lastIndex","tryRegexExecCall","nia","isArray","nativeIsArray","is_array_x_esm_testResult","is_array_x_esm","boxedString","hasBoxed","strSplit","split","isStringFn","split_if_boxed_bug_x_esm","getMax","b","setRelative","array_like_slice_x_esm","arrayLike","start","end","iterable","k","relativeEnd","finalEnd","next","nativeSlice","failArray","failString","array_slice_x_esm_testString","failDOM","documentElement","array_slice_x_esm","array","is_arguments_default","match","truncate_x_esm_slice","search","indexOf","lastIndexOf","aJoin","join","truncate_x_esm_RegExpCtr","reFlags","truncate_x_esm_rxTest","rxExec","rsAstral","rsCombo","rsFitz","rsModifier","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsOptVar","rsSeq","rsSymbol","reComplexSymbol","reHasComplexSymbol","truncate_x_esm_getRxResult","separator","rxSeperator","source","newEnd","rxMatch","index","getNewEnd","__webpack_exports__","options","_getOptions","opts","omission","truncate_x_esm_getOptions","_getConsts","matchSymbols","strLength","getConsts","stringSize","truncate_x_esm_getResult"],"mappings":"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","file":"truncate-x.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"truncateX\"] = factory();\n\telse\n\t\troot[\"truncateX\"] = factory();\n})((function () {\n  'use strict';\n\n  var ObjectCtr = {}.constructor;\n  var objectPrototype = ObjectCtr.prototype;\n  var defineProperty = ObjectCtr.defineProperty;\n  var $globalThis;\n  var getGlobalFallback = function() {\n    if (typeof self !== 'undefined') {\n      return self;\n    }\n\n    if (typeof window !== 'undefined') {\n      return window;\n    }\n\n    if (typeof global !== 'undefined') {\n      return global;\n    }\n\n    return void 0;\n  };\n\n  var returnThis = function() {\n    return this;\n  };\n\n  try {\n    if (defineProperty) {\n      defineProperty(objectPrototype, '$$globalThis$$', {\n        get: returnThis,\n        configurable: true\n      });\n    } else {\n      objectPrototype.__defineGetter__('$$globalThis$$', returnThis);\n    }\n\n    $globalThis = typeof $$globalThis$$ === 'undefined' ? getGlobalFallback() : $$globalThis$$;\n\n    delete objectPrototype.$$globalThis$$;\n\n    return $globalThis;\n  } catch (error) {\n    return getGlobalFallback();\n  }\n}()), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","'use strict';\n\nvar toStr = Object.prototype.toString;\nvar hasSymbols = require('has-symbols')();\n\nif (hasSymbols) {\n\tvar symToStr = Symbol.prototype.toString;\n\tvar symStringRegex = /^Symbol\\(.*\\)$/;\n\tvar isSymbolObject = function isRealSymbolObject(value) {\n\t\tif (typeof value.valueOf() !== 'symbol') {\n\t\t\treturn false;\n\t\t}\n\t\treturn symStringRegex.test(symToStr.call(value));\n\t};\n\n\tmodule.exports = function isSymbol(value) {\n\t\tif (typeof value === 'symbol') {\n\t\t\treturn true;\n\t\t}\n\t\tif (toStr.call(value) !== '[object Symbol]') {\n\t\t\treturn false;\n\t\t}\n\t\ttry {\n\t\t\treturn isSymbolObject(value);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n} else {\n\n\tmodule.exports = function isSymbol(value) {\n\t\t// this environment does not support Symbols.\n\t\treturn false && value;\n\t};\n}\n","/*!\n * is-primitive <https://github.com/jonschlinkert/is-primitive>\n *\n * Copyright (c) 2014-present, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function isPrimitive(val) {\n  if (typeof val === 'object') {\n    return val === null;\n  }\n  return typeof val !== 'function';\n};\n","'use strict';\n\nvar strValue = String.prototype.valueOf;\nvar tryStringObject = function tryStringObject(value) {\n\ttry {\n\t\tstrValue.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar strClass = '[object String]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isString(value) {\n\tif (typeof value === 'string') { return true; }\n\tif (typeof value !== 'object') { return false; }\n\treturn hasToStringTag ? tryStringObject(value) : toStr.call(value) === strClass;\n};\n","'use strict';\n\nvar getDay = Date.prototype.getDay;\nvar tryDateObject = function tryDateObject(value) {\n\ttry {\n\t\tgetDay.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n\nvar toStr = Object.prototype.toString;\nvar dateClass = '[object Date]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isDateObject(value) {\n\tif (typeof value !== 'object' || value === null) { return false; }\n\treturn hasToStringTag ? tryDateObject(value) : toStr.call(value) === dateClass;\n};\n","'use strict';\n\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\nvar toStr = Object.prototype.toString;\n\nvar isStandardArguments = function isArguments(value) {\n\tif (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {\n\t\treturn false;\n\t}\n\treturn toStr.call(value) === '[object Arguments]';\n};\n\nvar isLegacyArguments = function isArguments(value) {\n\tif (isStandardArguments(value)) {\n\t\treturn true;\n\t}\n\treturn value !== null &&\n\t\ttypeof value === 'object' &&\n\t\ttypeof value.length === 'number' &&\n\t\tvalue.length >= 0 &&\n\t\ttoStr.call(value) !== '[object Array]' &&\n\t\ttoStr.call(value.callee) === '[object Function]';\n};\n\nvar supportsStandardArguments = (function () {\n\treturn isStandardArguments(arguments);\n}());\n\nisStandardArguments.isLegacyArguments = isLegacyArguments; // for tests\n\nmodule.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;\n","'use strict';\n\nvar origSymbol = global.Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict';\n\n/* eslint complexity: [2, 17], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n","/**\n * This method attempts to invoke the function, returning either the result or\n * the caught error object. Any additional arguments are provided to the\n * function when it's invoked.\n *\n * @param {Function} [fn] - The function to attempt.\n * @param {...*} [args] - The arguments to invoke the function with.\n * @returns {object} Returns an object of the result.\n */\nconst attempt = function attempt(fn, ...args) {\n  try {\n    return {\n      threw: false,\n      /* eslint-disable-next-line babel/no-invalid-this */\n      value: fn.apply(this, args),\n    };\n  } catch (e) {\n    return {\n      threw: true,\n      value: e,\n    };\n  }\n};\n\nexport default attempt;\n","/**\n * A record of a white space character.\n *\n * @typedef {object} CharRecord\n * @property {number} code - The character code.\n * @property {string} description - A description of the character.\n * @property {boolean} es5 - Whether the spec lists this as a white space.\n * @property {boolean} es2015 - Whether the spec lists this as a white space.\n * @property {boolean} es2016 - Whether the spec lists this as a white space.\n * @property {boolean} es2017 - Whether the spec lists this as a white space.\n * @property {boolean} es2018 - Whether the spec lists this as a white space.\n * @property {string} string - The character string.\n */\n\n/**\n * An array of the whitespace char codes, string, descriptions and language\n * presence in the specifications.\n *\n * @type Array.<CharRecord>\n */\nexport const list = [\n  {\n    code: 0x0009,\n    description: 'Tab',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u0009',\n  },\n  {\n    code: 0x000a,\n    description: 'Line Feed',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u000a',\n  },\n  {\n    code: 0x000b,\n    description: 'Vertical Tab',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u000b',\n  },\n  {\n    code: 0x000c,\n    description: 'Form Feed',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u000c',\n  },\n  {\n    code: 0x000d,\n    description: 'Carriage Return',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u000d',\n  },\n  {\n    code: 0x0020,\n    description: 'Space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u0020',\n  },\n  /*\n  {\n    code: 0x0085,\n    description: 'Next line',\n    es5: false,\n    es2015: false,\n    es2016: false,\n    es2017: false,\n    es2018: false,\n    string: '\\u0085'\n  }\n  */\n  {\n    code: 0x00a0,\n    description: 'No-break space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u00a0',\n  },\n  {\n    code: 0x1680,\n    description: 'Ogham space mark',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u1680',\n  },\n  {\n    code: 0x180e,\n    description: 'Mongolian vowel separator',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: false,\n    es2018: false,\n    string: '\\u180e',\n  },\n  {\n    code: 0x2000,\n    description: 'En quad',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2000',\n  },\n  {\n    code: 0x2001,\n    description: 'Em quad',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2001',\n  },\n  {\n    code: 0x2002,\n    description: 'En space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2002',\n  },\n  {\n    code: 0x2003,\n    description: 'Em space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2003',\n  },\n  {\n    code: 0x2004,\n    description: 'Three-per-em space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2004',\n  },\n  {\n    code: 0x2005,\n    description: 'Four-per-em space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2005',\n  },\n  {\n    code: 0x2006,\n    description: 'Six-per-em space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2006',\n  },\n  {\n    code: 0x2007,\n    description: 'Figure space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2007',\n  },\n  {\n    code: 0x2008,\n    description: 'Punctuation space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2008',\n  },\n  {\n    code: 0x2009,\n    description: 'Thin space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2009',\n  },\n  {\n    code: 0x200a,\n    description: 'Hair space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u200a',\n  },\n  /*\n  {\n    code: 0x200b,\n    description: 'Zero width space',\n    es5: false,\n    es2015: false,\n    es2016: false,\n    es2017: false,\n    es2018: false,\n    string: '\\u200b'\n  },\n  */\n  {\n    code: 0x2028,\n    description: 'Line separator',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2028',\n  },\n  {\n    code: 0x2029,\n    description: 'Paragraph separator',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2029',\n  },\n  {\n    code: 0x202f,\n    description: 'Narrow no-break space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u202f',\n  },\n  {\n    code: 0x205f,\n    description: 'Medium mathematical space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u205f',\n  },\n  {\n    code: 0x3000,\n    description: 'Ideographic space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u3000',\n  },\n  {\n    code: 0xfeff,\n    description: 'Byte Order Mark',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\ufeff',\n  },\n];\n\n/**\n * A string of the ES5 to ES2016 whitespace characters.\n *\n * @type string\n */\nlet stringES2016 = '';\n\n/**\n * A string of the ES2017 to ES2018 whitespace characters.\n *\n * @type string\n */\nlet stringES2018 = '';\nconst {length} = list;\nfor (let i = 0; i < length; i += 1) {\n  if (list[i].es2016) {\n    stringES2016 += list[i].string;\n  }\n\n  if (list[i].es2018) {\n    stringES2018 += list[i].string;\n  }\n}\n\nconst string2018 = stringES2018;\n\nexport default string2018;\nexport const string2016 = stringES2016;\n","import attempt from 'attempt-x';\nimport isSymbol from 'is-symbol';\n\nconst hasSymbolSupport = attempt(() => {\n  /* eslint-disable-next-line compat/compat */\n  return typeof Symbol === 'function' && isSymbol(Symbol(''));\n});\n\n/**\n * Indicates if `Symbol`exists and creates the correct type.\n * `true`, if it exists and creates the correct type, otherwise `false`.\n *\n * @type boolean\n */\nexport default hasSymbolSupport.threw === false && hasSymbolSupport.value === true;\n","/**\n * The abstract operation ToBoolean converts argument to a value of type Boolean.\n *\n * @param {*} [value] - The value to be converted.\n * @returns {boolean} 'true' if value is truthy; otherwise 'false'.\n */\nconst toBoolean = function toBoolean(value) {\n  return !!value;\n};\n\nexport default toBoolean;\n","const nativeObjectToString = {}.toString;\n\n/**\n * The `toStringTag` method returns \"[object type]\", where type is the\n * object type.\n *\n * @param {*} [value] - The object of which to get the object type string.\n * @returns {string} The object type string.\n */\nconst toStringTag = function toStringTag(value) {\n  if (value === null) {\n    return '[object Null]';\n  }\n\n  if (typeof value === 'undefined') {\n    return '[object Undefined]';\n  }\n\n  return nativeObjectToString.call(value);\n};\n\nexport default toStringTag;\n","import hasSymbols from 'has-symbol-support-x';\nimport isSymbol from 'is-symbol';\n\n/**\n * Indicates if `Symbol.toStringTag`exists and is the correct type.\n * `true`, if it exists and is the correct type, otherwise `false`.\n *\n * @type boolean\n */\nexport default hasSymbols &&\n  /* eslint-disable-next-line compat/compat */\n  isSymbol(Symbol.toStringTag);\n","/**\n * Checks if `value` is `null` or `undefined`.\n *\n * @param {*} [value] - The value to check.\n * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n */\nconst isNil = function isNil(value) {\n  /* eslint-disable-next-line lodash/prefer-is-nil */\n  return value === null || typeof value === 'undefined';\n};\n\nexport default isNil;\n","import isNil from 'is-nil-x';\n\n/**\n * The abstract operation RequireObjectCoercible throws an error if argument\n * is a value that cannot be converted to an Object using ToObject.\n *\n * @param {*} [value] - The `value` to check.\n * @throws {TypeError} If `value` is a `null` or `undefined`.\n * @returns {string} The `value`.\n */\nconst requireObjectCoercible = function requireObjectCoercible(value) {\n  if (isNil(value)) {\n    throw new TypeError(`Cannot call method on ${value}`);\n  }\n\n  return value;\n};\n\nexport default requireObjectCoercible;\n","import isSymbol from 'is-symbol';\n\nconst ERROR_MESSAGE = 'Cannot convert a Symbol value to a string';\nconst castString = ERROR_MESSAGE.constructor;\n/**\n * The abstract operation ToString converts argument to a value of type String.\n *\n * @param {*} [value] - The value to convert to a string.\n * @throws {TypeError} If `value` is a Symbol.\n * @returns {string} The converted value.\n */\nconst ToString = function ToString(value) {\n  if (isSymbol(value)) {\n    throw new TypeError(ERROR_MESSAGE);\n  }\n\n  return castString(value);\n};\n\nexport default ToString;\n","import requireObjectCoercible from 'require-object-coercible-x';\nimport toStr from 'to-string-x';\n\n/**\n * This method requires an argument is corecible then converts using ToString.\n *\n * @param {*} [value] - The value to converted to a string.\n * @throws {TypeError} If value is null or undefined.\n * @returns {string} The value as a string.\n */\nconst requireCoercibleToString = function requireCoercibleToString(value) {\n  return toStr(requireObjectCoercible(value));\n};\n\nexport default requireCoercibleToString;\n","import requireCoercibleToString from 'require-coercible-to-string-x';\nimport whiteSpace from 'white-space-x';\n\nconst EMPTY_STRING = '';\nconst RegExpCtr = /none/.constructor;\nconst reLeft = new RegExpCtr(`^[${whiteSpace}]+`);\nconst {replace} = EMPTY_STRING;\n/**\n * This method removes whitespace from the start of a string. (ES2019).\n *\n * @param {string} [string] - The string to trim the left end whitespace from.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @returns {string} The left trimmed string.\n */\nconst trimStart = function trimStart(string) {\n  return replace.call(requireCoercibleToString(string), reLeft, EMPTY_STRING);\n};\n\nexport default trimStart;\n","import requireCoercibleToString from 'require-coercible-to-string-x';\nimport whiteSpace from 'white-space-x';\n\nconst EMPTY_STRING = '';\nconst RegExpCtr = /none/.constructor;\nconst reRight2018 = new RegExpCtr(`[${whiteSpace}]+$`);\nconst {replace} = EMPTY_STRING;\n\n/**\n * This method removes whitespace from the end of a string. (ES2019).\n *\n * @param {string} [string] - The string to trim the right end whitespace from.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @returns {string} The right trimmed string.\n */\nconst trimEnd = function trimEnd(string) {\n  return replace.call(requireCoercibleToString(string), reRight2018, EMPTY_STRING);\n};\n\nexport default trimEnd;\n","import trimStart from 'trim-left-x';\nimport trimEnd from 'trim-right-x';\n\n/**\n * This method removes whitespace from the start and end of a string.\n * (ES2019).\n *\n * @param {string} [string] - The string to trim the whitespace from.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @returns {string} The trimmed string.\n */\nconst trim = function trim(string) {\n  return trimStart(trimEnd(string));\n};\n\nexport default trim;\n","import trim from 'trim-x';\nimport whiteSpace from 'white-space-x';\n\nconst SPACE = ' ';\nconst RegExpCtr = /none/.constructor;\nconst reNormalize2018 = new RegExpCtr(`[${whiteSpace}]+`, 'g');\nconst {replace} = SPACE;\n\n/**\n * This method strips leading and trailing white-space from a string,\n * replaces sequences of whitespace characters by a single space,\n * and returns the resulting string. (ES2019).\n *\n * @param {string} [string] - The string to be normalized.\n * @throws {TypeError} If string is null or undefined or not coercible.\n */\nconst normalizeSpace = function normalizeSpace(string) {\n  return replace.call(trim(string), reNormalize2018, SPACE);\n};\n\nexport default normalizeSpace;\n","import toStr from 'to-string-x';\nimport requireCoercibleToString from 'require-coercible-to-string-x';\n\nconst EMPTY_STRING = '';\nconst STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/gm;\nconst {replace} = EMPTY_STRING;\n\n/**\n * This method replaces comments in a string.\n *\n * @param {string} [string] - The string to be stripped.\n * @param {string} [replacement=''] - The string to be used as a replacement.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @throws {TypeError} If replacement is not coercible.\n * @returns {string} The new string with the comments replaced.\n */\nconst replaceComments = function replaceComments(string, replacement) {\n  return replace.call(requireCoercibleToString(string), STRIP_COMMENTS, arguments.length > 1 ? toStr(replacement) : EMPTY_STRING);\n};\n\nexport default replaceComments;\n","import attempt from 'attempt-x';\nimport toBoolean from 'to-boolean-x';\nimport toStringTag from 'to-string-tag-x';\nimport hasToStringTag from 'has-to-string-tag-x';\nimport isPrimitive from 'is-primitive';\nimport normalise from 'normalize-space-x';\nimport deComment from 'replace-comments-x';\n\nconst FunctionCtr = attempt.constructor;\nconst SPACE = ' ';\nconst fToString = attempt.toString;\nconst funcTag = '[object Function]';\nconst genTag = '[object GeneratorFunction]';\nconst asyncTag = '[object AsyncFunction]';\nconst ctrRx = /^class /;\nconst {test} = ctrRx;\n\nconst hasNativeClass =\n  attempt(function attemptee() {\n    /* eslint-disable-next-line babel/new-cap */\n    return FunctionCtr('\"use strict\"; return class My {};')();\n  }).threw === false;\n\nconst testClassString = function testClassString(value) {\n  return test.call(ctrRx, normalise(deComment(fToString.call(value), SPACE)));\n};\n\nconst isES6ClassFn = function isES6ClassFunc(value) {\n  const result = attempt(testClassString, value);\n\n  return result.threw === false && result.value;\n};\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @private\n * @param {*} value - The value to check.\n * @param {boolean} allowClass - Whether to filter ES6 classes.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n * else `false`.\n */\nconst tryFuncToString = function funcToString(value, allowClass) {\n  if (hasNativeClass && allowClass === false && isES6ClassFn(value)) {\n    return false;\n  }\n\n  return attempt.call(value, fToString).threw === false;\n};\n\nconst compareTags = function compareTags(value) {\n  const strTag = toStringTag(value);\n\n  return strTag === funcTag || strTag === genTag || strTag === asyncTag;\n};\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @param {*} value - The value to check.\n * @param {boolean} [allowClass=false] - Whether to filter ES6 classes.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n * else `false`.\n */\nconst isFunction = function isFunction(value, allowClass) {\n  if (isPrimitive(value)) {\n    return false;\n  }\n\n  if (hasToStringTag) {\n    return tryFuncToString(value, toBoolean(allowClass));\n  }\n\n  if (hasNativeClass && toBoolean(allowClass) === false && isES6ClassFn(value)) {\n    return false;\n  }\n\n  return compareTags(value);\n};\n\nexport default isFunction;\n","import hasSymbols from 'has-symbol-support-x';\nimport isPrimitive from 'is-primitive';\nimport isDate from 'is-date-object';\nimport isSymbol from 'is-symbol';\nimport isFunction from 'is-function-x';\nimport requireObjectCoercible from 'require-object-coercible-x';\nimport isNil from 'is-nil-x';\n\nconst ZERO = 0;\nconst ONE = 1;\n/* eslint-disable-next-line no-void */\nconst UNDEFINED = void ZERO;\nconst NUMBER = 'number';\nconst STRING = 'string';\nconst DEFAULT = 'default';\nconst StringCtr = STRING.constructor;\nconst NumberCtr = ZERO.constructor;\n/* eslint-disable-next-line compat/compat */\nconst symToPrimitive = hasSymbols && Symbol.toPrimitive;\n/* eslint-disable-next-line compat/compat */\nconst symValueOf = hasSymbols && Symbol.prototype.valueOf;\n\nconst toStringOrder = ['toString', 'valueOf'];\nconst toNumberOrder = ['valueOf', 'toString'];\nconst orderLength = 2;\n\nconst assertHint = function assertHint(hint) {\n  if (typeof hint !== 'string' || (hint !== NUMBER && hint !== STRING)) {\n    throw new TypeError('hint must be \"string\" or \"number\"');\n  }\n\n  return hint;\n};\n\n/**\n * @param {*} ordinary - The ordinary to convert.\n * @param {*} hint - The hint.\n * @returns {*} - The primitive.\n */\nconst ordinaryToPrimitive = function ordinaryToPrimitive(ordinary, hint) {\n  requireObjectCoercible(ordinary);\n  assertHint(hint);\n\n  const methodNames = hint === STRING ? toStringOrder : toNumberOrder;\n  let method;\n  let result;\n  for (let i = ZERO; i < orderLength; i += ONE) {\n    method = ordinary[methodNames[i]];\n\n    if (isFunction(method)) {\n      result = method.call(ordinary);\n\n      if (isPrimitive(result)) {\n        return result;\n      }\n    }\n  }\n\n  throw new TypeError('No default value');\n};\n\n/**\n * @param {*} object - The object.\n * @param {*} property - The property.\n * @returns {undefined|Function} - The method.\n */\nconst getMethod = function getMethod(object, property) {\n  const func = object[property];\n\n  if (isNil(func) === false) {\n    if (isFunction(func) === false) {\n      throw new TypeError(`${func} returned for property ${property} of object ${object} is not a function`);\n    }\n\n    return func;\n  }\n\n  return UNDEFINED;\n};\n\n/**\n * Get the hint.\n *\n * @param {*} value - The value to compare.\n * @param {boolean} supplied - Was a value supplied.\n * @returns {string} - The hint string.\n */\nconst getHint = function getHint(value, supplied) {\n  if (supplied) {\n    if (value === StringCtr) {\n      return STRING;\n    }\n\n    if (value === NumberCtr) {\n      return NUMBER;\n    }\n  }\n\n  return DEFAULT;\n};\n\n/**\n * Get the primitive from the exotic.\n *\n * @param {*} value - The exotic.\n * @returns {*} - The primitive.\n */\nconst getExoticToPrim = function getExoticToPrim(value) {\n  if (hasSymbols) {\n    if (symToPrimitive) {\n      return getMethod(value, symToPrimitive);\n    }\n\n    if (isSymbol(value)) {\n      return symValueOf;\n    }\n  }\n\n  return UNDEFINED;\n};\n\nconst evalExotic = function evalExotic(obj) {\n  const {exoticToPrim, input, hint} = obj;\n  const result = exoticToPrim.call(input, hint);\n\n  if (isPrimitive(result)) {\n    return result;\n  }\n\n  throw new TypeError('unable to convert exotic object to primitive');\n};\n\nconst evalPrimitive = function evalPrimitive(input, hint) {\n  const newHint = hint === DEFAULT && (isDate(input) || isSymbol(input)) ? STRING : hint;\n\n  return ordinaryToPrimitive(input, newHint === DEFAULT ? NUMBER : newHint);\n};\n\n/**\n * This method converts a JavaScript object to a primitive value.\n * Note: When toPrimitive is called with no hint, then it generally behaves as\n * if the hint were Number. However, objects may over-ride this behaviour by\n * defining a @@toPrimitive method. Of the objects defined in this specification\n * only Date objects (see 20.3.4.45) and Symbol objects (see 19.4.3.4) over-ride\n * the default ToPrimitive behaviour. Date objects treat no hint as if the hint\n * were String.\n *\n * @param {*} input - The input to convert.\n * @param {Function} [preferredType] - The preferred type (String or Number).\n * @throws {TypeError} If unable to convert input to a primitive.\n * @returns {string|number} The converted input as a primitive.\n * @see {http://www.ecma-international.org/ecma-262/6.0/#sec-toprimitive}\n */\nconst toPrimitive = function toPrimitive(input, preferredType) {\n  if (isPrimitive(input)) {\n    return input;\n  }\n\n  const hint = getHint(preferredType, arguments.length > ONE);\n  const exoticToPrim = getExoticToPrim(input);\n\n  return typeof exoticToPrim === 'undefined' ? evalPrimitive(input, hint) : evalExotic({exoticToPrim, input, hint});\n};\n\nexport default toPrimitive;\n","import NAN from 'nan-x';\nimport toStr from 'to-string-x';\nimport trimLeft from 'trim-left-x';\n\nconst nativeParseInt = parseInt;\n/**  @type {Function} */\nconst castNumber = (0).constructor;\n// noinspection JSPotentiallyInvalidConstructorUsage\nconst {charAt} = '';\nconst hexRegex = /^[-+]?0[xX]/;\nconst {test} = hexRegex;\n\n/**\n * This method parses a string argument and returns an integer of the specified\n * radix (the base in mathematical numeral systems). (ES2019).\n *\n * @param {string} [string] - The value to parse. If the string argument is not a\n *  string, then it is converted to a string (using the ToString abstract\n *  operation). Leading whitespace in the string argument is ignored.\n * @param {number} [radix] - An integer between 2 and 36 that represents the radix\n *  (the base in mathematical numeral systems) of the above mentioned string.\n *  Specify 10 for the decimal numeral system commonly used by humans. Always\n *  specify this parameter to eliminate reader confusion and to guarantee\n *  predictable behavior. Different implementations produce different results\n *  when a radix is not specified, usually defaulting the value to 10.\n * @throws {TypeError} If target is a Symbol or is not coercible.\n * @returns {number} An integer number parsed from the given string. If the first\n *  character cannot be converted to a number, NaN is returned.\n */\nconst $parseInt = function $parseInt(string, radix) {\n  const str = trimLeft(toStr(string));\n\n  if (charAt.call(str, 0) === '\\u180E') {\n    return NAN;\n  }\n\n  return nativeParseInt(str, castNumber(radix) || (test.call(hexRegex, str) ? 16 : 10));\n};\n\nexport default $parseInt;\n","/**\n * The constant NaN derived mathematically by 0 / 0.\n *\n * @type number\n */\nexport default 0 / 0;\n","import isSymbol from 'is-symbol';\nimport toPrimitive from 'to-primitive-x';\nimport trim from 'trim-x';\nimport $parseInt from 'parse-int-x';\nimport NAN from 'nan-x';\n\nconst binaryRadix = 2;\nconst octalRadix = 8;\nconst testCharsCount = 2;\nconst ERROR_MESSAGE = 'Cannot convert a Symbol value to a number';\n\nconst castNumber = testCharsCount.constructor;\nconst pStrSlice = ERROR_MESSAGE.slice;\n\nconst binaryRegex = /^0b[01]+$/i;\nconst RegExpConstructor = binaryRegex.constructor;\n// Note that in IE 8, RegExp.prototype.test doesn't seem to exist: ie, \"test\" is\n// an own property of regexes. wtf.\nconst {test} = binaryRegex;\nconst isBinary = function isBinary(value) {\n  return test.call(binaryRegex, value);\n};\n\nconst octalRegex = /^0o[0-7]+$/i;\nconst isOctal = function isOctal(value) {\n  return test.call(octalRegex, value);\n};\n\nconst nonWSregex = new RegExpConstructor('[\\u0085\\u180e\\u200b\\ufffe]', 'g');\nconst hasNonWS = function hasNonWS(value) {\n  return test.call(nonWSregex, value);\n};\n\nconst invalidHexLiteral = /^[-+]0x[0-9a-f]+$/i;\nconst isInvalidHexLiteral = function isInvalidHexLiteral(value) {\n  return test.call(invalidHexLiteral, value);\n};\n\nconst assertNotSymbol = function assertNotSymbol(value) {\n  if (isSymbol(value)) {\n    throw new TypeError(ERROR_MESSAGE);\n  }\n\n  return value;\n};\n\nconst parseBase = function parseBase(value, radix) {\n  return $parseInt(pStrSlice.call(value, testCharsCount), radix);\n};\n\nconst parseString = function parseString(toNum, value) {\n  if (isBinary(value)) {\n    return toNum(parseBase(value, binaryRadix));\n  }\n\n  if (isOctal(value)) {\n    return toNum(parseBase(value, octalRadix));\n  }\n\n  return null;\n};\n\nconst convertString = function convertString(toNum, value) {\n  const val = parseString(toNum, value);\n\n  if (val !== null) {\n    return val;\n  }\n\n  if (hasNonWS(value) || isInvalidHexLiteral(value)) {\n    return NAN;\n  }\n\n  const trimmed = trim(value);\n\n  if (trimmed !== value) {\n    return toNum(trimmed);\n  }\n\n  return null;\n};\n\n/**\n * This method converts argument to a value of type Number. (ES2019).\n *\n * @param {*} [argument] - The argument to convert to a number.\n * @throws {TypeError} - If argument is a Symbol or not coercible.\n * @returns {*} The argument converted to a number.\n */\nconst toNumber = function toNumber(argument) {\n  const value = assertNotSymbol(toPrimitive(argument, castNumber));\n\n  if (typeof value === 'string') {\n    const val = convertString(toNumber, value);\n\n    if (val !== null) {\n      return val;\n    }\n  }\n\n  return castNumber(value);\n};\n\nexport default toNumber;\n","/**\n * This method determines whether the passed value is NaN and its type is\n * `Number`. It is a more robust version of the original, global isNaN().\n *\n * @param {*} [value] - The value to be tested for NaN.\n * @returns {boolean} `true` if the given value is NaN and its type is Number;\n *  otherwise, `false`.\n */\nconst isNaN = function isNaN(value) {\n  /* eslint-disable-next-line no-self-compare */\n  return value !== value;\n};\n\nexport default isNaN;\n","import numberIsNaN from 'is-nan-x';\nimport INFINITY from 'infinity-x';\n\n/**\n * This method determines whether the passed value is a finite number.\n *\n * @param {*} [number] - The value to be tested for finiteness.\n * @returns {boolean} A Boolean indicating whether or not the given value is a finite number.\n */\nconst isFinite = function isFinite(number) {\n  return typeof number === 'number' && numberIsNaN(number) === false && number !== INFINITY && number !== -INFINITY;\n};\n\nexport default isFinite;\n","/**\n * The constant value Infinity derived mathematically by 1 / 0.\n *\n * @type number\n */\nexport default 1 / 0;\n","import toNumber from 'to-number-x';\nimport numberIsNaN from 'is-nan-x';\n\n/**\n * This method returns the sign of a number, indicating whether the number is positive,\n * negative or zero. (ES2019).\n *\n * @param {*} x - A number.\n * @returns {number} A number representing the sign of the given argument. If the argument\n * is a positive number, negative number, positive zero or negative zero, the function will\n * return 1, -1, 0 or -0 respectively. Otherwise, NaN is returned.\n */\nconst sign = function sign(x) {\n  const n = toNumber(x);\n\n  if (n === 0 || numberIsNaN(n)) {\n    return n;\n  }\n\n  return n > 0 ? 1 : -1;\n};\n\nexport default sign;\n","import toNumber from 'to-number-x';\nimport numberIsNaN from 'is-nan-x';\nimport numberIsFinite from 'is-finite-x';\nimport mathSign from 'math-sign-x';\n\nconst {abs, floor} = Math;\n\n/**\n * Converts `value` to an integer. (ES2019).\n *\n * @param {*} value - The value to convert.\n * @returns {number} Returns the converted integer.\n */\nconst toInteger = function toInteger(value) {\n  const number = toNumber(value);\n\n  if (numberIsNaN(number)) {\n    return 0;\n  }\n\n  if (number === 0 || numberIsFinite(number) === false) {\n    return number;\n  }\n\n  return mathSign(number) * floor(abs(number));\n};\n\nexport default toInteger;\n","import toInteger from 'to-integer-x';\n\nconst MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Converts `value` to an integer suitable for use as the length of an\n * array-like object. (ES2019).\n *\n * @param {*} value - The value to convert.\n * @returns {number} Returns the converted integer.\n */\nconst toLength = function toLength(value) {\n  const len = toInteger(value);\n\n  // includes converting -0 to +0\n  if (len <= 0) {\n    return 0;\n  }\n\n  if (len > MAX_SAFE_INTEGER) {\n    return MAX_SAFE_INTEGER;\n  }\n\n  return len;\n};\n\nexport default toLength;\n","import isFunction from 'is-function-x';\nimport isPrimitive from 'is-primitive';\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not a\n * primitive and not a function.\n *\n * @param {*} [value] - The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nconst isObjectLike = function isObjectLike(value) {\n  return isPrimitive(value) === false && isFunction(value, true) === false;\n};\n\nexport default isObjectLike;\n","import requireObjectCoercible from 'require-object-coercible-x';\n\nconst castObject = {}.constructor;\n\n/**\n * The abstract operation ToObject converts argument to a value of\n * type Object.\n *\n * @param {*} value - The `value` to convert.\n * @throws {TypeError} If `value` is a `null` or `undefined`.\n * @returns {!object} The `value` converted to an object.\n */\nconst toObject = function toObject(value) {\n  return castObject(requireObjectCoercible(value));\n};\n\nexport default toObject;\n","import hasSymbols from 'has-symbol-support-x';\nimport toPrimitive from 'to-primitive-x';\nimport toStr from 'to-string-x';\n\n/**\n * This method Converts argument to a value that can be used as a property key.\n *\n * @param {*} argument - The argument to convert to a property key.\n * @throws {TypeError} If argument is not a symbol and is not coercible to a string.\n * @returns {string|symbol} The converted argument.\n */\nconst toPropertyKey = function toPropertyKey(argument) {\n  const key = toPrimitive(argument, String);\n\n  return hasSymbols && typeof key === 'symbol' ? key : toStr(key);\n};\n\nexport default toPropertyKey;\n","import toObject from 'to-object-x';\nimport toPropertyKey from 'to-property-key-x';\nimport attempt from 'attempt-x';\nimport hasSymbolSupport from 'has-symbol-support-x';\nimport owns from 'has-own-property-x';\nimport isPrimitive from 'is-primitive';\nimport isString from 'is-string';\nimport isIndex from 'is-index-x';\nimport propertyIsEnumerable from 'property-is-enumerable-x';\nimport toBoolean from 'to-boolean-x';\n\nconst EMPTY_STRING = '';\nconst {charAt} = EMPTY_STRING;\nconst ObjectCtr = {}.constructor;\nconst ngopd = ObjectCtr.getOwnPropertyDescriptor;\nconst nativeGOPD = typeof ngopd === 'function' && ngopd;\nlet getOPDFallback1;\nlet getOPDFallback2;\n\n// ES5 15.2.3.3\n// http://es5.github.com/#x15.2.3.3\n\nconst doesGOPDWork = function doesGOPDWork(object, prop) {\n  object[toPropertyKey(prop)] = 0;\n  const testResult = attempt(nativeGOPD, object, prop);\n\n  return testResult.threw === false && testResult.value.value === 0;\n};\n\n// check whether getOwnPropertyDescriptor works if it's given. Otherwise, shim partially.\n/**\n * This method returns a property descriptor for an own property (that is,\n * one directly present on an object and not in the object's prototype chain)\n * of a given object.\n *\n * @param {*} object - The object in which to look for the property.\n * @param {*} property - The name of the property whose description is to be retrieved.\n * @returns {object} A property descriptor of the given property if it exists on the object, undefined otherwise.\n */\nlet $getOwnPropertyDescriptor;\n\nif (nativeGOPD) {\n  const doc = typeof document !== 'undefined' && document;\n  const getOPDWorksOnDom = doc ? doesGOPDWork(doc.createElement('div'), 'sentinel') : true;\n\n  if (getOPDWorksOnDom) {\n    const res = attempt(nativeGOPD, toObject('abc'), 1);\n    const worksWithStr = res.threw === false && res.value && res.value.value === 'b';\n\n    if (worksWithStr) {\n      const getOPDWorksOnObject = doesGOPDWork({}, 'sentinel');\n\n      if (getOPDWorksOnObject) {\n        const worksWithPrim = attempt(nativeGOPD, 42, 'name').threw === false;\n        /* eslint-disable-next-line compat/compat */\n        const worksWithObjSym = hasSymbolSupport && doesGOPDWork({}, toObject(Symbol(EMPTY_STRING)));\n\n        if (worksWithObjSym) {\n          if (worksWithPrim) {\n            $getOwnPropertyDescriptor = nativeGOPD;\n          } else {\n            $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(object, property) {\n              return nativeGOPD(toObject(object), property);\n            };\n          }\n        } else if (worksWithPrim) {\n          $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(object, property) {\n            return nativeGOPD(object, toPropertyKey(property));\n          };\n        } else {\n          $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(object, property) {\n            return nativeGOPD(toObject(object), toPropertyKey(property));\n          };\n        }\n      } else {\n        getOPDFallback1 = nativeGOPD;\n      }\n    } else {\n      getOPDFallback2 = nativeGOPD;\n    }\n  }\n}\n\nif (toBoolean($getOwnPropertyDescriptor) === false || getOPDFallback1 || getOPDFallback2) {\n  const prototypeOfObject = ObjectCtr.prototype;\n\n  // If JS engine supports accessors creating shortcuts.\n  let lookupGetter;\n  let lookupSetter;\n  const supportsAccessors = owns(prototypeOfObject, '__defineGetter__');\n\n  if (supportsAccessors) {\n    /* eslint-disable-next-line no-underscore-dangle */\n    const lg = prototypeOfObject.__lookupGetter__;\n    /* eslint-disable-next-line no-underscore-dangle */\n    const ls = prototypeOfObject.__lookupSetter__;\n    lookupGetter = function $lookupGetter(object, property) {\n      return lg.call(object, property);\n    };\n\n    lookupSetter = function $lookupSetter(object, property) {\n      return ls.call(object, property);\n    };\n  }\n\n  $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(object, property) {\n    const obj = toObject(object);\n    const propKey = toPropertyKey(property);\n\n    let result;\n\n    // make a valiant attempt to use the real getOwnPropertyDescriptor for I8's DOM elements.\n    if (getOPDFallback1) {\n      result = attempt.call(toObject, getOPDFallback1, obj, propKey);\n\n      if (result.threw === false) {\n        return result.value;\n      }\n      // try the shim if the real one doesn't work\n    }\n\n    const isStringIndex = isString(obj) && isIndex(propKey, obj.length);\n\n    if (getOPDFallback2 && isStringIndex === false) {\n      result = attempt.call(toObject, getOPDFallback2, obj, propKey);\n\n      if (result.threw === false) {\n        return result.value;\n      }\n      // try the shim if the real one doesn't work\n    }\n\n    /* eslint-disable-next-line no-void */\n    let descriptor = void 0;\n\n    // If object does not owns property return undefined immediately.\n    if (isStringIndex === false && owns(obj, propKey) === false) {\n      return descriptor;\n    }\n\n    // If object has a property then it's for sure `configurable`, and\n    // probably `enumerable`. Detect enumerability though.\n    descriptor = {\n      configurable: isPrimitive(object) === false && isStringIndex === false,\n      enumerable: propertyIsEnumerable(obj, propKey),\n    };\n\n    // If JS engine supports accessor properties then property may be a\n    // getter or setter.\n    if (supportsAccessors) {\n      // Unfortunately `__lookupGetter__` will return a getter even\n      // if object has own non getter property along with a same named\n      // inherited getter. To avoid misbehavior we temporary remove\n      // `__proto__` so that `__lookupGetter__` will return getter only\n      // if it's owned by an object.\n      /* eslint-disable-next-line no-proto */\n      const prototype = obj.__proto__;\n      const notPrototypeOfObject = obj !== prototypeOfObject;\n\n      // avoid recursion problem, breaking in Opera Mini when\n      // Object.getOwnPropertyDescriptor(Object.prototype, 'toString')\n      // or any other Object.prototype accessor\n      if (notPrototypeOfObject) {\n        /* eslint-disable-next-line no-proto */\n        obj.__proto__ = prototypeOfObject;\n      }\n\n      const getter = lookupGetter(obj, propKey);\n      const setter = lookupSetter(obj, propKey);\n\n      if (notPrototypeOfObject) {\n        // Once we have getter and setter we can put values back.\n        /* eslint-disable-next-line no-proto */\n        obj.__proto__ = prototype;\n      }\n\n      if (getter || setter) {\n        if (getter) {\n          descriptor.get = getter;\n        }\n\n        if (setter) {\n          descriptor.set = setter;\n        }\n\n        // If it was accessor property we're done and return here\n        // in order to avoid adding `value` to the descriptor.\n        return descriptor;\n      }\n    }\n\n    // If we got this far we know that object has an own property that is\n    // not an accessor so we set it as a value and return descriptor.\n    if (isStringIndex) {\n      descriptor.value = charAt.call(obj, propKey);\n      descriptor.writable = false;\n    } else {\n      descriptor.value = obj[propKey];\n      descriptor.writable = true;\n    }\n\n    return descriptor;\n  };\n}\n\nconst gOPS = $getOwnPropertyDescriptor;\n\nexport default gOPS;\n","import toObject from 'to-object-x';\nimport toPropertyKey from 'to-property-key-x';\n\nconst hop = {}.hasOwnProperty;\n\n/**\n * The `hasOwnProperty` method returns a boolean indicating whether\n * the `object` has the specified `property`. Does not attempt to fix known\n * issues in older browsers, but does ES6ify the method.\n *\n * @param {!object} object - The object to test.\n * @throws {TypeError} If object is null or undefined.\n * @param {string|number|symbol} property - The name or Symbol of the property to test.\n * @returns {boolean} `true` if the property is set on `object`, else `false`.\n */\nconst hasOwnProperty = function hasOwnProperty(object, property) {\n  return hop.call(toObject(object), toPropertyKey(property));\n};\n\nexport default hasOwnProperty;\n","import hasSymbols from 'has-symbol-support-x';\nimport isSymbol from 'is-symbol';\n\n/* eslint-disable-next-line compat/compat */\nconst pToString = hasSymbols && Symbol.prototype.toString;\nconst isSymbolFn = typeof pToString === 'function' && isSymbol;\n/** @type {Function} */\nconst castString = ''.constructor;\n\n/**\n * The abstract operation ToString converts argument to a value of type String,\n * however the specification states that if the argument is a Symbol then a\n * 'TypeError' is thrown. This version also allows Symbols be converted to\n * a string. Other uncoercible exotics will still throw though.\n *\n * @param {*} [value] - The value to convert to a string.\n * @returns {string} The converted value.\n */\nconst toStringSymbolsSupported = function toStringSymbolsSupported(value) {\n  return isSymbolFn && isSymbolFn(value) ? pToString.call(value) : castString(value);\n};\n\nexport default toStringSymbolsSupported;\n","import toNumber from 'to-number-x';\n\nconst getMaxMin = function getMaxMin(args) {\n  const minVal = toNumber(args[1]);\n  const result = args.length < 3 ? {max: minVal, min: 0} : {max: toNumber(args[2]), min: minVal};\n\n  if (result.min > result.max) {\n    throw new RangeError('\"min\" must be less than \"max\"');\n  }\n\n  return result;\n};\n\n// eslint-disable jsdoc/check-param-names\n// noinspection JSCommentMatchesSignature\n/**\n * This method clamp a number to min and max limits inclusive.\n *\n * @param {number} value - The number to be clamped.\n * @param {number} [min=0] - The minimum number.\n * @param {number} max - The maximum number.\n * @throws {RangeError} If min > max.\n * @returns {number} The clamped number.\n */\n// eslint-enable jsdoc/check-param-names\nconst clamp = function clamp(value) {\n  const number = toNumber(value);\n\n  if (arguments.length < 2) {\n    return number;\n  }\n\n  /* eslint-disable-next-line prefer-rest-params */\n  const {max, min} = getMaxMin(arguments);\n\n  if (number < min) {\n    return min;\n  }\n\n  if (number > max) {\n    return max;\n  }\n\n  return number;\n};\n\nexport default clamp;\n","import safeToString from 'to-string-symbols-supported-x';\nimport toInteger from 'to-integer-x';\nimport toNumber from 'to-number-x';\nimport mathClamp from 'math-clamp-x';\n\nconst MAX_SAFE_INTEGER = 9007199254740991;\nconst reIsUint = /^(?:0|[1-9]\\d*)$/;\nconst rxTest = reIsUint.test;\n\n/**\n * This method determines whether the passed value is a zero based index.\n * JavaScript arrays are zero-indexed: the first element of an array is at\n * index 0, and the last element is at the index equal to the value of the\n * array's length property minus 1.\n *\n * @param {number|string} value - The value to be tested for being a zero based index.\n * @param {number} [length=MAX_SAFE_INTEGER] - The length that sets the upper bound.\n * @returns {boolean} A Boolean indicating whether or not the given value is a\n * zero based index within bounds.\n */\nconst isIndex = function isIndex(value, length) {\n  const string = safeToString(value);\n\n  if (rxTest.call(reIsUint, string) === false) {\n    return false;\n  }\n\n  const number = toNumber(string);\n\n  if (arguments.length > 1) {\n    return number < mathClamp(toInteger(length), MAX_SAFE_INTEGER);\n  }\n\n  return number < MAX_SAFE_INTEGER;\n};\n\nexport default isIndex;\n","import toPropertyKey from 'to-property-key-x';\nimport toObject from 'to-object-x';\n\nconst propIsEnumerable = {}.propertyIsEnumerable;\n\n/**\n * This method returns a Boolean indicating whether the specified property is\n * enumerable. Does not attempt to fix bugs in IE<9 or old Opera, otherwise it\n * does ES6ify the method.\n *\n * @param {!object} object - The object on which to test the property.\n * @param {string|symbol} property - The name of the property to test.\n * @throws {TypeError} If target is null or undefined.\n * @returns {boolean} A Boolean indicating whether the specified property is\n *  enumerable.\n */\nconst propertyIsEnumerable = function propertyIsEnumerable(object, property) {\n  return propIsEnumerable.call(toObject(object), toPropertyKey(property));\n};\n\nexport default propertyIsEnumerable;\n","import attempt from 'attempt-x';\nimport toObject from 'to-object-x';\nimport toPropertyKey from 'to-property-key-x';\nimport has from 'has-own-property-x';\nimport isFunction from 'is-function-x';\nimport assertIsObject from 'assert-is-object-x';\nimport toBoolean from 'to-boolean-x';\n\nconst ObjectCtr = {}.constructor;\nconst nd = ObjectCtr.defineProperty;\nconst nativeDefProp = typeof nd === 'function' && nd;\nlet definePropertyFallback;\n\nconst toPropertyDescriptor = function toPropertyDescriptor(desc) {\n  const object = toObject(desc);\n  const descriptor = {};\n\n  if (has(object, 'enumerable')) {\n    descriptor.enumerable = toBoolean(object.enumerable);\n  }\n\n  if (has(object, 'configurable')) {\n    descriptor.configurable = toBoolean(object.configurable);\n  }\n\n  if (has(object, 'value')) {\n    descriptor.value = object.value;\n  }\n\n  if (has(object, 'writable')) {\n    descriptor.writable = toBoolean(object.writable);\n  }\n\n  if (has(object, 'get')) {\n    const getter = object.get;\n\n    if (typeof getter !== 'undefined' && isFunction(getter) === false) {\n      throw new TypeError('getter must be a function');\n    }\n\n    descriptor.get = getter;\n  }\n\n  if (has(object, 'set')) {\n    const setter = object.set;\n\n    if (typeof setter !== 'undefined' && isFunction(setter) === false) {\n      throw new TypeError('setter must be a function');\n    }\n\n    descriptor.set = setter;\n  }\n\n  if ((has(descriptor, 'get') || has(descriptor, 'set')) && (has(descriptor, 'value') || has(descriptor, 'writable'))) {\n    throw new TypeError('Invalid property descriptor. Cannot both specify accessors and a value or writable attribute');\n  }\n\n  return descriptor;\n};\n\n// ES5 15.2.3.6\n// http://es5.github.com/#x15.2.3.6\n\n// Patch for WebKit and IE8 standard mode\n// Designed by hax <hax.github.com>\n// related issue: https://github.com/es-shims/es5-shim/issues#issue/5\n// IE8 Reference:\n//     http://msdn.microsoft.com/en-us/library/dd282900.aspx\n//     http://msdn.microsoft.com/en-us/library/dd229916.aspx\n// WebKit Bugs:\n//     https://bugs.webkit.org/show_bug.cgi?id=36423\n\n/**\n * This method defines a new property directly on an object, or modifies an\n * existing property on an object, and returns the object.\n *\n * @param {object} object - The object on which to define the property.\n * @param {string} property - The name of the property to be defined or modified.\n * @param {object} descriptor - The descriptor for the property being defined or modified.\n * @returns {object} The object that was passed to the function.\n * });.\n */\nlet $defineProperty;\n\n// check whether defineProperty works if it's given. Otherwise, shim partially.\nif (nativeDefProp) {\n  const testWorksWith = function testWorksWith(object) {\n    const testResult = attempt(nativeDefProp, object, 'sentinel', {});\n\n    return testResult.threw === false && testResult.value === object && 'sentinel' in object;\n  };\n\n  const doc = typeof document !== 'undefined' && document;\n\n  if (testWorksWith({}) && (toBoolean(doc) === false || testWorksWith(doc.createElement('div')))) {\n    $defineProperty = function defineProperty(object, property, descriptor) {\n      return nativeDefProp(assertIsObject(object), toPropertyKey(property), toPropertyDescriptor(descriptor));\n    };\n  } else {\n    definePropertyFallback = nativeDefProp;\n  }\n}\n\nif (toBoolean(nativeDefProp) === false || definePropertyFallback) {\n  const prototypeOfObject = ObjectCtr.prototype;\n  // If JS engine supports accessors creating shortcuts.\n  const supportsAccessors = has(prototypeOfObject, '__defineGetter__');\n  /* eslint-disable-next-line no-underscore-dangle */\n  const defineGetter = supportsAccessors && prototypeOfObject.__defineGetter_;\n  /* eslint-disable-next-line no-underscore-dangle,no-restricted-properties */\n  const defineSetter = supportsAccessors && prototypeOfObject.__defineSetter__;\n  /* eslint-disable-next-line no-underscore-dangle */\n  const lookupGetter = supportsAccessors && prototypeOfObject.__lookupGetter__;\n  /* eslint-disable-next-line no-underscore-dangle */\n  const lookupSetter = supportsAccessors && prototypeOfObject.__lookupSetter__;\n\n  $defineProperty = function defineProperty(object, property, descriptor) {\n    assertIsObject(object);\n    const propKey = toPropertyKey(property);\n    const propDesc = toPropertyDescriptor(descriptor);\n\n    // make a valiant attempt to use the real defineProperty for IE8's DOM elements.\n    if (definePropertyFallback) {\n      const result = attempt.call(ObjectCtr, definePropertyFallback, object, propKey, propDesc);\n\n      if (result.threw === false) {\n        return result.value;\n      }\n      // try the shim if the real one doesn't work\n    }\n\n    // If it's a data property.\n    if (has(propDesc, 'value')) {\n      // fail silently if 'writable', 'enumerable', or 'configurable' are requested but not supported\n      if (supportsAccessors && (lookupGetter.call(object, propKey) || lookupSetter.call(object, propKey))) {\n        // As accessors are supported only on engines implementing\n        // `__proto__` we can safely override `__proto__` while defining\n        // a property to make sure that we don't hit an inherited accessor.\n        /* eslint-disable-next-line no-proto */\n        const prototype = object.__proto__;\n        /* eslint-disable-next-line no-proto */\n        object.__proto__ = prototypeOfObject;\n        // Deleting a property anyway since getter / setter may be defined on object itself.\n        delete object[propKey];\n        object[propKey] = propDesc.value;\n        // Setting original `__proto__` back now.\n        /* eslint-disable-next-line no-proto */\n        object.__proto__ = prototype;\n      } else {\n        object[propKey] = propDesc.value;\n      }\n    } else {\n      if (supportsAccessors === false && (propDesc.get || propDesc.set)) {\n        throw new TypeError('getters & setters can not be defined on this javascript engine');\n      }\n\n      // If we got that far then getters and setters can be defined !!\n      if (propDesc.get) {\n        defineGetter.call(object, propKey, propDesc.get);\n      }\n\n      if (propDesc.set) {\n        defineSetter.call(object, propKey, propDesc.set);\n      }\n    }\n\n    return object;\n  };\n}\n\nconst defProp = $defineProperty;\n\nexport default defProp;\n","import safeToString from 'to-string-symbols-supported-x';\nimport isPrimitive from 'is-primitive';\n\n/**\n * Tests `value` to see if it is an object, throws a `TypeError` if it is\n * not. Otherwise returns the `value`.\n *\n * @param {*} value - The argument to be tested.\n * @throws {TypeError} Throws if `value` is not an object.\n * @returns {*} Returns `value` if it is an object.\n */\nconst assertIsObject = function assertIsObject(value) {\n  if (isPrimitive(value)) {\n    throw new TypeError(`${safeToString(value)} is not an object`);\n  }\n\n  return value;\n};\n\nexport default assertIsObject;\n","import toObject from 'to-object-x';\nimport isArguments from 'is-arguments';\nimport isArray from 'is-array-x';\nimport arrayLikeSlice from 'array-like-slice-x';\nimport attempt from 'attempt-x';\nimport isString from 'is-string';\n\nconst nativeSlice = [].slice;\n\nconst testArray = function testArray() {\n  const res = attempt.call([1, 2, 3], nativeSlice, 1, 2);\n\n  return res.threw || isArray(res.value) === false || res.value.length !== 1 || res.value[0] !== 2;\n};\n\nconst testString = function testString() {\n  const res = attempt.call('abc', nativeSlice, 1, 2);\n\n  return res.threw || isArray(res.value) === false || res.value.length !== 1 || res.value[0] !== 'b';\n};\n\nconst testDOM = function testDOM() {\n  const doc = typeof document !== 'undefined' && document;\n  const resultDocElement = doc ? attempt.call(doc.documentElement, nativeSlice).threw : false;\n\n  return resultDocElement ? resultDocElement.threw : false;\n};\n\nconst failArray = testArray();\nconst failString = testString();\nconst failDOM = testDOM();\n\n/**\n * The slice() method returns a shallow copy of a portion of an array into a new\n * array object selected from begin to end (end not included). The original\n * array will not be modified.\n *\n * @param {Array|object} array - The array to slice.\n * @param {number} [start] - Zero-based index at which to begin extraction.\n *  A negative index can be used, indicating an offset from the end of the\n *  sequence. Running slice(-2) extracts the last two elements in the sequence.\n *  If begin is undefined, slice begins from index 0.\n * @param {number} [end] - Zero-based index before which to end extraction.\n *  Slice extracts up to but not including end. For example, slice(1,4)\n *  extracts the second element through the fourth element (elements indexed\n *  1, 2, and 3).\n *  A negative index can be used, indicating an offset from the end of the\n *  sequence. Running slice(2,-1) extracts the third element through the second-to-last\n *  element in the sequence.\n *  If end is omitted, slice extracts through the end of the\n *  sequence (arr.length).\n *  If end is greater than the length of the sequence, slice extracts through\n *  the end of the sequence (arr.length).\n * @returns {Array} A new array containing the extracted elements.\n */\nconst slice = function slice(array, start, end) {\n  const object = toObject(array);\n\n  if (failArray || (failDOM && isArray(object) === false) || (failString && isString(object)) || isArguments(object)) {\n    return arrayLikeSlice(object, start, end);\n  }\n\n  /* eslint-disable-next-line prefer-rest-params */\n  return nativeSlice.apply(object, arrayLikeSlice(arguments, 1));\n};\n\nexport default slice;\n","import isObjectLike from 'is-object-like-x';\nimport hasToStringTag from 'has-to-string-tag-x';\nimport has from 'has-own-property-x';\nimport gOPD from 'object-get-own-property-descriptor-x';\nimport defineProperty from 'object-define-property-x';\nimport toStringTag from 'to-string-tag-x';\n\nconst regexExec = /none/.exec;\nconst regexClass = '[object RegExp]';\n\nconst tryRegexExecCall = function tryRegexExec(value, descriptor) {\n  try {\n    value.lastIndex = 0;\n    regexExec.call(value);\n\n    return true;\n  } catch (e) {\n    return false;\n  } finally {\n    defineProperty(value, 'lastIndex', descriptor);\n  }\n};\n\n/**\n * This method tests if a value is a regex.\n *\n * @param {*} value - The value to test.\n * @returns {boolean} `true` if value is a regex; otherwise `false`.\n */\nconst isRegex = function isRegex(value) {\n  if (isObjectLike(value) === false) {\n    return false;\n  }\n\n  if (hasToStringTag === false) {\n    return toStringTag(value) === regexClass;\n  }\n\n  const descriptor = gOPD(value, 'lastIndex');\n  const hasLastIndexDataProperty = descriptor && has(descriptor, 'value');\n\n  if (hasLastIndexDataProperty !== true) {\n    return false;\n  }\n\n  return tryRegexExecCall(value, descriptor);\n};\n\nexport default isRegex;\n","import attempt from 'attempt-x';\nimport toStringTag from 'to-string-tag-x';\n\nconst nia = [].isArray;\nconst nativeIsArray = typeof nia === 'function' && nia;\n\nconst testResult = attempt(function attemptee() {\n  return nativeIsArray([]) === true && nativeIsArray({length: 0}) === false;\n});\n\nconst isWorking = testResult.threw === false && testResult.value === true;\n\nexport const implementation = function isArray(value) {\n  return toStringTag(value) === '[object Array]';\n};\n\n/**\n * Determines whether the passed value is an Array.\n *\n * @param {*} value - The value to test.\n * @returns {boolean} - True if an array; otherwise false.\n */\nconst isArray = isWorking ? nativeIsArray : implementation;\n\nexport default isArray;\n","const string = 'a';\nconst boxedString = {}.constructor(string);\n\n/**\n * Check failure of by-index access of string characters (IE < 9)\n * and failure of `0 in boxedString` (Rhino).\n *\n * `true` if no failure; otherwise `false`.\n *\n * @type boolean\n */\nconst hasBoxed = boxedString[0] === string && 0 in boxedString;\n\nexport default hasBoxed;\n","import hasBoxed from 'has-boxed-string-x';\nimport isString from 'is-string';\n\nconst EMPTY_STRING = '';\nconst strSplit = EMPTY_STRING.split;\nconst isStringFn = hasBoxed === false && typeof strSplit === 'function' && isString;\n\n/**\n * This method tests if a value is a string with the boxed bug; splits to an\n * array for iteration; otherwise returns the original value.\n *\n * @param {*} [value] - The value to be tested.\n * @returns {*} An array or characters if value was a string with the boxed bug;\n *  otherwise the value.\n */\nconst splitIfBoxedBug = function splitIfBoxedBug(value) {\n  return isStringFn && isStringFn(value) ? strSplit.call(value, EMPTY_STRING) : value;\n};\n\nexport default splitIfBoxedBug;\n","import toObject from 'to-object-x';\nimport toInteger from 'to-integer-x';\nimport toLength from 'to-length-x';\nimport splitIfBoxedBug from 'split-if-boxed-bug-x';\n\nconst getMax = function _getMax(a, b) {\n  return a >= b ? a : b;\n};\n\nconst getMin = function _getMin(a, b) {\n  return a <= b ? a : b;\n};\n\nconst setRelative = function _setRelative(value, length) {\n  return value < 0 ? getMax(length + value, 0) : getMin(value, length);\n};\n\n/**\n * The slice() method returns a shallow copy of a portion of an array into a new\n * array object selected from begin to end (end not included). The original\n * array will not be modified.\n *\n * @param {!object} arrayLike - The array like object to slice.\n * @param {number} [start] - Zero-based index at which to begin extraction.\n *  A negative index can be used, indicating an offset from the end of the\n *  sequence. Running slice(-2) extracts the last two elements in the sequence.\n *  If begin is undefined, slice begins from index 0.\n * @param {number} [end] - Zero-based index before which to end extraction.\n *  Slice extracts up to but not including end. For example, slice([0,1,2,3,4],1,4)\n *  extracts the second element through the fourth element (elements indexed\n *  1, 2, and 3).\n *  A negative index can be used, indicating an offset from the end of the\n *  sequence. Running slice(2,-1) extracts the third element through the second-to-last\n *  element in the sequence.\n *  If end is omitted, slice extracts through the end of the sequence (arr.length).\n *  If end is greater than the length of the sequence, slice extracts through\n *  the end of the sequence (arr.length).\n * @returns {Array} A new array containing the extracted elements.\n */\nconst slice = function slice(arrayLike, start, end) {\n  const iterable = splitIfBoxedBug(toObject(arrayLike));\n  const length = toLength(iterable.length);\n  let k = setRelative(toInteger(start), length);\n  const relativeEnd = typeof end === 'undefined' ? length : toInteger(end);\n  const finalEnd = setRelative(relativeEnd, length);\n  const val = [];\n  val.length = getMax(finalEnd - k, 0);\n  let next = 0;\n  while (k < finalEnd) {\n    if (k in iterable) {\n      val[next] = iterable[k];\n    }\n\n    next += 1;\n    k += 1;\n  }\n\n  return val;\n};\n\nexport default slice;\n","import toLength from 'to-length-x';\nimport isRegExp from 'is-regexp-x';\nimport safeToString from 'to-string-symbols-supported-x';\nimport isObjectLike from 'is-object-like-x';\nimport hasOwn from 'has-own-property-x';\nimport arraySlice from 'array-slice-x';\nimport toBoolean from 'to-boolean-x';\nimport isNil from 'is-nil-x';\n\nconst EMPTY_STRING = '';\nconst {match, slice, search, indexOf, lastIndexOf} = EMPTY_STRING;\nconst aJoin = [].join;\nconst RegExpCtr = /none/.constructor;\n\n/* Used to match `RegExp` flags from their coerced string values. */\nconst reFlags = /\\w*$/;\nconst rxTest = reFlags.test;\nconst rxExec = reFlags.exec;\n\n/* Used to compose unicode character classes. */\nconst rsAstralRange = '\\\\ud800-\\\\udfff';\nconst rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23';\nconst rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0';\nconst rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/* Used to compose unicode capture groups. */\nconst rsAstral = `[${rsAstralRange}]`;\nconst rsCombo = `[${rsComboMarksRange}${rsComboSymbolsRange}]`;\nconst rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]';\nconst rsModifier = `(?:${rsCombo}|${rsFitz})`;\nconst rsNonAstral = `[^${rsAstralRange}]`;\nconst rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}';\nconst rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]';\nconst rsZWJ = '\\\\u200d';\n\n/* Used to compose unicode regexes. */\nconst reOptMod = `${rsModifier}?`;\nconst rsOptVar = `[${rsVarRange}]?`;\nconst rsOptJoin = `(?:${rsZWJ}(?:${aJoin.call([rsNonAstral, rsRegional, rsSurrPair], '|')})${rsOptVar}${reOptMod})*`;\nconst rsSeq = rsOptVar + reOptMod + rsOptJoin;\nconst rsSymbol = `(?:${aJoin.call([`${rsNonAstral + rsCombo}?`, rsCombo, rsRegional, rsSurrPair, rsAstral], '|')})`;\n\n/*\n * Used to match string symbols\n * @see https://mathiasbynens.be/notes/javascript-unicode\n */\nconst reComplexSymbol = new RegExpCtr(`${rsFitz}(?=${rsFitz})|${rsSymbol}${rsSeq}`, 'g');\n\n/*\n * Used to detect strings with [zero-width joiners or code points from\n * the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/).\n */\nconst reHasComplexSymbol = new RegExpCtr(`[${rsZWJ}${rsAstralRange}${rsComboMarksRange}${rsComboSymbolsRange}${rsVarRange}]`);\n\n/**\n * Gets the number of symbols in `string`.\n *\n * @private\n * @param {string} string - The string to inspect.\n * @returns {number} Returns the string size.\n */\nconst stringSize = function _stringSize(string) {\n  if (toBoolean(string) === false || rxTest.call(reHasComplexSymbol, string) === false) {\n    return string.length;\n  }\n\n  reComplexSymbol.lastIndex = 0;\n  let result = 0;\n  while (rxTest.call(reComplexSymbol, string)) {\n    result += 1;\n  }\n\n  return result;\n};\n\nconst getOptions = function getOptions(options) {\n  const opts = {length: 30, omission: '...', separator: null};\n\n  if (isObjectLike(options)) {\n    if (hasOwn(options, 'length')) {\n      opts.length = toLength(options.length);\n    }\n\n    if (hasOwn(options, 'omission')) {\n      opts.omission = options.omission;\n    }\n\n    if (hasOwn(options, 'separator')) {\n      opts.separator = options.separator;\n    }\n  }\n\n  return opts;\n};\n\nconst getConsts = function getConsts(str) {\n  if (rxTest.call(reHasComplexSymbol, str)) {\n    const matchSymbols = match.call(str, reComplexSymbol);\n\n    return {\n      matchSymbols: match.call(str, reComplexSymbol),\n      strLength: matchSymbols.length,\n    };\n  }\n\n  return {\n    matchSymbols: null,\n    strLength: str.length,\n  };\n};\n\nconst getNewEnd = function getNewEnd(rxSeperator, result) {\n  let newEnd;\n  let rxMatch = rxExec.call(rxSeperator, result);\n  while (rxMatch) {\n    newEnd = rxMatch.index;\n    rxMatch = rxExec.call(rxSeperator, result);\n  }\n\n  return newEnd;\n};\n\nconst getRxResult = function getRxResult(obj) {\n  const {str, separator, end, result} = obj;\n\n  if (search.call(slice.call(str, end), separator)) {\n    const rxSeperator = toBoolean(separator.global)\n      ? separator\n      : new RegExpCtr(separator.source, `${safeToString(rxExec.call(reFlags, separator))}g`);\n\n    rxSeperator.lastIndex = 0;\n    const newEnd = getNewEnd(rxSeperator, result);\n\n    return slice.call(result, 0, typeof newEnd === 'undefined' ? end : newEnd);\n  }\n\n  return result;\n};\n\nconst getResult = function getResult(obj) {\n  const {str, separator, end, result} = obj;\n\n  if (isRegExp(separator)) {\n    return getRxResult({str, separator, end, result});\n  }\n\n  if (indexOf.call(str, separator, end) !== end) {\n    const index = lastIndexOf.call(result, separator);\n\n    if (index > -1) {\n      return slice.call(result, 0, index);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Truncates `string` if it's longer than the given maximum string length.\n * The last characters of the truncated string are replaced with the omission\n * string which defaults to \"...\".\n *\n * @param {string} string - The string to truncate.\n * @param {object} [options] - The options object.\n * @param {number} [options.length=30] - The maximum string length.\n * @param {string} [options.omission='...'] - The string to indicate text\n * is omitted.\n * @param {RegExp|string} [options.separator] - The separator pattern to\n * truncate to.\n * @returns {string} Returns the truncated string.\n */\nconst truncate = function truncate(string, options) {\n  const str = safeToString(string);\n  const {length, omission, separator} = getOptions(options);\n  const {strLength, matchSymbols} = getConsts(str);\n\n  if (length >= strLength) {\n    return str;\n  }\n\n  const end = length - stringSize(omission);\n\n  if (end < 1) {\n    return omission;\n  }\n\n  const result = matchSymbols ? aJoin.call(arraySlice(matchSymbols, 0, end), EMPTY_STRING) : slice.call(str, 0, end);\n\n  if (isNil(separator)) {\n    return result + omission;\n  }\n\n  const secondEnd = matchSymbols ? result.length : end;\n  const secondResult = getResult({str, separator, end: secondEnd, result});\n\n  return secondResult + omission;\n};\n\nexport default truncate;\n"],"sourceRoot":""}