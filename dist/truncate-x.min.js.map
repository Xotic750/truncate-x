{"version":3,"sources":["webpack://truncateX/webpack/universalModuleDefinition","webpack://truncateX/webpack/bootstrap","webpack://truncateX/./node_modules/is-symbol/index.js","webpack://truncateX/./node_modules/is-string/index.js","webpack://truncateX/./node_modules/is-date-object/index.js","webpack://truncateX/./node_modules/is-arguments/index.js","webpack://truncateX/./node_modules/has-symbols/index.js","webpack://truncateX/(webpack)/buildin/global.js","webpack://truncateX/./node_modules/has-symbols/shams.js","webpack://truncateX/../src/is-primitive-x.js","webpack://truncateX/../src/has-boxed-string-x.js","webpack://truncateX/../src/has-working-bind-x.js","webpack://truncateX/../src/noop-x.js","webpack://truncateX/../src/util-pusher-x.js","webpack://truncateX/../src/simple-bind-x.js","webpack://truncateX/../src/simple-call-x.js","webpack://truncateX/../src/attempt-x.js","webpack://truncateX/../src/white-space-x.js","webpack://truncateX/../src/has-symbol-support-x.js","webpack://truncateX/../src/to-boolean-x.js","webpack://truncateX/../src/simple-methodize-x.js","webpack://truncateX/../src/to-string-tag-x.js","webpack://truncateX/../src/has-to-string-tag-x.js","webpack://truncateX/../src/is-nil-x.js","webpack://truncateX/../src/require-object-coercible-x.js","webpack://truncateX/../src/to-string-x.js","webpack://truncateX/../src/require-coercible-to-string-x.js","webpack://truncateX/../src/trim-left-x.js","webpack://truncateX/../src/trim-right-x.js","webpack://truncateX/../src/trim-x.js","webpack://truncateX/../src/normalize-space-x.js","webpack://truncateX/../src/replace-comments-x.js","webpack://truncateX/../src/is-function-x.js","webpack://truncateX/../src/to-primitive-x.js","webpack://truncateX/../src/parse-int-x.js","webpack://truncateX/../src/nan-x.js","webpack://truncateX/../src/to-number-x.js","webpack://truncateX/../src/is-nan-x.js","webpack://truncateX/../src/is-finite-x.js","webpack://truncateX/../src/infinity-x.js","webpack://truncateX/../src/math-sign-x.js","webpack://truncateX/../src/to-integer-x.js","webpack://truncateX/../src/to-length-x.js","webpack://truncateX/../src/is-object-like-x.js","webpack://truncateX/../src/to-object-x.js","webpack://truncateX/../src/to-property-key-x.js","webpack://truncateX/../src/object-get-own-property-descriptor-x.js","webpack://truncateX/../src/has-own-property-x.js","webpack://truncateX/../src/to-string-symbols-supported-x.js","webpack://truncateX/../src/math-clamp-x.js","webpack://truncateX/../src/is-index-x.js","webpack://truncateX/../src/property-is-enumerable-x.js","webpack://truncateX/../src/object-define-property-x.js","webpack://truncateX/../src/assert-is-object-x.js","webpack://truncateX/../src/array-slice-x.js","webpack://truncateX/../src/is-regexp-x.js","webpack://truncateX/../src/is-array-x.js","webpack://truncateX/../src/split-if-boxed-bug-x.js","webpack://truncateX/../src/array-like-slice-x.js","webpack://truncateX/../src/truncate-x.js"],"names":["root","factory","exports","module","define","amd","$globalThis","ObjectCtr","constructor","objectPrototype","prototype","defineProperty","getGlobalFallback","self","window","global","returnThis","this","get","configurable","__defineGetter__","$$globalThis$$","error","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","enumerable","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","hasOwnProperty","p","s","toStr","toString","symToStr","symStringRegex","valueOf","test","isSymbolObject","e","strValue","String","hasToStringTag","tryStringObject","getDay","Date","tryDateObject","isStandardArguments","isLegacyArguments","length","callee","supportsStandardArguments","arguments","origSymbol","hasSymbolSham","g","Function","getOwnPropertySymbols","iterator","obj","sym","symObj","keys","getOwnPropertyNames","syms","propertyIsEnumerable","getOwnPropertyDescriptor","descriptor","val","boxedString","a1","a2","context","testThis","boundFn","apply","arg1","arg2","args","test1","oracle","Ctr","BoundFn","returned","test2","split","Math","max","$split","string","pattern","arrayLike","from","target","iterable","nativeBind","getMax","a","b","TypeError","boundFns","binder","boundLength","f","h","getBoundFn","bindArgs","fn","Empty","boundArgs","result","thisArg","bound","$TypeError","nativeApply","$apply","F","V","threw","hasSymbolSupport","prototypeMethod","methodizedToString","castString","list","code","description","es5","es2015","es2016","es2017","es2018","stringES2018","reLeft","RegExpCtr","methodizedReplace","replace","reRight","reNormalize","STRIP_COMMENTS","replacement","FunctionCtr","methodizedFunctionToString","ctrRx","methodizedTest","hasNativeClass","isES6ClassFn","allowClass","tryFuncToString","strTag","StringCtr","NumberCtr","symToPrimitive","toPrimitive","symValueOf","toStringOrder","toNumberOrder","ordinary","hint","assertHint","methodNames","method","getHint","supplied","func","exoticToPrim","input","newHint","preferredType","nativeParseInt","parseInt","castNumber","methodizedCharAt","charAt","hexRegex","radix","str","methodizedStringSlice","slice","binaryRegex","RegExpConstructor","octalRegex","nonWSregex","invalidHexLiteral","parseString","toNum","isBinary","isOctal","hasNonWS","isInvalidHexLiteral","trimmed","toNumber","argument","number","x","abs","floor","len","castObject","getOPDFallback1","getOPDFallback2","$getOwnPropertyDescriptor","hop","pToString","isSymbolFn","minVal","min","RangeError","reIsUint","rxTest","propIsEnumerable","ngopd","nativeGOPD","prop","testResult","prototypeOfObject","supportsAccessors","lookupGetter","__lookupGetter__","lookupSetter","__lookupSetter__","document","createElement","worksWithPrim","propKey","isStringIndex","__proto__","notPrototypeOfObject","setter","set","writable","definePropertyFallback","$defineProperty","message","msg","nd","nativeDefProp","desc","defineGetter","defineSetter","__defineSetter__","propDesc","res","doc","resultDocElement","regexExec","exec","lastIndex","tryRegexExecCall","nia","isArray","nativeIsArray","strSplit","identity","setRelative","start","end","k","relativeEnd","finalEnd","next","methodizedSlice","failArray","failString","failDOM","documentElement","array","match","search","indexOf","lastIndexOf","aJoin","join","reFlags","rxExec","rsAstral","rsCombo","rsFitz","rsModifier","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsOptVar","rsSeq","rsSymbol","reComplexSymbol","reHasComplexSymbol","separator","rxSeperator","source","newEnd","rxMatch","index","getNewEnd","options","opts","omission","matchSymbols","strLength","getConsts","stringSize"],"mappings":";CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAmB,UAAID,IAEvBD,EAAgB,UAAIC,IARtB,CASI,WACF,aAEA,IAGIK,EAHAC,EAAY,GAAGC,YACfC,EAAkBF,EAAUG,UAC5BC,EAAiBJ,EAAUI,eAE3BC,EAAoB,WACtB,MAAoB,oBAATC,KACFA,KAGa,oBAAXC,OACFA,OAGa,oBAAXC,OACFA,YADT,GAOEC,EAAa,WACf,OAAOC,MAGT,IAcE,OAbIN,EACFA,EAAeF,EAAiB,iBAAkB,CAChDS,IAAKF,EACLG,cAAc,IAGhBV,EAAgBW,iBAAiB,iBAAkBJ,GAGrDV,EAAwC,oBAAnBe,eAAiCT,IAAsBS,sBAErEZ,EAAgBY,eAEhBf,EACP,MAAOgB,GACP,OAAOV,KA3CR,IA6CG,WACN,O,YCtDE,IAAIW,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUvB,QAGnC,IAAIC,EAASoB,EAAiBE,GAAY,CACzCC,EAAGD,EACHE,GAAG,EACHzB,QAAS,IAUV,OANA0B,EAAQH,GAAUI,KAAK1B,EAAOD,QAASC,EAAQA,EAAOD,QAASsB,GAG/DrB,EAAOwB,GAAI,EAGJxB,EAAOD,QA0Df,OArDAsB,EAAoBM,EAAIF,EAGxBJ,EAAoBO,EAAIR,EAGxBC,EAAoBQ,EAAI,SAAS9B,EAAS+B,EAAMC,GAC3CV,EAAoBW,EAAEjC,EAAS+B,IAClCG,OAAOzB,eAAeT,EAAS+B,EAAM,CAAEI,YAAY,EAAMnB,IAAKgB,KAKhEV,EAAoBc,EAAI,SAASpC,GACX,oBAAXqC,QAA0BA,OAAOC,aAC1CJ,OAAOzB,eAAeT,EAASqC,OAAOC,YAAa,CAAEC,MAAO,WAE7DL,OAAOzB,eAAeT,EAAS,aAAc,CAAEuC,OAAO,KAQvDjB,EAAoBkB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQjB,EAAoBiB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKT,OAAOU,OAAO,MAGvB,GAFAtB,EAAoBc,EAAEO,GACtBT,OAAOzB,eAAekC,EAAI,UAAW,CAAER,YAAY,EAAMI,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOjB,EAAoBQ,EAAEa,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRrB,EAAoByB,EAAI,SAAS9C,GAChC,IAAI+B,EAAS/B,GAAUA,EAAOyC,WAC7B,WAAwB,OAAOzC,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAqB,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASe,EAAQC,GAAY,OAAOf,OAAO1B,UAAU0C,eAAevB,KAAKqB,EAAQC,IAGzG3B,EAAoB6B,EAAI,GAIjB7B,EAAoBA,EAAoB8B,EAAI,G,+BChFrD,IAAIC,EAAQnB,OAAO1B,UAAU8C,SAG7B,GAFiB,EAAQ,EAAR,GAED,CACf,IAAIC,EAAWlB,OAAO7B,UAAU8C,SAC5BE,EAAiB,iBAQrBvD,EAAOD,QAAU,SAAkBuC,GAClC,GAAqB,iBAAVA,EACV,OAAO,EAER,GAA0B,oBAAtBc,EAAM1B,KAAKY,GACd,OAAO,EAER,IACC,OAfmB,SAA4BA,GAChD,MAA+B,iBAApBA,EAAMkB,WAGVD,EAAeE,KAAKH,EAAS5B,KAAKY,IAWjCoB,CAAepB,GACrB,MAAOqB,GACR,OAAO,SAKT3D,EAAOD,QAAU,SAAkBuC,GAElC,OAAO,I,6BC9BT,IAAIsB,EAAWC,OAAOtD,UAAUiD,QAS5BJ,EAAQnB,OAAO1B,UAAU8C,SAEzBS,EAAmC,mBAAX1B,QAAuD,iBAAvBA,OAAOC,YAEnErC,EAAOD,QAAU,SAAkBuC,GAClC,MAAqB,iBAAVA,GACU,iBAAVA,IACJwB,EAfc,SAAyBxB,GAC9C,IAEC,OADAsB,EAASlC,KAAKY,IACP,EACN,MAAOqB,GACR,OAAO,GAUgBI,CAAgBzB,GAN1B,oBAMmCc,EAAM1B,KAAKY,M,6BChB7D,IAAI0B,EAASC,KAAK1D,UAAUyD,OAUxBZ,EAAQnB,OAAO1B,UAAU8C,SAEzBS,EAAmC,mBAAX1B,QAAuD,iBAAvBA,OAAOC,YAEnErC,EAAOD,QAAU,SAAsBuC,GACtC,MAAqB,iBAAVA,GAAgC,OAAVA,IAC1BwB,EAfY,SAAuBxB,GAC1C,IAEC,OADA0B,EAAOtC,KAAKY,IACL,EACN,MAAOqB,GACR,OAAO,GAUgBO,CAAc5B,GALvB,kBAKgCc,EAAM1B,KAAKY,M,6BChB3D,IAAIwB,EAAmC,mBAAX1B,QAAuD,iBAAvBA,OAAOC,YAC/De,EAAQnB,OAAO1B,UAAU8C,SAEzBc,EAAsB,SAAqB7B,GAC9C,QAAIwB,GAAkBxB,GAA0B,iBAAVA,GAAsBF,OAAOC,eAAeC,IAGrD,uBAAtBc,EAAM1B,KAAKY,IAGf8B,EAAoB,SAAqB9B,GAC5C,QAAI6B,EAAoB7B,IAGP,OAAVA,GACW,iBAAVA,GACiB,iBAAjBA,EAAM+B,QACb/B,EAAM+B,QAAU,GACM,mBAAtBjB,EAAM1B,KAAKY,IACkB,sBAA7Bc,EAAM1B,KAAKY,EAAMgC,SAGfC,EAA6B,WAChC,OAAOJ,EAAoBK,WADI,GAIhCL,EAAoBC,kBAAoBA,EAExCpE,EAAOD,QAAUwE,EAA4BJ,EAAsBC,G,8BC9BnE,YAEA,IAAIK,EAAa7D,EAAOwB,OACpBsC,EAAgB,EAAQ,GAE5B1E,EAAOD,QAAU,WAChB,MAA0B,mBAAf0E,IACW,mBAAXrC,SACsB,iBAAtBqC,EAAW,SACO,iBAAlBrC,OAAO,QAEXsC,U,+BCXR,IAAIC,EAGJA,EAAI,WACH,OAAO7D,KADJ,GAIJ,IAEC6D,EAAIA,GAAK,IAAIC,SAAS,cAAb,GACR,MAAOjB,GAEc,iBAAXhD,SAAqBgE,EAAIhE,QAOrCX,EAAOD,QAAU4E,G,6BChBjB3E,EAAOD,QAAU,WAChB,GAAsB,mBAAXqC,QAAiE,mBAAjCH,OAAO4C,sBAAwC,OAAO,EACjG,GAA+B,iBAApBzC,OAAO0C,SAAyB,OAAO,EAElD,IAAIC,EAAM,GACNC,EAAM5C,OAAO,QACb6C,EAAShD,OAAO+C,GACpB,GAAmB,iBAARA,EAAoB,OAAO,EAEtC,GAA4C,oBAAxC/C,OAAO1B,UAAU8C,SAAS3B,KAAKsD,GAA8B,OAAO,EACxE,GAA+C,oBAA3C/C,OAAO1B,UAAU8C,SAAS3B,KAAKuD,GAAiC,OAAO,EAY3E,IAAKD,KADLD,EAAIC,GADS,GAEDD,EAAO,OAAO,EAC1B,GAA2B,mBAAhB9C,OAAOiD,MAAmD,IAA5BjD,OAAOiD,KAAKH,GAAKV,OAAgB,OAAO,EAEjF,GAA0C,mBAA/BpC,OAAOkD,qBAAiF,IAA3ClD,OAAOkD,oBAAoBJ,GAAKV,OAAgB,OAAO,EAE/G,IAAIe,EAAOnD,OAAO4C,sBAAsBE,GACxC,GAAoB,IAAhBK,EAAKf,QAAgBe,EAAK,KAAOJ,EAAO,OAAO,EAEnD,IAAK/C,OAAO1B,UAAU8E,qBAAqB3D,KAAKqD,EAAKC,GAAQ,OAAO,EAEpE,GAA+C,mBAApC/C,OAAOqD,yBAAyC,CAC1D,IAAIC,EAAatD,OAAOqD,yBAAyBP,EAAKC,GACtD,GAdY,KAcRO,EAAWjD,QAA8C,IAA1BiD,EAAWrD,WAAuB,OAAO,EAG7E,OAAO,I,6RClCR,IAIe,EAJK,SAAqBsD,GACvC,MAAsB,WAAf,EAAOA,GAA2B,OAARA,EAA8B,mBAARA,G,gBCNnDC,EAAc,GAAGpF,YADR,KAaA,EAbA,MAWEoF,EAAY,IAAiB,KAAKA,ECT5C,ECGM,aDHN5C,KA2DQ,EAFmB,mBAAT,GAvDX,WACZ,IAAI6C,EAAK,KACLC,EAAK,KACLC,EAAU,KACRC,EAAW,GAYjB,IACE,IAAMC,EAAU,EAAKC,OAXP,SAAiBC,EAAMC,GAOrC,OALAL,EAAU9E,KACV4E,EAAKM,EACLL,EAAKM,EAGEzB,YAI6B,CAACqB,EAAU,IACzCK,EAAOJ,EAAQ,GAErB,OAA0B,IAAnBA,EAAQzB,QAAgC,IAAhB6B,EAAK7B,QAAuB,IAAPqB,GAAmB,IAAPC,GAAYC,IAAYC,EACxF,MAAOlC,GACP,OAAO,GAiCqCwC,IA7BlC,WACZ,IAAIT,EAAK,KACLC,EAAK,KACLC,EAAU,KACRQ,EAAS,CAAC,EAAG,EAAG,GAEhBC,EAAM,SAAaL,EAAMC,GAK7B,OAJAP,EAAKM,EACLL,EAAKM,EACLL,EAAU9E,KAEHsF,GAGT,IACE,IAAME,EAAU,EAAKP,MAAMM,EAAK,CAAC,OAC3BE,EAAW,IAAID,EAAQ,EAAG,GAEhC,OAAOA,EAAQjC,SAAWgC,EAAIhC,QAAUkC,IAAaH,GAAiB,IAAPV,GAAmB,IAAPC,GAAYC,IAAYQ,EACnG,MAAOzC,GACP,OAAO,GASgD6C,GErDpDC,EADc,GACdA,MACA,EAAOC,KAAPC,IACA,EAAc,EAAd9D,KAAM,EAAQ,EAARnB,KAMAkF,EAAS,EAAiB,EAAKlF,KAAK,EAAM+E,GAL5B,SAAqBI,EAAQC,GAEtD,OAAOL,EAAM/E,KAAKmF,EAAQC,IAKf,EAAc,SAAqBC,GAE9C,OAAO,IAASA,GAAaH,EAAOG,EAbjB,IAa4CA,GA+BlD,EAjBA,SAAgBA,EAAWC,GAExC,IAAMC,EAASzC,UAAUH,OAAS,EAAIG,UAAU,GAAK,GAErD,GAAyB,iBAAduC,GAA0B,EAAYA,GAC/C,OAAOE,EAKT,IAFA,IAAMC,EAAW,EAAWH,EAAY,EAAYA,GAC7C1C,EAAU6C,EAAV7C,OACE9C,EAAI,EAAI,EAAGyF,IAAS,EAAGzF,EAAI8C,EAAQ9C,GAAK,EAC/C0F,EAAOA,EAAO5C,QAAU0C,EAAUxF,GAGpC,OAAO0F,G,sZC3CIE,EAAoB,EAA1BtE,KAAkB,EAAQ,EAARnB,KAEnB,EAAS,GACTtB,EAAY,EAAOC,YACnBgC,EAAc,EAAOgB,SAKrB+D,EAAS,SAAgBC,EAAGC,GAChC,OAAOD,GAAKC,EAAID,EAAIC,GAGhB,EAAmB,SAA0BhF,GACjD,GAAqB,mBAAVA,GATI,sBASoBD,EAAY0D,MAAMzD,GACnD,MAAM,IAAIiF,UAdQ,+BAckBjF,IAIlCkF,EAAW,CACf,SAAcC,GACZ,OAAO,WAEL,OAAOA,EAAO1B,MAAMjF,KAAM,EAAO0D,cAGrC,SAAaiD,EAAQC,GACnB,OAAO,SAAiBL,GAEtB,OAAOI,EAAO1B,MAAMjF,KAAM,EAAO0D,UAAWkD,EAAa,CAACL,OAG9D,SAAaI,EAAQC,GACnB,OAAO,SAAiBL,EAAGC,GAEzB,OAAOG,EAAO1B,MAAMjF,KAAM,EAAO0D,UAAWkD,EAAa,CAACL,EAAGC,OAGjE,SAAeG,EAAQC,GAErB,OAAO,SAAiBL,EAAGC,EAAG1F,GAE5B,OAAO6F,EAAO1B,MAAMjF,KAAM,EAAO0D,UAAWkD,EAAa,CAACL,EAAGC,EAAG1F,OAGpE,SAAc6F,EAAQC,GAEpB,OAAO,SAAiBL,EAAGC,EAAG1F,EAAGC,GAE/B,OAAO4F,EAAO1B,MAAMjF,KAAM,EAAO0D,UAAWkD,EAAa,CAACL,EAAGC,EAAG1F,EAAGC,OAGvE,SAAc4F,EAAQC,GAEpB,OAAO,SAAiBL,EAAGC,EAAG1F,EAAGC,EAAG8B,GAElC,OAAO8D,EAAO1B,MAAMjF,KAAM,EAAO0D,UAAWkD,EAAa,CAACL,EAAGC,EAAG1F,EAAGC,EAAG8B,OAG1E,SAAa8D,EAAQC,GAEnB,OAAO,SAAiBL,EAAGC,EAAG1F,EAAGC,EAAG8B,EAAGgE,GAErC,OAAOF,EAAO1B,MAAMjF,KAAM,EAAO0D,UAAWkD,EAAa,CAACL,EAAGC,EAAG1F,EAAGC,EAAG8B,EAAGgE,OAG7E,SAAeF,EAAQC,GAErB,OAAO,SAAiBL,EAAGC,EAAG1F,EAAGC,EAAG8B,EAAGgE,EAAGhD,GAExC,OAAO8C,EAAO1B,MAAMjF,KAAM,EAAO0D,UAAWkD,EAAa,CAACL,EAAGC,EAAG1F,EAAGC,EAAG8B,EAAGgE,EAAGhD,OAGhF,SAAe8C,EAAQC,GAErB,OAAO,SAAiBL,EAAGC,EAAG1F,EAAGC,EAAG8B,EAAGgE,EAAGhD,EAAGiD,GAE3C,OAAOH,EAAO1B,MAAMjF,KAAM,EAAO0D,UAAWkD,EAAa,CAACL,EAAGC,EAAG1F,EAAGC,EAAG8B,EAAGgE,EAAGhD,EAAGiD,QAK/EC,EAAa,SAAoB3B,GAAM,QACRA,EADQ,GACpCuB,EADoC,KAC5BR,EAD4B,KACpBa,EADoB,KAErCJ,EAAcN,EA9ET,EA8EsBH,EAAO5C,OAAS+C,EA9EtC,EA8EmDU,EAASzD,OA7EtD,IA8EX0D,EAAKP,EAASE,GACd5B,EAAUiC,EAAKA,EAAGN,EAAQC,GAAeF,EAhFpC,GAgFmDC,GAE9D,GAAIR,EAAO1G,UAAW,CAEpB,IAAMyH,EAAQ,aAEdA,EAAMzH,UAAY0G,EAAO1G,UACzBuF,EAAQvF,UAAY,IAAIyH,EACxBA,EAAMzH,UAAY,KAGpB,OAAOuF,GAGH,EAAY,SAAmBmB,EAAQgB,GAE3C,IAAMC,EAASjB,EAAOlB,MAAMjF,KAAMmH,GAGlC,OAAO7H,EAAU8H,KAAYA,EAASA,EAASpH,MAuClC,EAFD,EAAiB,EAAK+B,KAAKsE,GAlCX,SAAcF,EAAQkB,GAClD,EAAiBlB,GAEjB,IAEImB,EAFEN,EAAWtD,UAGXiD,EAAS,WAEb,IAAMQ,EAAY,EAAOzD,UA9GhB,EA8GiC,EAAOsD,EA7GlC,IAgHf,OAAOhH,gBAAgBsH,EAAQ,EAAUrC,MAAMjF,KAAM,CAACmG,EAAQgB,IAAchB,EAAOlB,MAAMoC,EAASF,IAKpG,OAFAG,EAAQP,EAAW,CAACJ,EAAQR,EAAQa,KC1HhCO,EAAad,UACLe,EAAiC,EAAxCvC,MACDwC,EAAS,EADgC,EAApB7G,KACK4G,GAC1B,EAAc,EAAKA,EAAa,GAAGjF,UAInC,EAAmB,SAA0Bf,GACjD,GAAqB,mBAAVA,GAHI,sBAGoB,EAAYA,GAC7C,MAAM,IAAI+F,EAAW/F,EALH,sBAQpB,OAAOA,GAsBM,EALF,SAAckG,EAAGC,GAE5B,OAAOF,EAAO,EAAiBC,GAAIC,EAAG,EAAOjE,UAAU,MCH1C,EAfC,SAAiBuD,GAC/B,IACE,MAAO,CACLW,OAAO,EAEPpG,MAAO,EAAKyF,EAAIjH,KAAM,EAAO0D,UAAW,KAE1C,MAAOb,GACP,MAAO,CACL+E,OAAO,EACPpG,MAAOqB,KCuSb,IC9TA,IAAMgF,EAAmB,EAAQ,WAE/B,O,mFAFqC,W,GAEZ,mBAAXvG,QAAyB,IAASA,OAAO,MAFzB,cAWjB,GAA2B,IAA3BuG,EAAiBD,QAA8C,IAA3BC,EAAiBrG,M,gBCJrD,EAJG,SAAmBA,GACnC,QAASA,GCJL,EAAc,GAAGe,SA4BR,EATG,SAAmBuF,GAGnC,OAlBuB,SAA0BtG,GACjD,GAAqB,mBAAVA,GAHI,sBAGoB,EAAK,EAAaA,GACnD,MAAM,IAAIiF,UALQ,oCAKkBjF,GActC,CAAiBsG,GAEV,WAEL,OAAO,EAAKA,EAAiBpE,UAAU,GAAI,EAAOA,UAAW,MCzB3DqE,EAAqB,EAAU,GAAGxF,UAqBzB,EAZK,SAAqBf,GACvC,OAAc,OAAVA,EACK,qBAGY,IAAVA,EACF,qBAGFuG,EAAmBvG,ICXb,KAEb,IAASF,OAAOC,aCAH,EALD,SAAeC,GAE3B,OAAOA,SCUM,EARgB,SAAgCA,GAC7D,GAAI,EAAMA,GACR,MAAM,IAAIiF,UAAJ,gCAAuCjF,IAG/C,OAAOA,GCZHwG,EADgB,4CACWzI,YAgBlB,EARE,SAAkBiC,GACjC,GAAI,IAASA,GACX,MAAM,IAAIiF,UAXQ,6CAcpB,OAAOuB,EAAWxG,ICFL,EAJkB,SAAkCA,GACjE,OAAO,EAAM,EAAuBA,KTSzByG,GAAO,CAClB,CACEC,KAAM,EACNC,YAAa,MACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRzC,OAAQ,MAEV,CACEmC,KAAM,GACNC,YAAa,YACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRzC,OAAQ,MAEV,CACEmC,KAAM,GACNC,YAAa,eACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRzC,OAAQ,MAEV,CACEmC,KAAM,GACNC,YAAa,YACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRzC,OAAQ,MAEV,CACEmC,KAAM,GACNC,YAAa,kBACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRzC,OAAQ,MAEV,CACEmC,KAAM,GACNC,YAAa,QACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRzC,OAAQ,KAcV,CACEmC,KAAM,IACNC,YAAa,iBACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRzC,OAAQ,KAEV,CACEmC,KAAM,KACNC,YAAa,mBACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRzC,OAAQ,KAEV,CACEmC,KAAM,KACNC,YAAa,4BACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRzC,OAAQ,KAEV,CACEmC,KAAM,KACNC,YAAa,UACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRzC,OAAQ,KAEV,CACEmC,KAAM,KACNC,YAAa,UACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRzC,OAAQ,KAEV,CACEmC,KAAM,KACNC,YAAa,WACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRzC,OAAQ,KAEV,CACEmC,KAAM,KACNC,YAAa,WACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRzC,OAAQ,KAEV,CACEmC,KAAM,KACNC,YAAa,qBACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRzC,OAAQ,KAEV,CACEmC,KAAM,KACNC,YAAa,oBACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRzC,OAAQ,KAEV,CACEmC,KAAM,KACNC,YAAa,mBACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRzC,OAAQ,KAEV,CACEmC,KAAM,KACNC,YAAa,eACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRzC,OAAQ,KAEV,CACEmC,KAAM,KACNC,YAAa,oBACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRzC,OAAQ,KAEV,CACEmC,KAAM,KACNC,YAAa,aACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRzC,OAAQ,KAEV,CACEmC,KAAM,KACNC,YAAa,aACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRzC,OAAQ,KAcV,CACEmC,KAAM,KACNC,YAAa,iBACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRzC,OAAQ,UAEV,CACEmC,KAAM,KACNC,YAAa,sBACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRzC,OAAQ,UAEV,CACEmC,KAAM,KACNC,YAAa,wBACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRzC,OAAQ,KAEV,CACEmC,KAAM,KACNC,YAAa,4BACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRzC,OAAQ,KAEV,CACEmC,KAAM,MACNC,YAAa,oBACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRzC,OAAQ,KAEV,CACEmC,KAAM,MACNC,YAAa,kBACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRzC,OAAQ,WAgBR0C,GAAe,GACZ,GAAUR,GAAV1E,OACE,GAAI,EAAG,GAAI,GAAQ,IAAK,EAC3B0E,GAAK,IAAGK,QACML,GAAK,IAAGlC,OAGtBkC,GAAK,IAAGO,SACVC,IAAgBR,GAAK,IAAGlC,QAI5B,IAEe,GAFI0C,GUrUbC,GAAS,IAAIC,EADD,OAAOpJ,aACV,YAAmB,GAAnB,OACTqJ,GAAoB,EAHL,GAG4BC,SAalC,GAJG,SAAmB9C,GACnC,OAAO6C,GAAkB,EAAyB7C,GAAS2C,GAbxC,KCEfI,GAAU,IAAI,EADF,OAAOvJ,aACT,WAAkB,GAAlB,QACV,GAAoB,EAHL,GAG4BsJ,SAalC,GAJC,SAAiB9C,GAC/B,OAAO,GAAkB,EAAyBA,GAAS+C,GAbxC,KCWN,GAJF,SAAc/C,GACzB,OAAO,GAAU,GAAQA,KCNrBgD,GAAc,IAAI,EADN,OAAOxJ,aACL,WAAkB,GAAlB,MAAkC,KAChD,GAAoB,EAHZ,IAG4BsJ,SAc3B,GAJQ,SAAwB9C,GAC7C,OAAO,GAAkB,GAAKA,GAASgD,GAd3B,MCCRC,GAAiB,mCACjB,GAAoB,EAFL,GAE4BH,SAmBlC,GARS,SAAyB9C,EAAQkD,GACvD,OAAO,GACL,EAAyBlD,GACzBiD,GACAtF,UAAUH,OAAS,EAAI,EAAM0F,GAjBZ,KCKfC,GAAc,EAAQ3J,YAEtB4J,GAA6B,EAAU,EAAQ5G,UAI/C6G,GAAQ,UACRC,GAAiB,EAAUD,GAAMzG,MAEjC2G,IAIS,IAHb,GAAQ,WAEN,OAAOJ,GAAY,oCAAZA,MACNtB,MAEC,GAAkB,SAAyBpG,GAC/C,OAAO6H,GAAeD,GAAO,GAAU,GAAUD,GAA2B3H,GAfhE,QAkBR+H,GAAe,SAAwB/H,GAC3C,IAAM4F,EAAS,EAAQ,GAAiB5F,GAExC,OAAwB,IAAjB4F,EAAOQ,OAAmBR,EAAO5F,OAsD3B,GAhBI,SAAoBA,EAAOgI,GAC5C,OAAI,EAAYhI,KAIZ,EA/BkB,SAAsBA,EAAOgI,GACnD,QAAIF,KAAiC,IAAfE,IAAwBD,GAAa/H,MAO5C,IAFb,GAAQ,WACN,OAAO2H,GAA2B3H,MACjCoG,MAwBI6B,CAAgBjI,EAAO,EAAUgI,MAGtCF,KAA4C,IAA1B,EAAUE,KAAyBD,GAAa/H,KAvBpD,SAAqBA,GACvC,IAAMkI,EAAS,EAAYlI,GAE3B,MA9Cc,sBA8CPkI,GA7CM,+BA6CgBA,GA5Cd,2BA4CmCA,EAwB3C,CAAYlI,KClEfmI,GAFS,SAEUpK,YACnBqK,IARO,GAQUrK,YAEjBsK,GAAiB,GAAcvI,OAAOwI,YAEtCC,GAAa,GAAczI,OAAO7B,UAAUiD,QAE5CsH,GAAgB,CAAC,WAAY,WAC7BC,GAAgB,CAAC,UAAW,YAgB5B,GAAsB,SAA6BC,EAAUC,GACjE,EAAuBD,GAdN,SAAoBC,GACrC,GAAoB,iBAATA,GAfE,WAeoBA,GAdpB,WAcuCA,EAClD,MAAM,IAAI1D,UAAU,qCAatB2D,CAAWD,GAGX,IADA,IAAME,EA9BO,WA8BOF,EAAkBH,GAAgBC,GAC7CxJ,EApCE,EAoCQA,EApBD,EAoBkBA,GAnC1B,EAmCoC,CAC5C,IAAM6J,EAASJ,EAASG,EAAY5J,IAEpC,GAAI,GAAW6J,GAAS,CACtB,IAAMlD,EAAS,EAAKkD,EAAQJ,GAE5B,GAAI,EAAY9C,GACd,OAAOA,GAKb,MAAM,IAAIX,UAAU,qBA6BhB8D,GAAU,SAAiB/I,EAAOgJ,GACtC,GAAIA,EAAU,CACZ,GAAIhJ,IAAUmI,GACZ,MA3ES,SA8EX,GAAInI,IAAUoI,GACZ,MAhFS,SAoFb,MAlFc,WA2FV,GAAkB,SAAyBpI,GAC/C,GAAI,EAAY,CACd,GAAIqI,GACF,OA5CY,SAAmB5H,EAAQC,GAC3C,IAAMuI,EAAOxI,EAAOC,GAEpB,IAAoB,IAAhB,EAAMuI,GAAiB,CACzB,IAAyB,IAArB,GAAWA,GACb,MAAM,IAAIhE,UAAJ,UAAiBgE,EAAjB,kCAA+CvI,EAA/C,sBAAqED,EAArE,uBAGR,OAAOwI,GAoCE,CAAUjJ,EAAOqI,IAG1B,GAAI,IAASrI,GACX,OAAOuI,KAOP,GAAa,SAAoB9F,GAAK,IACnCyG,EAA6BzG,EAA7ByG,aAAcC,EAAe1G,EAAf0G,MAAOR,EAAQlG,EAARkG,KACtB/C,EAAS,EAAKsD,EAAcC,EAAO,CAACR,IAE1C,GAAI,EAAY/C,GACd,OAAOA,EAGT,MAAM,IAAIX,UAAU,iDAGhB,GAAgB,SAAuBkE,EAAOR,GAClD,IAAMS,EArHQ,YAqHET,IAAqB,IAAOQ,IAAU,IAASA,IAtHlD,SAsHqER,EAElF,OAAO,GAAoBQ,EAvHb,YAuHoBC,EAzHrB,SAyHoDA,IA6BpD,GAXK,SAAqBD,EAAOE,GAC9C,GAAI,EAAYF,GACd,OAAOA,EAGT,IAAMR,EAAOI,GAAQM,EAAenH,UAAUH,OAnJpC,GAoJJmH,EAAe,GAAgBC,GAErC,YAA+B,IAAjBD,EAA+B,GAAcC,EAAOR,GAAQ,GAAW,CAACO,eAAcC,QAAOR,UC3JvGW,GAAiBC,SAEjBC,IAAc,GAAGzL,YAEjB0L,GAAmB,EADR,IAC2BC,QACtCC,GAAW,cACX,GAAiB,EAAUA,GAASxI,MA6B3B,GAVG,SAAmBoD,EAAQqF,GAC3C,IAAMC,EAAM,GAAS,EAAMtF,IAE3B,MAzBe,MAyBXkF,GAAiBI,EAAK,GC5BR,IDgCXP,GAAeO,EAAKL,GAAWI,KAAW,GAAeD,GAAUE,GAAO,GAAK,MEzBlF,GAHiB,GAGW9L,YAC5B+L,GAAwB,EAHR,4CAGgCC,OAEhDC,GAAc,aACdC,GAAoBD,GAAYjM,YAGhC,GAAiB,EAAUiM,GAAY7I,MAKvC+I,GAAa,cAKbC,GAAa,IAAIF,GAAkB,SAA8B,KAKjEG,GAAoB,qBAapB,GAAY,SAAmBpK,EAAO4J,GAC1C,OAAO,GAAUE,GAAsB9J,EAvClB,GAuC0C4J,IAG3DS,GAAc,SAAqBC,EAAOtK,GAC9C,OAhCe,SAAkBA,GACjC,OAAO,GAAegK,GAAahK,GA+B/BuK,CAASvK,GACJsK,EAAM,GAAUtK,EA9CP,IAkBJ,SAAiBA,GAC/B,OAAO,GAAekK,GAAYlK,GA8B9BwK,CAAQxK,GACHsK,EAAM,GAAUtK,EAjDR,IAoDV,MAGH,GAAgB,SAAuBsK,EAAOtK,GAClD,IAAMkD,EAAMmH,GAAYC,EAAOtK,GAE/B,GAAY,OAARkD,EACF,OAAOA,EAGT,GAxCe,SAAkBlD,GACjC,OAAO,GAAemK,GAAYnK,GAuC9ByK,CAASzK,IAnCa,SAA6BA,GACvD,OAAO,GAAeoK,GAAmBpK,GAkClB0K,CAAoB1K,GACzC,ODlEgB,ICqElB,IAAM2K,EAAU,GAAK3K,GAErB,OAAI2K,IAAY3K,EACPsK,EAAMK,GAGR,MAwBM,GAdE,SAASC,EAASC,GACjC,IAAM7K,EApDgB,SAAyBA,GAC/C,GAAI,IAASA,GACX,MAAM,IAAIiF,UA/BQ,6CAkCpB,OAAOjF,EA+CO,CAAgB,GAAY6K,EAAU,KAEpD,GAAqB,iBAAV7K,EAAoB,CAC7B,IAAMkD,EAAM,GAAc0H,EAAU5K,GAEpC,GAAY,OAARkD,EACF,OAAOA,EAIX,OAAO,GAAWlD,ICxFL,GALD,SAAeA,GAE3B,OAAOA,GAAUA,GCGJ,GAJE,SAAkB8K,GACjC,MAAyB,iBAAXA,IAA+C,IAAxB,GAAYA,IAAqBA,ICL/C,KDKsEA,KCLtE,KCiBV,GAVF,SAAcC,GACzB,IAAMvK,EAAI,GAASuK,GAEnB,OAAU,IAANvK,GAAW,GAAYA,GAClBA,EAGFA,EAAI,EAAI,GAAK,GCdfwK,GAAc5G,KAAd4G,IAAKC,GAAS7G,KAAT6G,MAsBG,GAdG,SAAmBjL,GACnC,IAAM8K,EAAS,GAAS9K,GAExB,OAAI,GAAY8K,GACP,EAGM,IAAXA,IAA2C,IAA3B,GAAeA,GAC1BA,EAGF,GAASA,GAAUG,GAAMD,GAAIF,KCEvB,GAfE,SAAkB9K,GACjC,IAAMkL,EAAM,GAAUlL,GAGtB,OAAIkL,GAAO,EACF,EAGLA,EAjBmB,kCAqBhBA,GCTM,GAJM,SAAsBlL,GACzC,OAA8B,IAAvB,EAAYA,KAAgD,IAA5B,GAAWA,GAAO,ICTrDmL,GAAa,GAAGpN,YAcP,GAJE,SAAkBiC,GACjC,OAAOmL,GAAW,EAAuBnL,K,uOCF3C,ICMIoL,GACAC,GAqIAC,GDtIW,GANO,SAAuBT,GAC3C,IAAMvK,EAAM,GAAYuK,EAAUtJ,QAElC,OAAO,GAA6B,WAAf,GAAOjB,GAAmBA,EAAM,EAAMA,IEVvDiL,GAAM,EAAU,GAAG5K,gBAgBV,GAJQ,SAAwBF,EAAQC,GACrD,OAAO6K,GAAI,GAAS9K,GAAS,GAAcC,KCbvC8K,GAAY,GAAc1L,OAAO7B,UAAU8C,SAC3C0K,GAAkC,mBAAdD,IAA4B,IAEhD,GAAa,GAAGzN,YAeP,GAJkB,SAAkCiC,GACjE,OAAOyL,IAAcA,GAAWzL,GAASwL,GAAUpM,KAAKY,GAAS,GAAWA,ICjBxE,GAAY,SAAmB4D,GACnC,IAAM8H,EAAS,GAAS9H,EAAK,IACvBgC,EAAShC,EAAK7B,OAAS,EAAI,CAACsC,IAAKqH,EAAQC,IAAK,GAAK,CAACtH,IAAK,GAAST,EAAK,IAAK+H,IAAKD,GAEvF,GAAI9F,EAAO+F,IAAM/F,EAAOvB,IACtB,MAAM,IAAIuH,WAAW,iCAGvB,OAAOhG,GAoCM,GArBD,SAAe5F,GAC3B,IAAM8K,EAAS,GAAS9K,GAExB,GAAIkC,UAAUH,OAAS,EACrB,OAAO+I,EAJyB,MAQf,GAAU5I,WAAtBmC,EAR2B,EAQ3BA,IAAKsH,EARsB,EAQtBA,IAEZ,OAAIb,EAASa,EACJA,EAGLb,EAASzG,EACJA,EAGFyG,GCrCHe,GAAW,mBACXC,GAASD,GAAS1K,KA6BT,GAhBC,SAAiBnB,EAAO+B,GACtC,IAAMwC,EAAS,GAAavE,GAE5B,IAAsC,IAAlC8L,GAAO1M,KAAKyM,GAAUtH,GACxB,OAAO,EAGT,IAAMuG,EAAS,GAASvG,GAExB,OAAIrC,UAAUH,OAAS,EACd+I,EAAS,GAAU,GAAU/I,GAzBf,kBA4BhB+I,EA5BgB,kBCDnBiB,GAAmB,EAAU,GAAGhJ,sBAiBvB,GAJc,SAA8BtC,EAAQC,GACjE,OAAOqL,GAAiB,GAAStL,GAAS,GAAcC,KLLpDgJ,GAAS,EADM,GACiBA,QAChC,GAAY,GAAG3L,YACfiO,GAAQ,GAAUhJ,yBAClBiJ,GAA8B,mBAAVD,IAAwBA,GAO5C,GAAe,SAAsBvL,EAAQyL,GACjDzL,EAAO,GAAcyL,IAAS,EAC9B,IAAMC,EAAa,EAAQF,GAAYxL,EAAQyL,GAE/C,OAA4B,IAArBC,EAAW/F,OAA8C,IAA3B+F,EAAWnM,MAAMA,OAGlDoM,GAAoB,GAAUnO,UAG9BoO,GAAoB,GAAKD,GAAmB,oBAE5CE,GAAeD,IAAqB,EAAUD,GAAkBG,kBAEhEC,GAAeH,IAAqB,EAAUD,GAAkBK,kBAqHtE,GAAIR,GAAY,CACd,IAAM,GAA0B,oBAAbS,UAA4BA,SAG/C,IAFyB,IAAM,GAAa,GAAIC,cAAc,OAAQ,YAEhD,CACpB,IAAM,GAAM,EAAQV,GAAY,GAAS,OAAQ,GAGjD,IAFmC,IAAd,GAAI7F,OAAmB,GAAIpG,OAA6B,MAApB,GAAIA,MAAMA,MAKjE,GAF4B,GAAa,GAAI,YAEpB,CACvB,IAAM4M,IAA0D,IAA1C,EAAQX,GAAY,GAAI,QAAQ7F,MAMlDkF,GAJoB,GAAoB,GAAa,GAAI,GAASxL,OA5JzD,MA+JP8M,GAC0BX,GAEA,SAAkCxL,EAAQC,GACpE,OAAOuL,GAAW,GAASxL,GAASC,IAG/BkM,GACmB,SAAkCnM,EAAQC,GACpE,OAAOuL,GAAWxL,EAAQ,GAAcC,KAGd,SAAkCD,EAAQC,GACpE,OAAOuL,GAAW,GAASxL,GAAS,GAAcC,UAItD0K,GAAkBa,QAGpBZ,GAAkBY,MAKqB,IAAzC,EAAUX,KAAwCF,IAAmBC,MACvEC,GA9J4B,SAAkC7K,EAAQC,GACtE,IAGIkF,EAHEnD,EAAM,GAAShC,GACfoM,EAAU,GAAcnM,GAK9B,GAAI0K,KAKmB,KAJrBxF,EAAS,GAAQ,WACf,OAAOwF,GAAgB,GAAS3I,GAAMoK,OAG7BzG,MACT,OAAOR,EAAO5F,MAKlB,IAAM8M,EAAgB,IAASrK,IAAQ,GAAQoK,EAASpK,EAAIV,QAE5D,GAAIsJ,KAAqC,IAAlByB,IAKA,KAJrBlH,EAAS,GAAQ,WACf,OAAOyF,GAAgB,GAAS5I,GAAMoK,OAG7BzG,MACT,OAAOR,EAAO5F,MAMlB,IAAIiD,OAAa,EAGjB,IAAsB,IAAlB6J,IAAkD,IAAvB,GAAKrK,EAAKoK,GACvC,OAAO5J,EAYT,GAPAA,EAAa,CACXvE,cAAsC,IAAxB,EAAY+B,KAAuC,IAAlBqM,EAC/ClN,WAAY,GAAqB6C,EAAKoK,IAKpCR,GAAmB,CAOrB,IAAMpO,EAAYwE,EAAIsK,UAChBC,EAAuBvK,IAAQ2J,GAKjCY,IAEFvK,EAAIsK,UAAYX,IAGlB,IAAM3M,EAAS6M,GAAa7J,EAAKoK,GAC3BI,EAAST,GAAa/J,EAAKoK,GAQjC,GANIG,IAGFvK,EAAIsK,UAAY9O,GAGdwB,GAAUwN,EAWZ,OAVIxN,IACFwD,EAAWxE,IAAMgB,GAGfwN,IACFhK,EAAWiK,IAAMD,GAKZhK,EAcX,OARI6J,GACF7J,EAAWjD,MAAQ0J,GAAOjH,EAAKoK,GAC/B5J,EAAWkK,UAAW,IAEtBlK,EAAWjD,MAAQyC,EAAIoK,GACvB5J,EAAWkK,UAAW,GAGjBlK,IA6DT,IM5LImK,GA0IAC,GNoDW,GAFF/B,GOlLE,GAVQ,SAAwBtL,EAAOsN,GACpD,GAAI,EAAYtN,GAAQ,CACtB,IAAMuN,EAAMrL,UAAUH,OAAS,EAAI,GAAauL,GAApC,UAAkD,GAAatN,GAA/D,qBAEZ,MAAM,IAAIiF,UAAUsI,GAGtB,OAAOvN,GDVH,GAAY,GAAGjC,YACfyP,GAAK,GAAUtP,eACfuP,GAA8B,mBAAPD,IAAqBA,GAG5C,GAAuB,SAA8BE,GACzD,IAAMjN,EAAS,GAASiN,GAClBzK,EAAa,GAkBnB,GAhBI,GAAIxC,EAAQ,gBACdwC,EAAWrD,WAAa,EAAUa,EAAOb,aAGvC,GAAIa,EAAQ,kBACdwC,EAAWvE,aAAe,EAAU+B,EAAO/B,eAGzC,GAAI+B,EAAQ,WACdwC,EAAWjD,MAAQS,EAAOT,OAGxB,GAAIS,EAAQ,cACdwC,EAAWkK,SAAW,EAAU1M,EAAO0M,WAGrC,GAAI1M,EAAQ,OAAQ,CACtB,IAAMhB,EAASgB,EAAOhC,IAEtB,QAAsB,IAAXgB,IAAiD,IAAvB,GAAWA,GAC9C,MAAM,IAAIwF,UAAU,6BAGtBhC,EAAWxE,IAAMgB,EAGnB,GAAI,GAAIgB,EAAQ,OAAQ,CACtB,IAAMwM,EAASxM,EAAOyM,IAEtB,QAAsB,IAAXD,IAAiD,IAAvB,GAAWA,GAC9C,MAAM,IAAIhI,UAAU,6BAGtBhC,EAAWiK,IAAMD,EAGnB,IAAK,GAAIhK,EAAY,QAAU,GAAIA,EAAY,UAAY,GAAIA,EAAY,UAAY,GAAIA,EAAY,aACrG,MAAM,IAAIgC,UAAU,gGAGtB,OAAOhC,GAeH,GAAoB,GAAUhF,UAE9B,GAAoB,GAAI,GAAmB,oBAE3C0P,GAAe,IAAqB,EAAU,GAAkBhP,kBAEhEiP,GAAe,IAAqB,EAAU,GAAkBC,kBAEhE,GAAe,IAAqB,EAAU,GAAkBtB,kBAEhE,GAAe,IAAqB,EAAU,GAAkBE,kBAsEtE,GAAIgB,GAAe,CACjB,IAAM,GAAgB,SAAuBhN,GAC3C,IAAM0L,EAAa,EAAQsB,GAAehN,EAAQ,WAAY,IAE9D,OAA4B,IAArB0L,EAAW/F,OAAmB+F,EAAWnM,QAAUS,GAAU,aAAcA,GAG9E,GAA0B,oBAAbiM,UAA4BA,SAE3C,GAAc,OAA2B,IAAnB,EAAU,KAAkB,GAAc,GAAIC,cAAc,SACpFU,GAAkB,SAAwB5M,EAAQC,EAAUuC,GAC1D,OAAOwK,GAAc,GAAehN,GAAS,GAAcC,GAAW,GAAqBuC,KAG7FmK,GAAyBK,KAII,IAA7B,EAAUA,KAA4BL,MACxCC,GAvF4B,SAAwB5M,EAAQC,EAAUuC,GACtE,GAAexC,GACf,IAAMoM,EAAU,GAAcnM,GACxBoN,EAAW,GAAqB7K,GAGtC,GAAImK,GAAwB,CAC1B,IAAMxH,EAAS,GAAQ,WACrB,OAAOwH,GAAuB,GAAW3M,EAAQoM,EAASiB,MAG5D,IAAqB,IAAjBlI,EAAOQ,MACT,OAAOR,EAAO5F,MAMlB,GAAI,GAAI8N,EAAU,SAEhB,GAAI,KAAsB,GAAarN,EAAQoM,IAAY,GAAapM,EAAQoM,IAAW,CAKzF,IAAM5O,EAAYwC,EAAOsM,UAEzBtM,EAAOsM,UAAY,UAEZtM,EAAOoM,GACdpM,EAAOoM,GAAWiB,EAAS9N,MAG3BS,EAAOsM,UAAY9O,OAEnBwC,EAAOoM,GAAWiB,EAAS9N,UAExB,CACL,IAA0B,IAAtB,KAAgC8N,EAASrP,KAAOqP,EAASZ,KAC3D,MAAM,IAAIjI,UAAU,kEAIlB6I,EAASrP,KACXkP,GAAalN,EAAQoM,EAASiB,EAASrP,KAGrCqP,EAASZ,KACXU,GAAanN,EAAQoM,EAASiB,EAASZ,KAI3C,OAAOzM,IAsCT,IEpKQsN,GAgBAC,GACAC,GFqJO,GAFCZ,GGvKVa,GAAY,EAAU,OAAOC,MAyCpB,GAnBC,SAAiBnO,GAC/B,IAA4B,IAAxB,GAAaA,GACf,OAAO,EAGT,IAAuB,IAAnB,EACF,MA3Be,oBA2BR,EAAYA,GAGrB,IAAMiD,EAAa,GAAKjD,EAAO,aAG/B,OAAiC,KAFAiD,GAAc,GAAIA,EAAY,WA7BxC,SAAsBjD,EAAOiD,GACpD,IAIE,OAHAjD,EAAMoO,UAAY,EAClBF,GAAUlO,IAEH,EACP,MAAOqB,GACP,OAAO,EANT,QAQE,GAAerB,EAAO,YAAaiD,IA0B9BoL,CAAiBrO,EAAOiD,I,mBC3C3BqL,GAAM,GAAGC,QACTC,GAA+B,mBAARF,IAAsBA,GAE7C,GAAa,GAAQ,WACzB,OAA6B,IAAtBE,GAAc,MAA+C,IAA/BA,GAAc,CAACzM,OAAQ,OAiB/C,IAdwB,IAArB,GAAWqE,QAAwC,IAArB,GAAWpG,MAY/BwO,GAVE,SAAiBxO,GAC7C,MAA8B,mBAAvB,EAAYA,ICRfyO,GAAW,EADI,GACmBtK,OAElCuK,GAAW,SAAyB1O,GACxC,OAAOA,GAiBM,GAFU,EAAW0O,GAZN,SAAyB1O,GACrD,OAAO,IAASA,GAASyO,GAASzO,EARf,IAQ+CA,GCP9D,GAAS,SAAgB+E,EAAGC,GAChC,OAAOD,GAAKC,EAAID,EAAIC,GAOhB2J,GAAc,SAAqB3O,EAAO+B,GAC9C,OAAO/B,EAAQ,EAAI,GAAO+B,EAAS/B,EAAO,IALb+E,EAKyB/E,KALtBgF,EAK6BjD,GAJ7CgD,EAAIC,EADP,IAAgBD,EAAGC,GAmDnB,GArBD,SAAeP,EAAWmK,EAAOC,GAC7C,IAAMjK,EAAW,GAAgB,GAASH,IACpC1C,EAAS,GAAS6C,EAAS7C,QAC7B+M,EAAIH,GAAY,GAAUC,GAAQ7M,GAChCgN,OAA6B,IAARF,EAAsB9M,EAAS,GAAU8M,GAC9DG,EAAWL,GAAYI,EAAahN,GACpCmB,EAAM,GACZA,EAAInB,OAAS,GAAOiN,EAAWF,EAAG,GAElC,IADA,IAAIG,EAAO,EACJH,EAAIE,GACLF,KAAKlK,IACP1B,EAAI+L,GAAQrK,EAASkK,IAGvBG,GAAQ,EACRH,GAAK,EAGP,OAAO5L,GJjDHgM,GAAkB,EAAU,GAAGnF,OA6B/BoF,IA1BEpB,GAAM,GAAQ,WAClB,OAAOmB,GAAgB,CAAC,EAAG,EAAG,GAAI,EAAG,OAG5B9I,QAAgC,IAAvB,GAAQ2H,GAAI/N,QAAyC,IAArB+N,GAAI/N,MAAM+B,QAAiC,IAAjBgM,GAAI/N,MAAM,GAuBpFoP,GApBa,WACjB,IAAMrB,EAAM,GAAQ,WAClB,OAAOmB,GAAgB,MAAO,EAAG,MAGnC,OAAOnB,EAAI3H,QAAgC,IAAvB,GAAQ2H,EAAI/N,QAAyC,IAArB+N,EAAI/N,MAAM+B,QAAiC,MAAjBgM,EAAI/N,MAAM,GAevE,GACbqP,IAZErB,GAA0B,oBAAbtB,UAA4BA,YACzCuB,KAAmBD,IACrB,GAAQ,WACN,OAAOkB,GAAgBlB,GAAIsB,oBAC1BlJ,QAGmB6H,GAAiB7H,OAwC9B,GAND,SAAemJ,EAAOX,EAAOC,GACzC,IAAMpO,EAAS,GAAS8O,GAExB,OA9BmB,SAAsB9O,GACzC,OAAO0O,IAAcE,KAA+B,IAApB,GAAQ5O,IAAuB2O,IAAc,IAAS3O,IAAY,KAAYA,GA6BvG,CAAaA,GAAU,GAAeA,EAAQmO,EAAOC,GAAOK,GAAgBzO,EAAQmO,EAAOC,IK5D9FW,GAAQ,EADO,GACgBA,OAC/B,GAAQ,EAFO,GAEgBzF,OAC/B0F,GAAS,EAHM,GAGiBA,QAChCC,GAAU,EAJK,GAIkBA,SACjCC,GAAc,EALC,GAKsBA,aACrCC,GAAQ,EAAU,GAAGC,MAGrBC,GAAU,OACV,GAAYA,GAAQ/R,YACpB,GAAS,EAAU+R,GAAQ3O,MAC3B4O,GAAS,EAAUD,GAAQ3B,MAS3B6B,GAAW,IAAH,OANQ,kBAMR,KACRC,GAAU,IAAH,OANa,kCAMb,OALe,kBAKf,KACPC,GAAS,2BACTC,GAAa,MAAH,OAASF,GAAT,YAAoBC,GAApB,KACVE,GAAc,KAAH,OAVK,kBAUL,KACXC,GAAa,kCACbC,GAAa,qCAIbC,GAAW,GAAH,OAAMJ,GAAN,KACRK,GAAW,IAAH,OAdK,iBAcL,MAERC,GAAQD,GAAWD,GADP,MAAH,OALD,UAKC,cAAoBX,GAAM,CAACQ,GAAaC,GAAYC,IAAa,KAAjE,YAAyEE,IAAzE,OAAoFD,GAApF,MAETG,GAAW,MAAH,OAASd,GAAM,CAAC,GAAD,OAAIQ,GAAcH,GAAlB,KAA8BA,GAASI,GAAYC,GAAYN,IAAW,KAAzF,KAMRW,GAAkB,IAAI,GAAJ,UAAiBT,GAAjB,cAA6BA,GAA7B,aAAwCQ,IAAxC,OAAmDD,IAAS,KAM9EG,GAAqB,IAAI,GAAJ,WAnBb,WAmBa,OAhCL,mBAgCK,OA/BD,kCA+BC,OA9BC,mBA8BD,OA7BR,iBA6BQ,MAsErB,GAAc,SAAqBnO,GAAK,IACrCoH,EAA+BpH,EAA/BoH,IAAKgH,EAA0BpO,EAA1BoO,UAAWhC,EAAepM,EAAfoM,IAAKjJ,EAAUnD,EAAVmD,OAE5B,GAAI6J,GAAO,GAAM5F,EAAKgF,GAAMgC,GAAY,CACtC,IAAMC,EAAc,EAAUD,EAAUvS,QACpCuS,EACA,IAAI,GAAUA,EAAUE,OAAxB,UAAmC,GAAahB,GAAOD,GAASe,IAAhE,MAEJC,EAAY1C,UAAY,EACxB,IAAM4C,EApBQ,SAAmBF,EAAalL,GAGhD,IAFA,IAAIoL,EACAC,EAAUlB,GAAOe,EAAalL,GAC3BqL,GACLD,EAASC,EAAQC,MACjBD,EAAUlB,GAAOe,EAAalL,GAGhC,OAAOoL,EAYUG,CAAUL,EAAalL,GAEtC,OAAO,GAAMA,EAAQ,OAAqB,IAAXoL,EAAyBnC,EAAMmC,GAGhE,OAAOpL,GA2DM,UAxBE,SAAkBrB,EAAQ6M,GACzC,IAAMvH,EAAM,GAAatF,GADyB,EAhGjC,SAAoB6M,GACrC,IAAMC,EAAO,CAACtP,OAAQ,GAAIuP,SAAU,MAAOT,UAAW,MAgBtD,OAdI,GAAaO,KACX,GAAOA,EAAS,YAClBC,EAAKtP,OAAS,GAASqP,EAAQrP,SAG7B,GAAOqP,EAAS,cAClBC,EAAKC,SAAWF,EAAQE,UAGtB,GAAOF,EAAS,eAClBC,EAAKR,UAAYO,EAAQP,YAItBQ,EAiF+B,CAAWD,GAA1CrP,EAF2C,EAE3CA,OAAQuP,EAFmC,EAEnCA,SAAUT,EAFyB,EAEzBA,UAFyB,EA5ElC,SAAmBhH,GACnC,GAAI,GAAO+G,GAAoB/G,GAAM,CACnC,IAAM0H,EAAe/B,GAAM3F,EAAK8G,IAEhC,MAAO,CACLY,aAAc/B,GAAM3F,EAAK8G,IACzBa,UAAWD,EAAaxP,QAI5B,MAAO,CACLwP,aAAc,KACdC,UAAW3H,EAAI9H,QAmEiB0P,CAAU5H,GAArC2H,EAH2C,EAG3CA,UAAWD,EAHgC,EAGhCA,aAElB,GAAIxP,GAAUyP,EACZ,OAAO3H,EAGT,IAAMgF,EAAM9M,EAvHK,SAAqBwC,GACtC,IAA0B,IAAtB,EAAUA,KAA4D,IAAvC,GAAOqM,GAAoBrM,GAC5D,OAAOA,EAAOxC,OAGhB4O,GAAgBvC,UAAY,EAE5B,IADA,IAAIxI,EAAS,EACN,GAAO+K,GAAiBpM,IAC7BqB,GAAU,EAGZ,OAAOA,EA4Gc8L,CAAWJ,GAEhC,GAAIzC,EAAM,EACR,OAAOyC,EAGT,IAAM1L,EAAS2L,EAAe3B,GAAM,GAAW2B,EAAc,EAAG1C,GArL7C,IAqLmE,GAAMhF,EAAK,EAAGgF,GAEpG,OAAI,EAAMgC,GACDjL,EAAS0L,EAlDF,SAAmB7O,GAAK,IACjCoH,EAA+BpH,EAA/BoH,IAAKgH,EAA0BpO,EAA1BoO,UAAWhC,EAAepM,EAAfoM,IAAKjJ,EAAUnD,EAAVmD,OAE5B,GAAI,GAASiL,GACX,OAAO,GAAY,CAAChH,MAAKgH,YAAWhC,MAAKjJ,WAG3C,GAAI8J,GAAQ7F,EAAKgH,EAAWhC,KAASA,EAAK,CACxC,IAAMqC,EAAQvB,GAAY/J,EAAQiL,GAElC,GAAIK,GAAS,EACX,OAAO,GAAMtL,EAAQ,EAAGsL,GAI5B,OAAOtL,EAsCA,CAAU,CAACiE,MAAKgH,YAAWhC,IAAK0C,EAAe3L,EAAO7D,OAAS8M,EAAKjJ,WAAW0L","file":"truncate-x.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"truncateX\"] = factory();\n\telse\n\t\troot[\"truncateX\"] = factory();\n})((function () {\n  'use strict';\n\n  var ObjectCtr = {}.constructor;\n  var objectPrototype = ObjectCtr.prototype;\n  var defineProperty = ObjectCtr.defineProperty;\n  var $globalThis;\n  var getGlobalFallback = function() {\n    if (typeof self !== 'undefined') {\n      return self;\n    }\n\n    if (typeof window !== 'undefined') {\n      return window;\n    }\n\n    if (typeof global !== 'undefined') {\n      return global;\n    }\n\n    return void 0;\n  };\n\n  var returnThis = function() {\n    return this;\n  };\n\n  try {\n    if (defineProperty) {\n      defineProperty(objectPrototype, '$$globalThis$$', {\n        get: returnThis,\n        configurable: true\n      });\n    } else {\n      objectPrototype.__defineGetter__('$$globalThis$$', returnThis);\n    }\n\n    $globalThis = typeof $$globalThis$$ === 'undefined' ? getGlobalFallback() : $$globalThis$$;\n\n    delete objectPrototype.$$globalThis$$;\n\n    return $globalThis;\n  } catch (error) {\n    return getGlobalFallback();\n  }\n}()), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","'use strict';\n\nvar toStr = Object.prototype.toString;\nvar hasSymbols = require('has-symbols')();\n\nif (hasSymbols) {\n\tvar symToStr = Symbol.prototype.toString;\n\tvar symStringRegex = /^Symbol\\(.*\\)$/;\n\tvar isSymbolObject = function isRealSymbolObject(value) {\n\t\tif (typeof value.valueOf() !== 'symbol') {\n\t\t\treturn false;\n\t\t}\n\t\treturn symStringRegex.test(symToStr.call(value));\n\t};\n\n\tmodule.exports = function isSymbol(value) {\n\t\tif (typeof value === 'symbol') {\n\t\t\treturn true;\n\t\t}\n\t\tif (toStr.call(value) !== '[object Symbol]') {\n\t\t\treturn false;\n\t\t}\n\t\ttry {\n\t\t\treturn isSymbolObject(value);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n} else {\n\n\tmodule.exports = function isSymbol(value) {\n\t\t// this environment does not support Symbols.\n\t\treturn false && value;\n\t};\n}\n","'use strict';\n\nvar strValue = String.prototype.valueOf;\nvar tryStringObject = function tryStringObject(value) {\n\ttry {\n\t\tstrValue.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar strClass = '[object String]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isString(value) {\n\tif (typeof value === 'string') { return true; }\n\tif (typeof value !== 'object') { return false; }\n\treturn hasToStringTag ? tryStringObject(value) : toStr.call(value) === strClass;\n};\n","'use strict';\n\nvar getDay = Date.prototype.getDay;\nvar tryDateObject = function tryDateObject(value) {\n\ttry {\n\t\tgetDay.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n\nvar toStr = Object.prototype.toString;\nvar dateClass = '[object Date]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isDateObject(value) {\n\tif (typeof value !== 'object' || value === null) { return false; }\n\treturn hasToStringTag ? tryDateObject(value) : toStr.call(value) === dateClass;\n};\n","'use strict';\n\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\nvar toStr = Object.prototype.toString;\n\nvar isStandardArguments = function isArguments(value) {\n\tif (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {\n\t\treturn false;\n\t}\n\treturn toStr.call(value) === '[object Arguments]';\n};\n\nvar isLegacyArguments = function isArguments(value) {\n\tif (isStandardArguments(value)) {\n\t\treturn true;\n\t}\n\treturn value !== null &&\n\t\ttypeof value === 'object' &&\n\t\ttypeof value.length === 'number' &&\n\t\tvalue.length >= 0 &&\n\t\ttoStr.call(value) !== '[object Array]' &&\n\t\ttoStr.call(value.callee) === '[object Function]';\n};\n\nvar supportsStandardArguments = (function () {\n\treturn isStandardArguments(arguments);\n}());\n\nisStandardArguments.isLegacyArguments = isLegacyArguments; // for tests\n\nmodule.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;\n","'use strict';\n\nvar origSymbol = global.Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict';\n\n/* eslint complexity: [2, 17], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n","/**\n * Returns true if the value is a primitive.\n *\n * @param {*} [val] - The value to test.\n * @returns {boolean} True if a primitive, otherwise false..\n */\nconst isPrimitive = function isPrimitive(val) {\n  return typeof val === 'object' ? val === null : typeof val !== 'function';\n};\n\nexport default isPrimitive;\n","const string = 'a';\nconst boxedString = {}.constructor(string);\n\n/**\n * Check failure of by-index access of string characters (IE < 9)\n * and failure of `0 in boxedString` (Rhino).\n *\n * `true` if no failure; otherwise `false`.\n *\n * @type boolean\n */\nconst hasBoxed = boxedString[0] === string && 0 in boxedString;\n\nexport default hasBoxed;\n","import noop from 'noop-x';\n\nconst {bind} = noop;\n\nconst test1 = function test1() {\n  let a1 = null;\n  let a2 = null;\n  let context = null;\n  const testThis = [];\n\n  const test1Fn = function test1Fn(arg1, arg2) {\n    /* eslint-disable-next-line babel/no-invalid-this */\n    context = this;\n    a1 = arg1;\n    a2 = arg2;\n\n    /* eslint-disable-next-line prefer-rest-params */\n    return arguments;\n  };\n\n  try {\n    const boundFn = bind.apply(test1Fn, [testThis, 1]);\n    const args = boundFn(2);\n\n    return boundFn.length === 1 && args.length === 2 && a1 === 1 && a2 === 2 && context === testThis;\n  } catch (e) {\n    return false;\n  }\n};\n\nconst test2 = function test2() {\n  let a1 = null;\n  let a2 = null;\n  let context = null;\n  const oracle = [1, 2, 3];\n\n  const Ctr = function Ctr(arg1, arg2) {\n    a1 = arg1;\n    a2 = arg2;\n    context = this;\n\n    return oracle;\n  };\n\n  try {\n    const BoundFn = bind.apply(Ctr, [null]);\n    const returned = new BoundFn(1, 2);\n\n    return BoundFn.length === Ctr.length && returned === oracle && a1 === 1 && a2 === 2 && context !== oracle;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Indicates if the engine has a working bind function.\n *\n * @type {boolean}\n */\nconst isWorking = typeof bind === 'function' && test1() && test2();\n\nexport default isWorking;\n","/**\n * This method returns undefined.\n *\n * @returns {undefined} Always undefined.\n */\nconst noop = function noop() {}; /* eslint-disable-line lodash/prefer-noop */\n\nexport default noop;\n","import isPrimitive from 'is-primitive-x';\nimport isString from 'is-string';\nimport hasBoxed from 'has-boxed-string-x';\nimport hasWorkingBind from 'has-working-bind-x';\n\nconst EMPTY_STRING = '';\nconst {split} = EMPTY_STRING;\nconst {max} = Math;\nconst {bind, call} = isPrimitive;\nexport const stringSplit = function stringSplit(string, pattern) {\n  // noinspection JSUnresolvedFunction\n  return split.call(string, pattern);\n};\n\nexport const $split = hasWorkingBind ? bind.call(call, split) : stringSplit;\n\nexport const getIterable = function getIterable(arrayLike) {\n  // noinspection JSUnresolvedFunction\n  return isString(arrayLike) ? $split(arrayLike, EMPTY_STRING) : arrayLike;\n};\n\n// eslint-disable jsdoc/no-undefined-types\n// noinspection JSCommentMatchesSignature\n/**\n * This pushes or concatenates into a new or existing array.\n *\n * @param {Array} arrayLike - The source.\n * @param {number} [from=0] - The from source index.\n * @param {Array} [target=[]] - The target array.\n * @returns {*} The target array.\n */\n// eslint-enable jsdoc/no-undefined-types\nconst pusher = function pusher(arrayLike, from) {\n  /* eslint-disable-next-line prefer-rest-params */\n  const target = arguments.length > 2 ? arguments[2] : [];\n\n  if (typeof arrayLike !== 'string' && isPrimitive(arrayLike)) {\n    return target;\n  }\n\n  const iterable = hasBoxed ? arrayLike : getIterable(arrayLike);\n  const {length} = iterable;\n  for (let i = max(0, from) || 0; i < length; i += 1) {\n    target[target.length] = arrayLike[i];\n  }\n\n  return target;\n};\n\nexport default pusher;\n","import hasWorkingBind from 'has-working-bind-x';\nimport pusher from 'util-pusher-x';\n\nconst {bind: nativeBind, call} = pusher;\nconst ERROR_MESSAGE = 'bind called on incompatible ';\nconst object = {};\nconst ObjectCtr = object.constructor;\nconst toStringTag = object.toString;\nconst funcType = '[object Function]';\nconst ZERO = 0;\nconst argsOffset = 2;\n\nconst getMax = function getMax(a, b) {\n  return a >= b ? a : b;\n};\n\nconst assertIsFunction = function assertIsFunction(value) {\n  if (typeof value !== 'function' && toStringTag.apply(value) !== funcType) {\n    throw new TypeError(ERROR_MESSAGE + value);\n  }\n};\n\nconst boundFns = [\n  function zero(binder) {\n    return function boundFn() {\n      /* eslint-disable-next-line babel/no-invalid-this,prefer-rest-params */\n      return binder.apply(this, pusher(arguments));\n    };\n  },\n  function one(binder, boundLength) {\n    return function boundFn(a) {\n      /* eslint-disable-next-line babel/no-invalid-this,prefer-rest-params */\n      return binder.apply(this, pusher(arguments, boundLength, [a]));\n    };\n  },\n  function two(binder, boundLength) {\n    return function boundFn(a, b) {\n      /* eslint-disable-next-line babel/no-invalid-this,prefer-rest-params */\n      return binder.apply(this, pusher(arguments, boundLength, [a, b]));\n    };\n  },\n  function three(binder, boundLength) {\n    /* eslint-disable-next-line max-params */\n    return function boundFn(a, b, c) {\n      /* eslint-disable-next-line babel/no-invalid-this,prefer-rest-params */\n      return binder.apply(this, pusher(arguments, boundLength, [a, b, c]));\n    };\n  },\n  function four(binder, boundLength) {\n    /* eslint-disable-next-line max-params */\n    return function boundFn(a, b, c, d) {\n      /* eslint-disable-next-line babel/no-invalid-this,prefer-rest-params */\n      return binder.apply(this, pusher(arguments, boundLength, [a, b, c, d]));\n    };\n  },\n  function five(binder, boundLength) {\n    /* eslint-disable-next-line max-params */\n    return function boundFn(a, b, c, d, e) {\n      /* eslint-disable-next-line babel/no-invalid-this,prefer-rest-params */\n      return binder.apply(this, pusher(arguments, boundLength, [a, b, c, d, e]));\n    };\n  },\n  function six(binder, boundLength) {\n    /* eslint-disable-next-line max-params */\n    return function boundFn(a, b, c, d, e, f) {\n      /* eslint-disable-next-line babel/no-invalid-this,prefer-rest-params */\n      return binder.apply(this, pusher(arguments, boundLength, [a, b, c, d, e, f]));\n    };\n  },\n  function seven(binder, boundLength) {\n    /* eslint-disable-next-line max-params */\n    return function boundFn(a, b, c, d, e, f, g) {\n      /* eslint-disable-next-line babel/no-invalid-this,prefer-rest-params */\n      return binder.apply(this, pusher(arguments, boundLength, [a, b, c, d, e, f, g]));\n    };\n  },\n  function eight(binder, boundLength) {\n    /* eslint-disable-next-line max-params */\n    return function boundFn(a, b, c, d, e, f, g, h) {\n      /* eslint-disable-next-line babel/no-invalid-this,prefer-rest-params */\n      return binder.apply(this, pusher(arguments, boundLength, [a, b, c, d, e, f, g, h]));\n    };\n  },\n];\n\nconst getBoundFn = function getBoundFn(args) {\n  const [binder, target, bindArgs] = args;\n  const boundLength = getMax(ZERO, target.length - getMax(ZERO, bindArgs.length - argsOffset));\n  const fn = boundFns[boundLength];\n  const boundFn = fn ? fn(binder, boundLength) : boundFns[ZERO](binder);\n\n  if (target.prototype) {\n    /* eslint-disable-next-line lodash/prefer-noop */\n    const Empty = function Empty() {};\n\n    Empty.prototype = target.prototype;\n    boundFn.prototype = new Empty();\n    Empty.prototype = null;\n  }\n\n  return boundFn;\n};\n\nconst getResult = function getResult(target, boundArgs) {\n  /* eslint-disable-next-line babel/no-invalid-this */\n  const result = target.apply(this, boundArgs);\n\n  /* eslint-disable-next-line babel/no-invalid-this,babel/new-cap */\n  return ObjectCtr(result) === result ? result : this;\n};\n\nexport const implementation = function bind(target, thisArg) {\n  assertIsFunction(target);\n  /* eslint-disable-next-line prefer-rest-params */\n  const bindArgs = arguments;\n\n  let bound;\n  const binder = function binder() {\n    /* eslint-disable-next-line prefer-rest-params */\n    const boundArgs = pusher(arguments, ZERO, pusher(bindArgs, argsOffset));\n\n    /* eslint-disable-next-line babel/no-invalid-this */\n    return this instanceof bound ? getResult.apply(this, [target, boundArgs]) : target.apply(thisArg, boundArgs);\n  };\n\n  bound = getBoundFn([binder, target, bindArgs]);\n\n  return bound;\n};\n\n/**\n * The bind() method creates a new function that, when called, has its this\n * keyword set to the provided value, with a given sequence of arguments\n * preceding any provided when the new function is called.\n *\n * @function bind\n * @param {Function} target - The target function.\n * @param {*} [thisArg] - The value to be passed as the this parameter to the target\n *  function when the bound function is called. The value is ignored if the\n *  bound function is constructed using the new operator.\n * @param {...*} [args] - Arguments to prepend to arguments provided to the bound\n *  function when invoking the target function.\n * @throws {TypeError} If target is not a function.\n * @returns {Function} The bound function.\n */\nconst $bind = hasWorkingBind ? call.bind(nativeBind) : implementation;\n\nexport default $bind;\n","import pusher from 'util-pusher-x';\nimport bind from 'simple-bind-x';\n\nconst $TypeError = TypeError;\nconst {apply: nativeApply, call: nativeCall} = bind;\nconst $apply = bind(nativeCall, nativeApply);\nconst toStringTag = bind(nativeApply, {}.toString);\nconst ERROR_MESSAGE = ' is not a function';\nconst funcType = '[object Function]';\n\nconst assertIsFunction = function assertIsFunction(value) {\n  if (typeof value !== 'function' && toStringTag(value) !== funcType) {\n    throw new $TypeError(value + ERROR_MESSAGE);\n  }\n\n  return value;\n};\n\n// eslint-disable jsdoc/check-param-names\n// noinspection JSCommentMatchesSignature\n/**\n * The abstract operation Call is used to call the [[Call]] internal method of a function object.\n *\n * @function call\n * @param {Function} F - The target function.\n * @param {*} [V] - The context.\n * @param {Array} [args] - Argument to call the function with.\n * @throws {TypeError} If target is not a function.\n * @returns {*} The the result of invoking the function.\n * @see https://www.ecma-international.org/ecma-262/6.0/#sec-call\n */\n// eslint-enable jsdoc/check-param-names\nconst call = function call(F, V) {\n  /* eslint-disable-next-line prefer-rest-params */\n  return $apply(assertIsFunction(F), V, pusher(arguments[2]));\n};\n\nexport default call;\n","import pusher from 'util-pusher-x';\nimport call from 'simple-call-x';\n\n// eslint-disable jsdoc/check-param-names\n// noinspection JSCommentMatchesSignature\n/**\n * This method attempts to invoke the function, returning either the result or\n * the caught error object. Any additional arguments are provided to the\n * function when it's invoked.\n *\n * @function attempt\n * @param {Function} [fn] - The function to attempt.\n * @param {...*} [args] - The arguments to invoke the function with.\n * @returns {object} Returns an object of the result.\n */\n// eslint-disable jsdoc/check-param-names\nconst attempt = function attempt(fn) {\n  try {\n    return {\n      threw: false,\n      /* eslint-disable-next-line babel/no-invalid-this,prefer-rest-params */\n      value: call(fn, this, pusher(arguments, 1)),\n    };\n  } catch (e) {\n    return {\n      threw: true,\n      value: e,\n    };\n  }\n};\n\nexport default attempt;\n","/**\n * A record of a white space character.\n *\n * @typedef {object} CharRecord\n * @property {number} code - The character code.\n * @property {string} description - A description of the character.\n * @property {boolean} es5 - Whether the spec lists this as a white space.\n * @property {boolean} es2015 - Whether the spec lists this as a white space.\n * @property {boolean} es2016 - Whether the spec lists this as a white space.\n * @property {boolean} es2017 - Whether the spec lists this as a white space.\n * @property {boolean} es2018 - Whether the spec lists this as a white space.\n * @property {string} string - The character string.\n */\n\n/**\n * An array of the whitespace char codes, string, descriptions and language\n * presence in the specifications.\n *\n * @type Array.<CharRecord>\n */\nexport const list = [\n  {\n    code: 0x0009,\n    description: 'Tab',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u0009',\n  },\n  {\n    code: 0x000a,\n    description: 'Line Feed',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u000a',\n  },\n  {\n    code: 0x000b,\n    description: 'Vertical Tab',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u000b',\n  },\n  {\n    code: 0x000c,\n    description: 'Form Feed',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u000c',\n  },\n  {\n    code: 0x000d,\n    description: 'Carriage Return',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u000d',\n  },\n  {\n    code: 0x0020,\n    description: 'Space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u0020',\n  },\n  /*\n  {\n    code: 0x0085,\n    description: 'Next line',\n    es5: false,\n    es2015: false,\n    es2016: false,\n    es2017: false,\n    es2018: false,\n    string: '\\u0085'\n  }\n  */\n  {\n    code: 0x00a0,\n    description: 'No-break space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u00a0',\n  },\n  {\n    code: 0x1680,\n    description: 'Ogham space mark',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u1680',\n  },\n  {\n    code: 0x180e,\n    description: 'Mongolian vowel separator',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: false,\n    es2018: false,\n    string: '\\u180e',\n  },\n  {\n    code: 0x2000,\n    description: 'En quad',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2000',\n  },\n  {\n    code: 0x2001,\n    description: 'Em quad',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2001',\n  },\n  {\n    code: 0x2002,\n    description: 'En space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2002',\n  },\n  {\n    code: 0x2003,\n    description: 'Em space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2003',\n  },\n  {\n    code: 0x2004,\n    description: 'Three-per-em space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2004',\n  },\n  {\n    code: 0x2005,\n    description: 'Four-per-em space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2005',\n  },\n  {\n    code: 0x2006,\n    description: 'Six-per-em space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2006',\n  },\n  {\n    code: 0x2007,\n    description: 'Figure space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2007',\n  },\n  {\n    code: 0x2008,\n    description: 'Punctuation space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2008',\n  },\n  {\n    code: 0x2009,\n    description: 'Thin space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2009',\n  },\n  {\n    code: 0x200a,\n    description: 'Hair space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u200a',\n  },\n  /*\n  {\n    code: 0x200b,\n    description: 'Zero width space',\n    es5: false,\n    es2015: false,\n    es2016: false,\n    es2017: false,\n    es2018: false,\n    string: '\\u200b'\n  },\n  */\n  {\n    code: 0x2028,\n    description: 'Line separator',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2028',\n  },\n  {\n    code: 0x2029,\n    description: 'Paragraph separator',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2029',\n  },\n  {\n    code: 0x202f,\n    description: 'Narrow no-break space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u202f',\n  },\n  {\n    code: 0x205f,\n    description: 'Medium mathematical space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u205f',\n  },\n  {\n    code: 0x3000,\n    description: 'Ideographic space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u3000',\n  },\n  {\n    code: 0xfeff,\n    description: 'Byte Order Mark',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\ufeff',\n  },\n];\n\n/**\n * A string of the ES5 to ES2016 whitespace characters.\n *\n * @type string\n */\nlet stringES2016 = '';\n\n/**\n * A string of the ES2017 to ES2018 whitespace characters.\n *\n * @type string\n */\nlet stringES2018 = '';\nconst {length} = list;\nfor (let i = 0; i < length; i += 1) {\n  if (list[i].es2016) {\n    stringES2016 += list[i].string;\n  }\n\n  if (list[i].es2018) {\n    stringES2018 += list[i].string;\n  }\n}\n\nconst string2018 = stringES2018;\n\nexport default string2018;\nexport const string2016 = stringES2016;\n","import attempt from 'attempt-x';\nimport isSymbol from 'is-symbol';\n\nconst hasSymbolSupport = attempt(() => {\n  /* eslint-disable-next-line compat/compat */\n  return typeof Symbol === 'function' && isSymbol(Symbol(''));\n});\n\n/**\n * Indicates if `Symbol`exists and creates the correct type.\n * `true`, if it exists and creates the correct type, otherwise `false`.\n *\n * @type boolean\n */\nexport default hasSymbolSupport.threw === false && hasSymbolSupport.value === true;\n","/**\n * The abstract operation ToBoolean converts argument to a value of type Boolean.\n *\n * @param {*} [value] - The value to be converted.\n * @returns {boolean} 'true' if value is truthy; otherwise 'false'.\n */\nconst toBoolean = function toBoolean(value) {\n  return !!value;\n};\n\nexport default toBoolean;\n","import call from 'simple-call-x';\nimport pusher from 'util-pusher-x';\n\nconst toStringTag = {}.toString;\nconst ERROR_MESSAGE = 'methodize called on incompatible ';\nconst funcType = '[object Function]';\n\nconst assertIsFunction = function assertIsFunction(value) {\n  if (typeof value !== 'function' && call(toStringTag, value) !== funcType) {\n    throw new TypeError(ERROR_MESSAGE + value);\n  }\n\n  return value;\n};\n\n/**\n * Methodize a prototype method. Compliant to 8 arguments.\n *\n * @param {Function} prototypeMethod - The prototype method to methodize.\n * @throws {TypeError} If target is not a function.\n * @returns {Function} The static method.\n */\nconst methodize = function methodize(prototypeMethod) {\n  assertIsFunction(prototypeMethod);\n\n  return function methodized() {\n    /* eslint-disable-next-line prefer-rest-params */\n    return call(prototypeMethod, arguments[0], pusher(arguments, 1));\n  };\n};\n\nexport default methodize;\n","import methodize from 'simple-methodize-x';\n\nconst methodizedToString = methodize({}.toString);\n\n/**\n * The `toStringTag` method returns \"[object type]\", where type is the\n * object type.\n *\n * @param {*} [value] - The object of which to get the object type string.\n * @returns {string} The object type string.\n */\nconst toStringTag = function toStringTag(value) {\n  if (value === null) {\n    return '[object Null]';\n  }\n\n  if (typeof value === 'undefined') {\n    return '[object Undefined]';\n  }\n\n  return methodizedToString(value);\n};\n\nexport default toStringTag;\n","import hasSymbols from 'has-symbol-support-x';\nimport isSymbol from 'is-symbol';\n\n/**\n * Indicates if `Symbol.toStringTag`exists and is the correct type.\n * `true`, if it exists and is the correct type, otherwise `false`.\n *\n * @type boolean\n */\nexport default hasSymbols &&\n  /* eslint-disable-next-line compat/compat */\n  isSymbol(Symbol.toStringTag);\n","/**\n * Checks if `value` is `null` or `undefined`.\n *\n * @param {*} [value] - The value to check.\n * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n */\nconst isNil = function isNil(value) {\n  /* eslint-disable-next-line lodash/prefer-is-nil */\n  return value === null || typeof value === 'undefined';\n};\n\nexport default isNil;\n","import isNil from 'is-nil-x';\n\n/**\n * The abstract operation RequireObjectCoercible throws an error if argument\n * is a value that cannot be converted to an Object using ToObject.\n *\n * @param {*} [value] - The `value` to check.\n * @throws {TypeError} If `value` is a `null` or `undefined`.\n * @returns {string} The `value`.\n */\nconst requireObjectCoercible = function requireObjectCoercible(value) {\n  if (isNil(value)) {\n    throw new TypeError(`Cannot call method on ${value}`);\n  }\n\n  return value;\n};\n\nexport default requireObjectCoercible;\n","import isSymbol from 'is-symbol';\n\nconst ERROR_MESSAGE = 'Cannot convert a Symbol value to a string';\nconst castString = ERROR_MESSAGE.constructor;\n/**\n * The abstract operation ToString converts argument to a value of type String.\n *\n * @param {*} [value] - The value to convert to a string.\n * @throws {TypeError} If `value` is a Symbol.\n * @returns {string} The converted value.\n */\nconst ToString = function ToString(value) {\n  if (isSymbol(value)) {\n    throw new TypeError(ERROR_MESSAGE);\n  }\n\n  return castString(value);\n};\n\nexport default ToString;\n","import requireObjectCoercible from 'require-object-coercible-x';\nimport toStr from 'to-string-x';\n\n/**\n * This method requires an argument is corecible then converts using ToString.\n *\n * @param {*} [value] - The value to converted to a string.\n * @throws {TypeError} If value is null or undefined.\n * @returns {string} The value as a string.\n */\nconst requireCoercibleToString = function requireCoercibleToString(value) {\n  return toStr(requireObjectCoercible(value));\n};\n\nexport default requireCoercibleToString;\n","import requireCoercibleToString from 'require-coercible-to-string-x';\nimport whiteSpace from 'white-space-x';\nimport methodize from 'simple-methodize-x';\n\nconst EMPTY_STRING = '';\nconst RegExpCtr = /none/.constructor;\nconst reLeft = new RegExpCtr(`^[${whiteSpace}]+`);\nconst methodizedReplace = methodize(EMPTY_STRING.replace);\n\n/**\n * This method removes whitespace from the start of a string. (ES2019).\n *\n * @param {string} [string] - The string to trim the left end whitespace from.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @returns {string} The left trimmed string.\n */\nconst trimStart = function trimStart(string) {\n  return methodizedReplace(requireCoercibleToString(string), reLeft, EMPTY_STRING);\n};\n\nexport default trimStart;\n","import requireCoercibleToString from 'require-coercible-to-string-x';\nimport whiteSpace from 'white-space-x';\nimport methodize from 'simple-methodize-x';\n\nconst EMPTY_STRING = '';\nconst RegExpCtr = /none/.constructor;\nconst reRight = new RegExpCtr(`[${whiteSpace}]+$`);\nconst methodizedReplace = methodize(EMPTY_STRING.replace);\n\n/**\n * This method removes whitespace from the end of a string. (ES2019).\n *\n * @param {string} [string] - The string to trim the right end whitespace from.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @returns {string} The right trimmed string.\n */\nconst trimEnd = function trimEnd(string) {\n  return methodizedReplace(requireCoercibleToString(string), reRight, EMPTY_STRING);\n};\n\nexport default trimEnd;\n","import trimStart from 'trim-left-x';\nimport trimEnd from 'trim-right-x';\n\n/**\n * This method removes whitespace from the start and end of a string.\n * (ES2019).\n *\n * @param {string} [string] - The string to trim the whitespace from.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @returns {string} The trimmed string.\n */\nconst trim = function trim(string) {\n  return trimStart(trimEnd(string));\n};\n\nexport default trim;\n","import trim from 'trim-x';\nimport whiteSpace from 'white-space-x';\nimport methodize from 'simple-methodize-x';\n\nconst SPACE = ' ';\nconst RegExpCtr = /none/.constructor;\nconst reNormalize = new RegExpCtr(`[${whiteSpace}]+`, 'g');\nconst methodizedReplace = methodize(SPACE.replace);\n\n/**\n * This method strips leading and trailing white-space from a string,\n * replaces sequences of whitespace characters by a single space,\n * and returns the resulting string. (ES2019).\n *\n * @param {string} [string] - The string to be normalized.\n * @throws {TypeError} If string is null or undefined or not coercible.\n */\nconst normalizeSpace = function normalizeSpace(string) {\n  return methodizedReplace(trim(string), reNormalize, SPACE);\n};\n\nexport default normalizeSpace;\n","import toStr from 'to-string-x';\nimport requireCoercibleToString from 'require-coercible-to-string-x';\nimport methodize from 'simple-methodize-x';\n\nconst EMPTY_STRING = '';\nconst STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/gm;\nconst methodizedReplace = methodize(EMPTY_STRING.replace);\n\n/**\n * This method replaces comments in a string.\n *\n * @param {string} [string] - The string to be stripped.\n * @param {string} [replacement=''] - The string to be used as a replacement.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @throws {TypeError} If replacement is not coercible.\n * @returns {string} The new string with the comments replaced.\n */\nconst replaceComments = function replaceComments(string, replacement) {\n  return methodizedReplace(\n    requireCoercibleToString(string),\n    STRIP_COMMENTS,\n    arguments.length > 1 ? toStr(replacement) : EMPTY_STRING,\n  );\n};\n\nexport default replaceComments;\n","import attempt from 'attempt-x';\nimport toBoolean from 'to-boolean-x';\nimport toStringTag from 'to-string-tag-x';\nimport hasToStringTag from 'has-to-string-tag-x';\nimport isPrimitive from 'is-primitive-x';\nimport normalise from 'normalize-space-x';\nimport deComment from 'replace-comments-x';\nimport methodize from 'simple-methodize-x';\n\nconst FunctionCtr = attempt.constructor;\nconst SPACE = ' ';\nconst methodizedFunctionToString = methodize(attempt.toString);\nconst funcTag = '[object Function]';\nconst genTag = '[object GeneratorFunction]';\nconst asyncTag = '[object AsyncFunction]';\nconst ctrRx = /^class /;\nconst methodizedTest = methodize(ctrRx.test);\n\nconst hasNativeClass =\n  attempt(function attemptee() {\n    /* eslint-disable-next-line babel/new-cap */\n    return FunctionCtr('\"use strict\"; return class My {};')();\n  }).threw === false;\n\nconst testClassString = function testClassString(value) {\n  return methodizedTest(ctrRx, normalise(deComment(methodizedFunctionToString(value), SPACE)));\n};\n\nconst isES6ClassFn = function isES6ClassFunc(value) {\n  const result = attempt(testClassString, value);\n\n  return result.threw === false && result.value;\n};\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @private\n * @param {*} value - The value to check.\n * @param {boolean} allowClass - Whether to filter ES6 classes.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n * else `false`.\n */\nconst tryFuncToString = function funcToString(value, allowClass) {\n  if (hasNativeClass && allowClass === false && isES6ClassFn(value)) {\n    return false;\n  }\n\n  return (\n    attempt(function attemptee() {\n      return methodizedFunctionToString(value);\n    }).threw === false\n  );\n};\n\nconst compareTags = function compareTags(value) {\n  const strTag = toStringTag(value);\n\n  return strTag === funcTag || strTag === genTag || strTag === asyncTag;\n};\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @param {*} value - The value to check.\n * @param {boolean} [allowClass=false] - Whether to filter ES6 classes.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n * else `false`.\n */\nconst isFunction = function isFunction(value, allowClass) {\n  if (isPrimitive(value)) {\n    return false;\n  }\n\n  if (hasToStringTag) {\n    return tryFuncToString(value, toBoolean(allowClass));\n  }\n\n  if (hasNativeClass && toBoolean(allowClass) === false && isES6ClassFn(value)) {\n    return false;\n  }\n\n  return compareTags(value);\n};\n\nexport default isFunction;\n","import hasSymbols from 'has-symbol-support-x';\nimport isPrimitive from 'is-primitive-x';\nimport isDate from 'is-date-object';\nimport isSymbol from 'is-symbol';\nimport isFunction from 'is-function-x';\nimport requireObjectCoercible from 'require-object-coercible-x';\nimport isNil from 'is-nil-x';\nimport call from 'simple-call-x';\n\nconst ZERO = 0;\nconst ONE = 1;\n/* eslint-disable-next-line no-void */\nconst UNDEFINED = void ZERO;\nconst NUMBER = 'number';\nconst STRING = 'string';\nconst DEFAULT = 'default';\nconst StringCtr = STRING.constructor;\nconst NumberCtr = ZERO.constructor;\n/* eslint-disable-next-line compat/compat */\nconst symToPrimitive = hasSymbols && Symbol.toPrimitive;\n/* eslint-disable-next-line compat/compat */\nconst symValueOf = hasSymbols && Symbol.prototype.valueOf;\n\nconst toStringOrder = ['toString', 'valueOf'];\nconst toNumberOrder = ['valueOf', 'toString'];\nconst orderLength = 2;\n\nconst assertHint = function assertHint(hint) {\n  if (typeof hint !== 'string' || (hint !== NUMBER && hint !== STRING)) {\n    throw new TypeError('hint must be \"string\" or \"number\"');\n  }\n\n  return hint;\n};\n\n/**\n * @param {*} ordinary - The ordinary to convert.\n * @param {*} hint - The hint.\n * @returns {*} - The primitive.\n */\nconst ordinaryToPrimitive = function ordinaryToPrimitive(ordinary, hint) {\n  requireObjectCoercible(ordinary);\n  assertHint(hint);\n\n  const methodNames = hint === STRING ? toStringOrder : toNumberOrder;\n  for (let i = ZERO; i < orderLength; i += ONE) {\n    const method = ordinary[methodNames[i]];\n\n    if (isFunction(method)) {\n      const result = call(method, ordinary);\n\n      if (isPrimitive(result)) {\n        return result;\n      }\n    }\n  }\n\n  throw new TypeError('No default value');\n};\n\n/**\n * @param {*} object - The object.\n * @param {*} property - The property.\n * @returns {undefined|Function} - The method.\n */\nconst getMethod = function getMethod(object, property) {\n  const func = object[property];\n\n  if (isNil(func) === false) {\n    if (isFunction(func) === false) {\n      throw new TypeError(`${func} returned for property ${property} of object ${object} is not a function`);\n    }\n\n    return func;\n  }\n\n  return UNDEFINED;\n};\n\n/**\n * Get the hint.\n *\n * @param {*} value - The value to compare.\n * @param {boolean} supplied - Was a value supplied.\n * @returns {string} - The hint string.\n */\nconst getHint = function getHint(value, supplied) {\n  if (supplied) {\n    if (value === StringCtr) {\n      return STRING;\n    }\n\n    if (value === NumberCtr) {\n      return NUMBER;\n    }\n  }\n\n  return DEFAULT;\n};\n\n/**\n * Get the primitive from the exotic.\n *\n * @param {*} value - The exotic.\n * @returns {*} - The primitive.\n */\nconst getExoticToPrim = function getExoticToPrim(value) {\n  if (hasSymbols) {\n    if (symToPrimitive) {\n      return getMethod(value, symToPrimitive);\n    }\n\n    if (isSymbol(value)) {\n      return symValueOf;\n    }\n  }\n\n  return UNDEFINED;\n};\n\nconst evalExotic = function evalExotic(obj) {\n  const {exoticToPrim, input, hint} = obj;\n  const result = call(exoticToPrim, input, [hint]);\n\n  if (isPrimitive(result)) {\n    return result;\n  }\n\n  throw new TypeError('unable to convert exotic object to primitive');\n};\n\nconst evalPrimitive = function evalPrimitive(input, hint) {\n  const newHint = hint === DEFAULT && (isDate(input) || isSymbol(input)) ? STRING : hint;\n\n  return ordinaryToPrimitive(input, newHint === DEFAULT ? NUMBER : newHint);\n};\n\n/**\n * This method converts a JavaScript object to a primitive value.\n * Note: When toPrimitive is called with no hint, then it generally behaves as\n * if the hint were Number. However, objects may over-ride this behaviour by\n * defining a @@toPrimitive method. Of the objects defined in this specification\n * only Date objects (see 20.3.4.45) and Symbol objects (see 19.4.3.4) over-ride\n * the default ToPrimitive behaviour. Date objects treat no hint as if the hint\n * were String.\n *\n * @param {*} input - The input to convert.\n * @param {Function} [preferredType] - The preferred type (String or Number).\n * @throws {TypeError} If unable to convert input to a primitive.\n * @returns {string|number} The converted input as a primitive.\n * @see {http://www.ecma-international.org/ecma-262/6.0/#sec-toprimitive}\n */\nconst toPrimitive = function toPrimitive(input, preferredType) {\n  if (isPrimitive(input)) {\n    return input;\n  }\n\n  const hint = getHint(preferredType, arguments.length > ONE);\n  const exoticToPrim = getExoticToPrim(input);\n\n  return typeof exoticToPrim === 'undefined' ? evalPrimitive(input, hint) : evalExotic({exoticToPrim, input, hint});\n};\n\nexport default toPrimitive;\n","import NAN from 'nan-x';\nimport toStr from 'to-string-x';\nimport trimLeft from 'trim-left-x';\nimport methodize from 'simple-methodize-x';\n\nconst nativeParseInt = parseInt;\n/**  @type {Function} */\nconst castNumber = (0).constructor;\nconst BAD_CHAR = '\\u180E';\nconst methodizedCharAt = methodize(BAD_CHAR.charAt);\nconst hexRegex = /^[-+]?0[xX]/;\nconst methodizedTest = methodize(hexRegex.test);\n\n/**\n * This method parses a string argument and returns an integer of the specified\n * radix (the base in mathematical numeral systems). (ES2019).\n *\n * @param {string} [string] - The value to parse. If the string argument is not a\n *  string, then it is converted to a string (using the ToString abstract\n *  operation). Leading whitespace in the string argument is ignored.\n * @param {number} [radix] - An integer between 2 and 36 that represents the radix\n *  (the base in mathematical numeral systems) of the above mentioned string.\n *  Specify 10 for the decimal numeral system commonly used by humans. Always\n *  specify this parameter to eliminate reader confusion and to guarantee\n *  predictable behavior. Different implementations produce different results\n *  when a radix is not specified, usually defaulting the value to 10.\n * @throws {TypeError} If target is a Symbol or is not coercible.\n * @returns {number} An integer number parsed from the given string. If the first\n *  character cannot be converted to a number, NaN is returned.\n */\nconst $parseInt = function $parseInt(string, radix) {\n  const str = trimLeft(toStr(string));\n\n  if (methodizedCharAt(str, 0) === BAD_CHAR) {\n    return NAN;\n  }\n\n  return nativeParseInt(str, castNumber(radix) || (methodizedTest(hexRegex, str) ? 16 : 10));\n};\n\nexport default $parseInt;\n","/**\n * The constant NaN derived mathematically by 0 / 0.\n *\n * @type number\n */\nconst constantNAN = 0 / 0;\n\nexport default constantNAN;\n","import isSymbol from 'is-symbol';\nimport toPrimitive from 'to-primitive-x';\nimport trim from 'trim-x';\nimport $parseInt from 'parse-int-x';\nimport NAN from 'nan-x';\nimport methodize from 'simple-methodize-x';\n\nconst binaryRadix = 2;\nconst octalRadix = 8;\nconst testCharsCount = 2;\nconst ERROR_MESSAGE = 'Cannot convert a Symbol value to a number';\n\nconst castNumber = testCharsCount.constructor;\nconst methodizedStringSlice = methodize(ERROR_MESSAGE.slice);\n\nconst binaryRegex = /^0b[01]+$/i;\nconst RegExpConstructor = binaryRegex.constructor;\n// Note that in IE 8, RegExp.prototype.test doesn't seem to exist: ie, \"test\" is\n// an own property of regexes. wtf.\nconst methodizedTest = methodize(binaryRegex.test);\nconst isBinary = function isBinary(value) {\n  return methodizedTest(binaryRegex, value);\n};\n\nconst octalRegex = /^0o[0-7]+$/i;\nconst isOctal = function isOctal(value) {\n  return methodizedTest(octalRegex, value);\n};\n\nconst nonWSregex = new RegExpConstructor('[\\u0085\\u180e\\u200b\\ufffe]', 'g');\nconst hasNonWS = function hasNonWS(value) {\n  return methodizedTest(nonWSregex, value);\n};\n\nconst invalidHexLiteral = /^[-+]0x[0-9a-f]+$/i;\nconst isInvalidHexLiteral = function isInvalidHexLiteral(value) {\n  return methodizedTest(invalidHexLiteral, value);\n};\n\nconst assertNotSymbol = function assertNotSymbol(value) {\n  if (isSymbol(value)) {\n    throw new TypeError(ERROR_MESSAGE);\n  }\n\n  return value;\n};\n\nconst parseBase = function parseBase(value, radix) {\n  return $parseInt(methodizedStringSlice(value, testCharsCount), radix);\n};\n\nconst parseString = function parseString(toNum, value) {\n  if (isBinary(value)) {\n    return toNum(parseBase(value, binaryRadix));\n  }\n\n  if (isOctal(value)) {\n    return toNum(parseBase(value, octalRadix));\n  }\n\n  return null;\n};\n\nconst convertString = function convertString(toNum, value) {\n  const val = parseString(toNum, value);\n\n  if (val !== null) {\n    return val;\n  }\n\n  if (hasNonWS(value) || isInvalidHexLiteral(value)) {\n    return NAN;\n  }\n\n  const trimmed = trim(value);\n\n  if (trimmed !== value) {\n    return toNum(trimmed);\n  }\n\n  return null;\n};\n\n/**\n * This method converts argument to a value of type Number. (ES2019).\n *\n * @param {*} [argument] - The argument to convert to a number.\n * @throws {TypeError} - If argument is a Symbol or not coercible.\n * @returns {*} The argument converted to a number.\n */\nconst toNumber = function toNumber(argument) {\n  const value = assertNotSymbol(toPrimitive(argument, castNumber));\n\n  if (typeof value === 'string') {\n    const val = convertString(toNumber, value);\n\n    if (val !== null) {\n      return val;\n    }\n  }\n\n  return castNumber(value);\n};\n\nexport default toNumber;\n","/**\n * This method determines whether the passed value is NaN and its type is\n * `Number`. It is a more robust version of the original, global isNaN().\n *\n * @param {*} [value] - The value to be tested for NaN.\n * @returns {boolean} `true` if the given value is NaN and its type is Number;\n *  otherwise, `false`.\n */\nconst isNaN = function isNaN(value) {\n  /* eslint-disable-next-line no-self-compare */\n  return value !== value;\n};\n\nexport default isNaN;\n","import numberIsNaN from 'is-nan-x';\nimport INFINITY from 'infinity-x';\n\n/**\n * This method determines whether the passed value is a finite number.\n *\n * @param {*} [number] - The value to be tested for finiteness.\n * @returns {boolean} A Boolean indicating whether or not the given value is a finite number.\n */\nconst isFinite = function isFinite(number) {\n  return typeof number === 'number' && numberIsNaN(number) === false && number !== INFINITY && number !== -INFINITY;\n};\n\nexport default isFinite;\n","/**\n * The constant value Infinity derived mathematically by 1 / 0.\n *\n * @type number\n */\nconst constantInfinity = 1 / 0;\n\nexport default constantInfinity;\n","import toNumber from 'to-number-x';\nimport numberIsNaN from 'is-nan-x';\n\n/**\n * This method returns the sign of a number, indicating whether the number is positive,\n * negative or zero. (ES2019).\n *\n * @param {*} x - A number.\n * @returns {number} A number representing the sign of the given argument. If the argument\n * is a positive number, negative number, positive zero or negative zero, the function will\n * return 1, -1, 0 or -0 respectively. Otherwise, NaN is returned.\n */\nconst sign = function sign(x) {\n  const n = toNumber(x);\n\n  if (n === 0 || numberIsNaN(n)) {\n    return n;\n  }\n\n  return n > 0 ? 1 : -1;\n};\n\nexport default sign;\n","import toNumber from 'to-number-x';\nimport numberIsNaN from 'is-nan-x';\nimport numberIsFinite from 'is-finite-x';\nimport mathSign from 'math-sign-x';\n\nconst {abs, floor} = Math;\n\n/**\n * Converts `value` to an integer. (ES2019).\n *\n * @param {*} value - The value to convert.\n * @returns {number} Returns the converted integer.\n */\nconst toInteger = function toInteger(value) {\n  const number = toNumber(value);\n\n  if (numberIsNaN(number)) {\n    return 0;\n  }\n\n  if (number === 0 || numberIsFinite(number) === false) {\n    return number;\n  }\n\n  return mathSign(number) * floor(abs(number));\n};\n\nexport default toInteger;\n","import toInteger from 'to-integer-x';\n\nconst MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Converts `value` to an integer suitable for use as the length of an\n * array-like object. (ES2019).\n *\n * @param {*} value - The value to convert.\n * @returns {number} Returns the converted integer.\n */\nconst toLength = function toLength(value) {\n  const len = toInteger(value);\n\n  // includes converting -0 to +0\n  if (len <= 0) {\n    return 0;\n  }\n\n  if (len > MAX_SAFE_INTEGER) {\n    return MAX_SAFE_INTEGER;\n  }\n\n  return len;\n};\n\nexport default toLength;\n","import isFunction from 'is-function-x';\nimport isPrimitive from 'is-primitive-x';\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not a\n * primitive and not a function.\n *\n * @param {*} [value] - The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nconst isObjectLike = function isObjectLike(value) {\n  return isPrimitive(value) === false && isFunction(value, true) === false;\n};\n\nexport default isObjectLike;\n","import requireObjectCoercible from 'require-object-coercible-x';\n\nconst castObject = {}.constructor;\n\n/**\n * The abstract operation ToObject converts argument to a value of\n * type Object.\n *\n * @param {*} value - The `value` to convert.\n * @throws {TypeError} If `value` is a `null` or `undefined`.\n * @returns {!object} The `value` converted to an object.\n */\nconst toObject = function toObject(value) {\n  return castObject(requireObjectCoercible(value));\n};\n\nexport default toObject;\n","import hasSymbols from 'has-symbol-support-x';\nimport toPrimitive from 'to-primitive-x';\nimport toStr from 'to-string-x';\n\n/**\n * This method Converts argument to a value that can be used as a property key.\n *\n * @param {*} argument - The argument to convert to a property key.\n * @throws {TypeError} If argument is not a symbol and is not coercible to a string.\n * @returns {string|symbol} The converted argument.\n */\nconst toPropertyKey = function toPropertyKey(argument) {\n  const key = toPrimitive(argument, String);\n\n  return hasSymbols && typeof key === 'symbol' ? key : toStr(key);\n};\n\nexport default toPropertyKey;\n","import toObject from 'to-object-x';\nimport toPropertyKey from 'to-property-key-x';\nimport attempt from 'attempt-x';\nimport hasSymbolSupport from 'has-symbol-support-x';\nimport owns from 'has-own-property-x';\nimport isPrimitive from 'is-primitive-x';\nimport isString from 'is-string';\nimport isIndex from 'is-index-x';\nimport propertyIsEnumerable from 'property-is-enumerable-x';\nimport toBoolean from 'to-boolean-x';\nimport methodize from 'simple-methodize-x';\n\nconst EMPTY_STRING = '';\nconst charAt = methodize(EMPTY_STRING.charAt);\nconst ObjectCtr = {}.constructor;\nconst ngopd = ObjectCtr.getOwnPropertyDescriptor;\nconst nativeGOPD = typeof ngopd === 'function' && ngopd;\nlet getOPDFallback1;\nlet getOPDFallback2;\n\n// ES5 15.2.3.3\n// http://es5.github.com/#x15.2.3.3\n\nconst doesGOPDWork = function doesGOPDWork(object, prop) {\n  object[toPropertyKey(prop)] = 0;\n  const testResult = attempt(nativeGOPD, object, prop);\n\n  return testResult.threw === false && testResult.value.value === 0;\n};\n\nconst prototypeOfObject = ObjectCtr.prototype;\n\n// If JS engine supports accessors creating shortcuts.\nconst supportsAccessors = owns(prototypeOfObject, '__defineGetter__');\n/* eslint-disable-next-line no-underscore-dangle */\nconst lookupGetter = supportsAccessors && methodize(prototypeOfObject.__lookupGetter__);\n/* eslint-disable-next-line no-underscore-dangle */\nconst lookupSetter = supportsAccessors && methodize(prototypeOfObject.__lookupSetter__);\n\nexport const implementation = function getOwnPropertyDescriptor(object, property) {\n  const obj = toObject(object);\n  const propKey = toPropertyKey(property);\n\n  let result;\n\n  // make a valiant attempt to use the real getOwnPropertyDescriptor for I8's DOM elements.\n  if (getOPDFallback1) {\n    result = attempt(function attemptee() {\n      return getOPDFallback1(toObject(obj), propKey);\n    });\n\n    if (result.threw === false) {\n      return result.value;\n    }\n    // try the shim if the real one doesn't work\n  }\n\n  const isStringIndex = isString(obj) && isIndex(propKey, obj.length);\n\n  if (getOPDFallback2 && isStringIndex === false) {\n    result = attempt(function attemptee() {\n      return getOPDFallback2(toObject(obj), propKey);\n    });\n\n    if (result.threw === false) {\n      return result.value;\n    }\n    // try the shim if the real one doesn't work\n  }\n\n  /* eslint-disable-next-line no-void */\n  let descriptor = void 0;\n\n  // If object does not owns property return undefined immediately.\n  if (isStringIndex === false && owns(obj, propKey) === false) {\n    return descriptor;\n  }\n\n  // If object has a property then it's for sure `configurable`, and\n  // probably `enumerable`. Detect enumerability though.\n  descriptor = {\n    configurable: isPrimitive(object) === false && isStringIndex === false,\n    enumerable: propertyIsEnumerable(obj, propKey),\n  };\n\n  // If JS engine supports accessor properties then property may be a\n  // getter or setter.\n  if (supportsAccessors) {\n    // Unfortunately `__lookupGetter__` will return a getter even\n    // if object has own non getter property along with a same named\n    // inherited getter. To avoid misbehavior we temporary remove\n    // `__proto__` so that `__lookupGetter__` will return getter only\n    // if it's owned by an object.\n    /* eslint-disable-next-line no-proto */\n    const prototype = obj.__proto__;\n    const notPrototypeOfObject = obj !== prototypeOfObject;\n\n    // avoid recursion problem, breaking in Opera Mini when\n    // Object.getOwnPropertyDescriptor(Object.prototype, 'toString')\n    // or any other Object.prototype accessor\n    if (notPrototypeOfObject) {\n      /* eslint-disable-next-line no-proto */\n      obj.__proto__ = prototypeOfObject;\n    }\n\n    const getter = lookupGetter(obj, propKey);\n    const setter = lookupSetter(obj, propKey);\n\n    if (notPrototypeOfObject) {\n      // Once we have getter and setter we can put values back.\n      /* eslint-disable-next-line no-proto */\n      obj.__proto__ = prototype;\n    }\n\n    if (getter || setter) {\n      if (getter) {\n        descriptor.get = getter;\n      }\n\n      if (setter) {\n        descriptor.set = setter;\n      }\n\n      // If it was accessor property we're done and return here\n      // in order to avoid adding `value` to the descriptor.\n      return descriptor;\n    }\n  }\n\n  // If we got this far we know that object has an own property that is\n  // not an accessor so we set it as a value and return descriptor.\n  if (isStringIndex) {\n    descriptor.value = charAt(obj, propKey);\n    descriptor.writable = false;\n  } else {\n    descriptor.value = obj[propKey];\n    descriptor.writable = true;\n  }\n\n  return descriptor;\n};\n\n/**\n * This method returns a property descriptor for an own property (that is,\n * one directly present on an object and not in the object's prototype chain)\n * of a given object.\n *\n * @param {*} object - The object in which to look for the property.\n * @param {*} property - The name of the property whose description is to be retrieved.\n * @returns {object} A property descriptor of the given property if it exists on the object, undefined otherwise.\n */\nlet $getOwnPropertyDescriptor;\n\n// check whether getOwnPropertyDescriptor works if it's given. Otherwise, shim partially.\nif (nativeGOPD) {\n  const doc = typeof document !== 'undefined' && document;\n  const getOPDWorksOnDom = doc ? doesGOPDWork(doc.createElement('div'), 'sentinel') : true;\n\n  if (getOPDWorksOnDom) {\n    const res = attempt(nativeGOPD, toObject('abc'), 1);\n    const worksWithStr = res.threw === false && res.value && res.value.value === 'b';\n\n    if (worksWithStr) {\n      const getOPDWorksOnObject = doesGOPDWork({}, 'sentinel');\n\n      if (getOPDWorksOnObject) {\n        const worksWithPrim = attempt(nativeGOPD, 42, 'name').threw === false;\n        /* eslint-disable-next-line compat/compat */\n        const worksWithObjSym = hasSymbolSupport && doesGOPDWork({}, toObject(Symbol(EMPTY_STRING)));\n\n        if (worksWithObjSym) {\n          if (worksWithPrim) {\n            $getOwnPropertyDescriptor = nativeGOPD;\n          } else {\n            $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(object, property) {\n              return nativeGOPD(toObject(object), property);\n            };\n          }\n        } else if (worksWithPrim) {\n          $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(object, property) {\n            return nativeGOPD(object, toPropertyKey(property));\n          };\n        } else {\n          $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(object, property) {\n            return nativeGOPD(toObject(object), toPropertyKey(property));\n          };\n        }\n      } else {\n        getOPDFallback1 = nativeGOPD;\n      }\n    } else {\n      getOPDFallback2 = nativeGOPD;\n    }\n  }\n}\n\nif (toBoolean($getOwnPropertyDescriptor) === false || getOPDFallback1 || getOPDFallback2) {\n  $getOwnPropertyDescriptor = implementation;\n}\n\nconst gOPS = $getOwnPropertyDescriptor;\n\nexport default gOPS;\n","import toObject from 'to-object-x';\nimport toPropertyKey from 'to-property-key-x';\nimport methodize from 'simple-methodize-x';\n\nconst hop = methodize({}.hasOwnProperty);\n\n/**\n * The `hasOwnProperty` method returns a boolean indicating whether\n * the `object` has the specified `property`. Does not attempt to fix known\n * issues in older browsers, but does ES6ify the method.\n *\n * @param {!object} object - The object to test.\n * @throws {TypeError} If object is null or undefined.\n * @param {string|number|symbol} property - The name or Symbol of the property to test.\n * @returns {boolean} `true` if the property is set on `object`, else `false`.\n */\nconst hasOwnProperty = function hasOwnProperty(object, property) {\n  return hop(toObject(object), toPropertyKey(property));\n};\n\nexport default hasOwnProperty;\n","import hasSymbols from 'has-symbol-support-x';\nimport isSymbol from 'is-symbol';\n\n/* eslint-disable-next-line compat/compat */\nconst pToString = hasSymbols && Symbol.prototype.toString;\nconst isSymbolFn = typeof pToString === 'function' && isSymbol;\n/** @type {Function} */\nconst castString = ''.constructor;\n\n/**\n * The abstract operation ToString converts argument to a value of type String,\n * however the specification states that if the argument is a Symbol then a\n * 'TypeError' is thrown. This version also allows Symbols be converted to\n * a string. Other uncoercible exotics will still throw though.\n *\n * @param {*} [value] - The value to convert to a string.\n * @returns {string} The converted value.\n */\nconst toStringSymbolsSupported = function toStringSymbolsSupported(value) {\n  return isSymbolFn && isSymbolFn(value) ? pToString.call(value) : castString(value);\n};\n\nexport default toStringSymbolsSupported;\n","import toNumber from 'to-number-x';\n\nconst getMaxMin = function getMaxMin(args) {\n  const minVal = toNumber(args[1]);\n  const result = args.length < 3 ? {max: minVal, min: 0} : {max: toNumber(args[2]), min: minVal};\n\n  if (result.min > result.max) {\n    throw new RangeError('\"min\" must be less than \"max\"');\n  }\n\n  return result;\n};\n\n// eslint-disable jsdoc/check-param-names\n// noinspection JSCommentMatchesSignature\n/**\n * This method clamp a number to min and max limits inclusive.\n *\n * @param {number} value - The number to be clamped.\n * @param {number} [min=0] - The minimum number.\n * @param {number} max - The maximum number.\n * @throws {RangeError} If min > max.\n * @returns {number} The clamped number.\n */\n// eslint-enable jsdoc/check-param-names\nconst clamp = function clamp(value) {\n  const number = toNumber(value);\n\n  if (arguments.length < 2) {\n    return number;\n  }\n\n  /* eslint-disable-next-line prefer-rest-params */\n  const {max, min} = getMaxMin(arguments);\n\n  if (number < min) {\n    return min;\n  }\n\n  if (number > max) {\n    return max;\n  }\n\n  return number;\n};\n\nexport default clamp;\n","import safeToString from 'to-string-symbols-supported-x';\nimport toInteger from 'to-integer-x';\nimport toNumber from 'to-number-x';\nimport mathClamp from 'math-clamp-x';\n\nconst MAX_SAFE_INTEGER = 9007199254740991;\nconst reIsUint = /^(?:0|[1-9]\\d*)$/;\nconst rxTest = reIsUint.test;\n\n/**\n * This method determines whether the passed value is a zero based index.\n * JavaScript arrays are zero-indexed: the first element of an array is at\n * index 0, and the last element is at the index equal to the value of the\n * array's length property minus 1.\n *\n * @param {number|string} value - The value to be tested for being a zero based index.\n * @param {number} [length=MAX_SAFE_INTEGER] - The length that sets the upper bound.\n * @returns {boolean} A Boolean indicating whether or not the given value is a\n * zero based index within bounds.\n */\nconst isIndex = function isIndex(value, length) {\n  const string = safeToString(value);\n\n  if (rxTest.call(reIsUint, string) === false) {\n    return false;\n  }\n\n  const number = toNumber(string);\n\n  if (arguments.length > 1) {\n    return number < mathClamp(toInteger(length), MAX_SAFE_INTEGER);\n  }\n\n  return number < MAX_SAFE_INTEGER;\n};\n\nexport default isIndex;\n","import toPropertyKey from 'to-property-key-x';\nimport toObject from 'to-object-x';\nimport methodize from 'simple-methodize-x';\n\nconst propIsEnumerable = methodize({}.propertyIsEnumerable);\n\n/**\n * This method returns a Boolean indicating whether the specified property is\n * enumerable. Does not attempt to fix bugs in IE<9 or old Opera, otherwise it\n * does ES6ify the method.\n *\n * @param {!object} object - The object on which to test the property.\n * @param {string|symbol} property - The name of the property to test.\n * @throws {TypeError} If target is null or undefined.\n * @returns {boolean} A Boolean indicating whether the specified property is\n *  enumerable.\n */\nconst propertyIsEnumerable = function propertyIsEnumerable(object, property) {\n  return propIsEnumerable(toObject(object), toPropertyKey(property));\n};\n\nexport default propertyIsEnumerable;\n","import attempt from 'attempt-x';\nimport toObject from 'to-object-x';\nimport toPropertyKey from 'to-property-key-x';\nimport has from 'has-own-property-x';\nimport isFunction from 'is-function-x';\nimport assertIsObject from 'assert-is-object-x';\nimport toBoolean from 'to-boolean-x';\nimport methodize from 'simple-methodize-x';\n\nconst ObjectCtr = {}.constructor;\nconst nd = ObjectCtr.defineProperty;\nconst nativeDefProp = typeof nd === 'function' && nd;\nlet definePropertyFallback;\n\nconst toPropertyDescriptor = function toPropertyDescriptor(desc) {\n  const object = toObject(desc);\n  const descriptor = {};\n\n  if (has(object, 'enumerable')) {\n    descriptor.enumerable = toBoolean(object.enumerable);\n  }\n\n  if (has(object, 'configurable')) {\n    descriptor.configurable = toBoolean(object.configurable);\n  }\n\n  if (has(object, 'value')) {\n    descriptor.value = object.value;\n  }\n\n  if (has(object, 'writable')) {\n    descriptor.writable = toBoolean(object.writable);\n  }\n\n  if (has(object, 'get')) {\n    const getter = object.get;\n\n    if (typeof getter !== 'undefined' && isFunction(getter) === false) {\n      throw new TypeError('getter must be a function');\n    }\n\n    descriptor.get = getter;\n  }\n\n  if (has(object, 'set')) {\n    const setter = object.set;\n\n    if (typeof setter !== 'undefined' && isFunction(setter) === false) {\n      throw new TypeError('setter must be a function');\n    }\n\n    descriptor.set = setter;\n  }\n\n  if ((has(descriptor, 'get') || has(descriptor, 'set')) && (has(descriptor, 'value') || has(descriptor, 'writable'))) {\n    throw new TypeError('Invalid property descriptor. Cannot both specify accessors and a value or writable attribute');\n  }\n\n  return descriptor;\n};\n\n// ES5 15.2.3.6\n// http://es5.github.com/#x15.2.3.6\n\n// Patch for WebKit and IE8 standard mode\n// Designed by hax <hax.github.com>\n// related issue: https://github.com/es-shims/es5-shim/issues#issue/5\n// IE8 Reference:\n//     http://msdn.microsoft.com/en-us/library/dd282900.aspx\n//     http://msdn.microsoft.com/en-us/library/dd229916.aspx\n// WebKit Bugs:\n//     https://bugs.webkit.org/show_bug.cgi?id=36423\n\nconst prototypeOfObject = ObjectCtr.prototype;\n// If JS engine supports accessors creating shortcuts.\nconst supportsAccessors = has(prototypeOfObject, '__defineGetter__');\n/* eslint-disable-next-line no-underscore-dangle,no-restricted-properties */\nconst defineGetter = supportsAccessors && methodize(prototypeOfObject.__defineGetter__);\n/* eslint-disable-next-line no-underscore-dangle,no-restricted-properties */\nconst defineSetter = supportsAccessors && methodize(prototypeOfObject.__defineSetter__);\n/* eslint-disable-next-line no-underscore-dangle */\nconst lookupGetter = supportsAccessors && methodize(prototypeOfObject.__lookupGetter__);\n/* eslint-disable-next-line no-underscore-dangle */\nconst lookupSetter = supportsAccessors && methodize(prototypeOfObject.__lookupSetter__);\n\nexport const implementation = function defineProperty(object, property, descriptor) {\n  assertIsObject(object);\n  const propKey = toPropertyKey(property);\n  const propDesc = toPropertyDescriptor(descriptor);\n\n  // make a valiant attempt to use the real defineProperty for IE8's DOM elements.\n  if (definePropertyFallback) {\n    const result = attempt(function attemptee() {\n      return definePropertyFallback(ObjectCtr, object, propKey, propDesc);\n    });\n\n    if (result.threw === false) {\n      return result.value;\n    }\n    // try the shim if the real one doesn't work\n  }\n\n  // If it's a data property.\n  if (has(propDesc, 'value')) {\n    // fail silently if 'writable', 'enumerable', or 'configurable' are requested but not supported\n    if (supportsAccessors && (lookupGetter(object, propKey) || lookupSetter(object, propKey))) {\n      // As accessors are supported only on engines implementing\n      // `__proto__` we can safely override `__proto__` while defining\n      // a property to make sure that we don't hit an inherited accessor.\n      /* eslint-disable-next-line no-proto */\n      const prototype = object.__proto__;\n      /* eslint-disable-next-line no-proto */\n      object.__proto__ = prototypeOfObject;\n      // Deleting a property anyway since getter / setter may be defined on object itself.\n      delete object[propKey];\n      object[propKey] = propDesc.value;\n      // Setting original `__proto__` back now.\n      /* eslint-disable-next-line no-proto */\n      object.__proto__ = prototype;\n    } else {\n      object[propKey] = propDesc.value;\n    }\n  } else {\n    if (supportsAccessors === false && (propDesc.get || propDesc.set)) {\n      throw new TypeError('getters & setters can not be defined on this javascript engine');\n    }\n\n    // If we got that far then getters and setters can be defined !!\n    if (propDesc.get) {\n      defineGetter(object, propKey, propDesc.get);\n    }\n\n    if (propDesc.set) {\n      defineSetter(object, propKey, propDesc.set);\n    }\n  }\n\n  return object;\n};\n\n/**\n * This method defines a new property directly on an object, or modifies an\n * existing property on an object, and returns the object.\n *\n * @param {object} object - The object on which to define the property.\n * @param {string} property - The name of the property to be defined or modified.\n * @param {object} descriptor - The descriptor for the property being defined or modified.\n * @returns {object} The object that was passed to the function.\n * });.\n */\nlet $defineProperty;\n\n// check whether defineProperty works if it's given. Otherwise, shim partially.\nif (nativeDefProp) {\n  const testWorksWith = function testWorksWith(object) {\n    const testResult = attempt(nativeDefProp, object, 'sentinel', {});\n\n    return testResult.threw === false && testResult.value === object && 'sentinel' in object;\n  };\n\n  const doc = typeof document !== 'undefined' && document;\n\n  if (testWorksWith({}) && (toBoolean(doc) === false || testWorksWith(doc.createElement('div')))) {\n    $defineProperty = function defineProperty(object, property, descriptor) {\n      return nativeDefProp(assertIsObject(object), toPropertyKey(property), toPropertyDescriptor(descriptor));\n    };\n  } else {\n    definePropertyFallback = nativeDefProp;\n  }\n}\n\nif (toBoolean(nativeDefProp) === false || definePropertyFallback) {\n  $defineProperty = implementation;\n}\n\nconst defProp = $defineProperty;\n\nexport default defProp;\n","import safeToString from 'to-string-symbols-supported-x';\nimport isPrimitive from 'is-primitive-x';\n\n/**\n * Tests `value` to see if it is an object, throws a `TypeError` if it is\n * not. Otherwise returns the `value`.\n *\n * @param {*} value - The argument to be tested.\n * @param {string} [message] - An alternative user message.\n * @throws {TypeError} Throws if `value` is not an object.\n * @returns {*} Returns `value` if it is an object.\n */\nconst assertIsObject = function assertIsObject(value, message) {\n  if (isPrimitive(value)) {\n    const msg = arguments.length > 1 ? safeToString(message) : `${safeToString(value)} is not an object`;\n\n    throw new TypeError(msg);\n  }\n\n  return value;\n};\n\nexport default assertIsObject;\n","import toObject from 'to-object-x';\nimport isArguments from 'is-arguments';\nimport isArray from 'is-array-x';\nimport arrayLikeSlice from 'array-like-slice-x';\nimport attempt from 'attempt-x';\nimport isString from 'is-string';\nimport methodize from 'simple-methodize-x';\n\nconst methodizedSlice = methodize([].slice);\n\nconst testArray = function testArray() {\n  const res = attempt(function attemptee() {\n    return methodizedSlice([1, 2, 3], 1, 2);\n  });\n\n  return res.threw || isArray(res.value) === false || res.value.length !== 1 || res.value[0] !== 2;\n};\n\nconst testString = function testString() {\n  const res = attempt(function attemptee() {\n    return methodizedSlice('abc', 1, 2);\n  });\n\n  return res.threw || isArray(res.value) === false || res.value.length !== 1 || res.value[0] !== 'b';\n};\n\nconst testDOM = function testDOM() {\n  const doc = typeof document !== 'undefined' && document;\n  const resultDocElement = doc\n    ? attempt(function attemptee() {\n        return methodizedSlice(doc.documentElement);\n      }).threw\n    : false;\n\n  return resultDocElement ? resultDocElement.threw : false;\n};\n\nconst failArray = testArray();\nconst failString = testString();\nconst failDOM = testDOM();\n\nconst useArrayLike = function useArrayLike(object) {\n  return failArray || (failDOM && isArray(object) === false) || (failString && isString(object)) || isArguments(object);\n};\n\n/**\n * The slice() method returns a shallow copy of a portion of an array into a new\n * array object selected from begin to end (end not included). The original\n * array will not be modified.\n *\n * @param {Array|object} array - The array to slice.\n * @param {number} [start] - Zero-based index at which to begin extraction.\n *  A negative index can be used, indicating an offset from the end of the\n *  sequence. Running slice(-2) extracts the last two elements in the sequence.\n *  If begin is undefined, slice begins from index 0.\n * @param {number} [end] - Zero-based index before which to end extraction.\n *  Slice extracts up to but not including end. For example, slice(1,4)\n *  extracts the second element through the fourth element (elements indexed\n *  1, 2, and 3).\n *  A negative index can be used, indicating an offset from the end of the\n *  sequence. Running slice(2,-1) extracts the third element through the second-to-last\n *  element in the sequence.\n *  If end is omitted, slice extracts through the end of the\n *  sequence (arr.length).\n *  If end is greater than the length of the sequence, slice extracts through\n *  the end of the sequence (arr.length).\n * @returns {Array} A new array containing the extracted elements.\n */\nconst slice = function slice(array, start, end) {\n  const object = toObject(array);\n\n  return useArrayLike(object) ? arrayLikeSlice(object, start, end) : methodizedSlice(object, start, end);\n};\n\nexport default slice;\n","import isObjectLike from 'is-object-like-x';\nimport hasToStringTag from 'has-to-string-tag-x';\nimport has from 'has-own-property-x';\nimport gOPD from 'object-get-own-property-descriptor-x';\nimport defineProperty from 'object-define-property-x';\nimport toStringTag from 'to-string-tag-x';\nimport methodize from 'simple-methodize-x';\n\nconst regexExec = methodize(/none/.exec);\nconst regexClass = '[object RegExp]';\n\nconst tryRegexExecCall = function tryRegexExec(value, descriptor) {\n  try {\n    value.lastIndex = 0;\n    regexExec(value);\n\n    return true;\n  } catch (e) {\n    return false;\n  } finally {\n    defineProperty(value, 'lastIndex', descriptor);\n  }\n};\n\n/**\n * This method tests if a value is a regex.\n *\n * @param {*} value - The value to test.\n * @returns {boolean} `true` if value is a regex; otherwise `false`.\n */\nconst isRegex = function isRegex(value) {\n  if (isObjectLike(value) === false) {\n    return false;\n  }\n\n  if (hasToStringTag === false) {\n    return toStringTag(value) === regexClass;\n  }\n\n  const descriptor = gOPD(value, 'lastIndex');\n  const hasLastIndexDataProperty = descriptor && has(descriptor, 'value');\n\n  if (hasLastIndexDataProperty !== true) {\n    return false;\n  }\n\n  return tryRegexExecCall(value, descriptor);\n};\n\nexport default isRegex;\n","import attempt from 'attempt-x';\nimport toStringTag from 'to-string-tag-x';\n\nconst nia = [].isArray;\nconst nativeIsArray = typeof nia === 'function' && nia;\n\nconst testResult = attempt(function attemptee() {\n  return nativeIsArray([]) === true && nativeIsArray({length: 0}) === false;\n});\n\nconst isWorking = testResult.threw === false && testResult.value === true;\n\nexport const implementation = function isArray(value) {\n  return toStringTag(value) === '[object Array]';\n};\n\n/**\n * Determines whether the passed value is an Array.\n *\n * @param {*} value - The value to test.\n * @returns {boolean} - True if an array; otherwise false.\n */\nconst isArray = isWorking ? nativeIsArray : implementation;\n\nexport default isArray;\n","import hasBoxed from 'has-boxed-string-x';\nimport isString from 'is-string';\nimport methodize from 'simple-methodize-x';\n\nconst EMPTY_STRING = '';\nconst strSplit = methodize(EMPTY_STRING.split);\n\nconst identity = function splitIfBoxedBug(value) {\n  return value;\n};\n\nexport const implementation = function splitIfBoxedBug(value) {\n  return isString(value) ? strSplit(value, EMPTY_STRING) : identity(value);\n};\n\n/**\n * This method tests if a value is a string with the boxed bug; splits to an\n * array for iteration; otherwise returns the original value.\n *\n * @param {*} [value] - The value to be tested.\n * @returns {*} An array or characters if value was a string with the boxed bug;\n *  otherwise the value.\n */\nconst $splitIfBoxedBug = hasBoxed ? identity : implementation;\n\nexport default $splitIfBoxedBug;\n","import toObject from 'to-object-x';\nimport toInteger from 'to-integer-x';\nimport toLength from 'to-length-x';\nimport splitIfBoxedBug from 'split-if-boxed-bug-x';\n\nconst getMax = function getMax(a, b) {\n  return a >= b ? a : b;\n};\n\nconst getMin = function getMin(a, b) {\n  return a <= b ? a : b;\n};\n\nconst setRelative = function setRelative(value, length) {\n  return value < 0 ? getMax(length + value, 0) : getMin(value, length);\n};\n\n/**\n * The slice() method returns a shallow copy of a portion of an array into a new\n * array object selected from begin to end (end not included). The original\n * array will not be modified.\n *\n * @param {!object} arrayLike - The array like object to slice.\n * @param {number} [start] - Zero-based index at which to begin extraction.\n *  A negative index can be used, indicating an offset from the end of the\n *  sequence. Running slice(-2) extracts the last two elements in the sequence.\n *  If begin is undefined, slice begins from index 0.\n * @param {number} [end] - Zero-based index before which to end extraction.\n *  Slice extracts up to but not including end. For example, slice([0,1,2,3,4],1,4)\n *  extracts the second element through the fourth element (elements indexed\n *  1, 2, and 3).\n *  A negative index can be used, indicating an offset from the end of the\n *  sequence. Running slice(2,-1) extracts the third element through the second-to-last\n *  element in the sequence.\n *  If end is omitted, slice extracts through the end of the sequence (arr.length).\n *  If end is greater than the length of the sequence, slice extracts through\n *  the end of the sequence (arr.length).\n * @returns {Array} A new array containing the extracted elements.\n */\nconst slice = function slice(arrayLike, start, end) {\n  const iterable = splitIfBoxedBug(toObject(arrayLike));\n  const length = toLength(iterable.length);\n  let k = setRelative(toInteger(start), length);\n  const relativeEnd = typeof end === 'undefined' ? length : toInteger(end);\n  const finalEnd = setRelative(relativeEnd, length);\n  const val = [];\n  val.length = getMax(finalEnd - k, 0);\n  let next = 0;\n  while (k < finalEnd) {\n    if (k in iterable) {\n      val[next] = iterable[k];\n    }\n\n    next += 1;\n    k += 1;\n  }\n\n  return val;\n};\n\nexport default slice;\n","import toLength from 'to-length-x';\nimport isRegExp from 'is-regexp-x';\nimport safeToString from 'to-string-symbols-supported-x';\nimport isObjectLike from 'is-object-like-x';\nimport hasOwn from 'has-own-property-x';\nimport arraySlice from 'array-slice-x';\nimport toBoolean from 'to-boolean-x';\nimport isNil from 'is-nil-x';\nimport methodize from 'simple-methodize-x';\n\nconst EMPTY_STRING = '';\nconst match = methodize(EMPTY_STRING.match);\nconst slice = methodize(EMPTY_STRING.slice);\nconst search = methodize(EMPTY_STRING.search);\nconst indexOf = methodize(EMPTY_STRING.indexOf);\nconst lastIndexOf = methodize(EMPTY_STRING.lastIndexOf);\nconst aJoin = methodize([].join);\n\n/* Used to match `RegExp` flags from their coerced string values. */\nconst reFlags = /\\w*$/;\nconst RegExpCtr = reFlags.constructor;\nconst rxTest = methodize(reFlags.test);\nconst rxExec = methodize(reFlags.exec);\n\n/* Used to compose unicode character classes. */\nconst rsAstralRange = '\\\\ud800-\\\\udfff';\nconst rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23';\nconst rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0';\nconst rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/* Used to compose unicode capture groups. */\nconst rsAstral = `[${rsAstralRange}]`;\nconst rsCombo = `[${rsComboMarksRange}${rsComboSymbolsRange}]`;\nconst rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]';\nconst rsModifier = `(?:${rsCombo}|${rsFitz})`;\nconst rsNonAstral = `[^${rsAstralRange}]`;\nconst rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}';\nconst rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]';\nconst rsZWJ = '\\\\u200d';\n\n/* Used to compose unicode regexes. */\nconst reOptMod = `${rsModifier}?`;\nconst rsOptVar = `[${rsVarRange}]?`;\nconst rsOptJoin = `(?:${rsZWJ}(?:${aJoin([rsNonAstral, rsRegional, rsSurrPair], '|')})${rsOptVar}${reOptMod})*`;\nconst rsSeq = rsOptVar + reOptMod + rsOptJoin;\nconst rsSymbol = `(?:${aJoin([`${rsNonAstral + rsCombo}?`, rsCombo, rsRegional, rsSurrPair, rsAstral], '|')})`;\n\n/*\n * Used to match string symbols\n * @see https://mathiasbynens.be/notes/javascript-unicode\n */\nconst reComplexSymbol = new RegExpCtr(`${rsFitz}(?=${rsFitz})|${rsSymbol}${rsSeq}`, 'g');\n\n/*\n * Used to detect strings with [zero-width joiners or code points from\n * the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/).\n */\nconst reHasComplexSymbol = new RegExpCtr(`[${rsZWJ}${rsAstralRange}${rsComboMarksRange}${rsComboSymbolsRange}${rsVarRange}]`);\n\n/**\n * Gets the number of symbols in `string`.\n *\n * @private\n * @param {string} string - The string to inspect.\n * @returns {number} Returns the string size.\n */\nconst stringSize = function _stringSize(string) {\n  if (toBoolean(string) === false || rxTest(reHasComplexSymbol, string) === false) {\n    return string.length;\n  }\n\n  reComplexSymbol.lastIndex = 0;\n  let result = 0;\n  while (rxTest(reComplexSymbol, string)) {\n    result += 1;\n  }\n\n  return result;\n};\n\nconst getOptions = function getOptions(options) {\n  const opts = {length: 30, omission: '...', separator: null};\n\n  if (isObjectLike(options)) {\n    if (hasOwn(options, 'length')) {\n      opts.length = toLength(options.length);\n    }\n\n    if (hasOwn(options, 'omission')) {\n      opts.omission = options.omission;\n    }\n\n    if (hasOwn(options, 'separator')) {\n      opts.separator = options.separator;\n    }\n  }\n\n  return opts;\n};\n\nconst getConsts = function getConsts(str) {\n  if (rxTest(reHasComplexSymbol, str)) {\n    const matchSymbols = match(str, reComplexSymbol);\n\n    return {\n      matchSymbols: match(str, reComplexSymbol),\n      strLength: matchSymbols.length,\n    };\n  }\n\n  return {\n    matchSymbols: null,\n    strLength: str.length,\n  };\n};\n\nconst getNewEnd = function getNewEnd(rxSeperator, result) {\n  let newEnd;\n  let rxMatch = rxExec(rxSeperator, result);\n  while (rxMatch) {\n    newEnd = rxMatch.index;\n    rxMatch = rxExec(rxSeperator, result);\n  }\n\n  return newEnd;\n};\n\nconst getRxResult = function getRxResult(obj) {\n  const {str, separator, end, result} = obj;\n\n  if (search(slice(str, end), separator)) {\n    const rxSeperator = toBoolean(separator.global)\n      ? separator\n      : new RegExpCtr(separator.source, `${safeToString(rxExec(reFlags, separator))}g`);\n\n    rxSeperator.lastIndex = 0;\n    const newEnd = getNewEnd(rxSeperator, result);\n\n    return slice(result, 0, typeof newEnd === 'undefined' ? end : newEnd);\n  }\n\n  return result;\n};\n\nconst getResult = function getResult(obj) {\n  const {str, separator, end, result} = obj;\n\n  if (isRegExp(separator)) {\n    return getRxResult({str, separator, end, result});\n  }\n\n  if (indexOf(str, separator, end) !== end) {\n    const index = lastIndexOf(result, separator);\n\n    if (index > -1) {\n      return slice(result, 0, index);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Truncates `string` if it's longer than the given maximum string length.\n * The last characters of the truncated string are replaced with the omission\n * string which defaults to \"...\".\n *\n * @param {string} string - The string to truncate.\n * @param {object} [options] - The options object.\n * @param {number} [options.length=30] - The maximum string length.\n * @param {string} [options.omission='...'] - The string to indicate text\n * is omitted.\n * @param {RegExp|string} [options.separator] - The separator pattern to\n * truncate to.\n * @returns {string} Returns the truncated string.\n */\nconst truncate = function truncate(string, options) {\n  const str = safeToString(string);\n  const {length, omission, separator} = getOptions(options);\n  const {strLength, matchSymbols} = getConsts(str);\n\n  if (length >= strLength) {\n    return str;\n  }\n\n  const end = length - stringSize(omission);\n\n  if (end < 1) {\n    return omission;\n  }\n\n  const result = matchSymbols ? aJoin(arraySlice(matchSymbols, 0, end), EMPTY_STRING) : slice(str, 0, end);\n\n  if (isNil(separator)) {\n    return result + omission;\n  }\n\n  return getResult({str, separator, end: matchSymbols ? result.length : end, result}) + omission;\n};\n\nexport default truncate;\n"],"sourceRoot":""}