{"version":3,"sources":["webpack://truncateX/webpack/universalModuleDefinition","webpack://truncateX/webpack/bootstrap","webpack://truncateX/./node_modules/is-symbol/index.js","webpack://truncateX/./node_modules/is-string/index.js","webpack://truncateX/./node_modules/is-date-object/index.js","webpack://truncateX/./node_modules/is-arguments/index.js","webpack://truncateX/./node_modules/has-symbols/index.js","webpack://truncateX/(webpack)/buildin/global.js","webpack://truncateX/./node_modules/has-symbols/shams.js","webpack://truncateX/../src/is-primitive-x.js","webpack://truncateX/../src/has-boxed-string-x.js","webpack://truncateX/../src/has-working-bind-x.js","webpack://truncateX/../src/noop-x.js","webpack://truncateX/../src/util-pusher-x.js","webpack://truncateX/../src/simple-bind-x.js","webpack://truncateX/../src/simple-call-x.js","webpack://truncateX/../src/attempt-x.js","webpack://truncateX/../src/white-space-x.js","webpack://truncateX/../src/has-symbol-support-x.js","webpack://truncateX/../src/to-boolean-x.js","webpack://truncateX/../src/simple-methodize-x.js","webpack://truncateX/../src/to-string-tag-x.js","webpack://truncateX/../src/has-to-string-tag-x.js","webpack://truncateX/../src/is-nil-x.js","webpack://truncateX/../src/require-object-coercible-x.js","webpack://truncateX/../src/to-string-x.js","webpack://truncateX/../src/require-coercible-to-string-x.js","webpack://truncateX/../src/trim-left-x.js","webpack://truncateX/../src/trim-right-x.js","webpack://truncateX/../src/trim-x.js","webpack://truncateX/../src/normalize-space-x.js","webpack://truncateX/../src/replace-comments-x.js","webpack://truncateX/../src/is-function-x.js","webpack://truncateX/../src/to-primitive-x.js","webpack://truncateX/../src/parse-int-x.js","webpack://truncateX/../src/nan-x.js","webpack://truncateX/../src/to-number-x.js","webpack://truncateX/../src/is-nan-x.js","webpack://truncateX/../src/is-finite-x.js","webpack://truncateX/../src/infinity-x.js","webpack://truncateX/../src/math-sign-x.js","webpack://truncateX/../src/to-integer-x.js","webpack://truncateX/../src/to-length-x.js","webpack://truncateX/../src/is-object-like-x.js","webpack://truncateX/../src/to-object-x.js","webpack://truncateX/../src/to-property-key-x.js","webpack://truncateX/../src/object-get-own-property-descriptor-x.js","webpack://truncateX/../src/has-own-property-x.js","webpack://truncateX/../src/to-string-symbols-supported-x.js","webpack://truncateX/../src/math-clamp-x.js","webpack://truncateX/../src/is-index-x.js","webpack://truncateX/../src/property-is-enumerable-x.js","webpack://truncateX/../src/object-define-property-x.js","webpack://truncateX/../src/assert-is-object-x.js","webpack://truncateX/../src/array-slice-x.js","webpack://truncateX/../src/is-regexp-x.js","webpack://truncateX/../src/is-array-x.js","webpack://truncateX/../src/split-if-boxed-bug-x.js","webpack://truncateX/../src/array-like-slice-x.js","webpack://truncateX/../src/truncate-x.js"],"names":["root","factory","exports","module","define","amd","$globalThis","ObjectCtr","constructor","objectPrototype","prototype","defineProperty","getGlobalFallback","self","window","global","returnThis","this","get","configurable","__defineGetter__","$$globalThis$$","error","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","enumerable","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","hasOwnProperty","p","s","toStr","toString","symToStr","symStringRegex","valueOf","test","isSymbolObject","e","strValue","String","hasToStringTag","tryStringObject","getDay","Date","tryDateObject","isStandardArguments","isLegacyArguments","length","callee","supportsStandardArguments","arguments","origSymbol","hasSymbolSham","g","Function","getOwnPropertySymbols","iterator","obj","sym","symObj","keys","getOwnPropertyNames","syms","propertyIsEnumerable","getOwnPropertyDescriptor","descriptor","is_primitive_x_esm","val","_typeof","boxedString","has_boxed_string_x_esm","has_working_bind_x_esm_bind","has_working_bind_x_esm","a1","a2","context","testThis","boundFn","apply","arg1","arg2","args","test1","oracle","Ctr","BoundFn","returned","test2","split","util_pusher_x_esm_max","Math","max","util_pusher_x_esm_bind","util_pusher_x_esm_call","$split","string","pattern","util_pusher_x_esm_getIterable","arrayLike","is_string_default","util_pusher_x_esm","from","target","iterable","nativeBind","simple_bind_x_esm_call","simple_bind_x_esm_object","getMax","a","b","simple_bind_x_esm_assertIsFunction","TypeError","boundFns","binder","boundLength","f","h","getBoundFn","_args","_slicedToArray","bindArgs","fn","Empty","simple_bind_x_esm_getResult","boundArgs","result","simple_bind_x_esm","thisArg","bound","$TypeError","nativeApply","$apply","simple_call_x_esm_toStringTag","simple_call_x_esm_assertIsFunction","simple_call_x_esm","F","V","attempt_x_esm","threw","hasSymbolSupport","_newArrowCheck","is_symbol_default","undefined","has_symbol_support_x_esm","to_boolean_x_esm","simple_methodize_x_esm_toStringTag","simple_methodize_x_esm","prototypeMethod","simple_methodize_x_esm_assertIsFunction","methodizedToString","to_string_tag_x_esm","has_to_string_tag_x_esm","is_nil_x_esm","require_object_coercible_x_esm","concat","castString","to_string_x_esm","require_coercible_to_string_x_esm","list","code","description","es5","es2015","es2016","es2017","es2018","stringES2018","white_space_x_esm_length","white_space_x_esm_i","white_space_x_esm","reLeft","RegExpCtr","methodizedReplace","replace","trim_left_x_esm","reRight","trim_right_x_esm_RegExpCtr","trim_right_x_esm_methodizedReplace","trim_right_x_esm","trim_x_esm","reNormalize","normalize_space_x_esm_RegExpCtr","normalize_space_x_esm_methodizedReplace","normalize_space_x_esm","STRIP_COMMENTS","replace_comments_x_esm_methodizedReplace","replace_comments_x_esm","replacement","FunctionCtr","methodizedFunctionToString","ctrRx","methodizedTest","hasNativeClass","is_function_x_esm_testClassString","isES6ClassFn","is_function_x_esm","allowClass","tryFuncToString","strTag","is_function_x_esm_compareTags","StringCtr","NumberCtr","symToPrimitive","toPrimitive","symValueOf","toStringOrder","toNumberOrder","to_primitive_x_esm_ordinaryToPrimitive","ordinary","hint","assertHint","methodNames","method","getHint","supplied","to_primitive_x_esm_getExoticToPrim","func","to_primitive_x_esm_getMethod","to_primitive_x_esm_evalExotic","exoticToPrim","input","to_primitive_x_esm_evalPrimitive","newHint","is_date_object_default","to_primitive_x_esm","preferredType","nativeParseInt","parseInt","castNumber","methodizedCharAt","charAt","hexRegex","parse_int_x_esm_methodizedTest","parse_int_x_esm","radix","str","to_number_x_esm_castNumber","methodizedStringSlice","slice","binaryRegex","RegExpConstructor","to_number_x_esm_methodizedTest","octalRegex","nonWSregex","invalidHexLiteral","to_number_x_esm_parseBase","parseString","toNum","isBinary","isOctal","to_number_x_esm_convertString","hasNonWS","isInvalidHexLiteral","trimmed","to_number_x_esm","toNumber","argument","to_number_x_esm_assertNotSymbol","is_nan_x_esm","is_finite_x_esm","number","math_sign_x_esm","x","abs","floor","to_integer_x_esm","to_length_x_esm","len","is_object_like_x_esm","castObject","to_object_x_esm","getOPDFallback1","getOPDFallback2","$getOwnPropertyDescriptor","to_property_key_x_esm","to_property_key_x_esm_typeof","hop","has_own_property_x_esm","pToString","isSymbolFn","to_string_symbols_supported_x_esm_castString","to_string_symbols_supported_x_esm","math_clamp_x_esm_getMaxMin","minVal","min","RangeError","math_clamp_x_esm","_getMaxMin","reIsUint","rxTest","is_index_x_esm","propIsEnumerable","property_is_enumerable_x_esm","object_get_own_property_descriptor_x_esm_ObjectCtr","ngopd","nativeGOPD","object_get_own_property_descriptor_x_esm_doesGOPDWork","prop","testResult","prototypeOfObject","supportsAccessors","lookupGetter","__lookupGetter__","lookupSetter","__lookupSetter__","object_get_own_property_descriptor_x_esm_doc","document","createElement","object_get_own_property_descriptor_x_esm_res","worksWithPrim","propKey","isStringIndex","__proto__","notPrototypeOfObject","setter","set","writable","definePropertyFallback","$defineProperty","object_get_own_property_descriptor_x_esm","assert_is_object_x_esm","message","msg","object_define_property_x_esm_ObjectCtr","nd","nativeDefProp","object_define_property_x_esm_toPropertyDescriptor","desc","object_define_property_x_esm_prototypeOfObject","object_define_property_x_esm_supportsAccessors","defineGetter","defineSetter","__defineSetter__","object_define_property_x_esm_lookupGetter","object_define_property_x_esm_lookupSetter","object_define_property_x_esm_testWorksWith","object_define_property_x_esm_doc","propDesc","res","doc","resultDocElement","object_define_property_x_esm","regexExec","exec","is_regexp_x_esm","lastIndex","tryRegexExecCall","nia","isArray","nativeIsArray","is_array_x_esm_testResult","is_array_x_esm","strSplit","identity","split_if_boxed_bug_x_esm","array_like_slice_x_esm_getMax","setRelative","array_like_slice_x_esm","start","end","k","relativeEnd","finalEnd","next","methodizedSlice","failArray","failString","array_slice_x_esm_testString","failDOM","documentElement","array_slice_x_esm","array","is_arguments_default","array_slice_x_esm_useArrayLike","match","truncate_x_esm_slice","search","indexOf","lastIndexOf","aJoin","join","reFlags","truncate_x_esm_RegExpCtr","truncate_x_esm_rxTest","rxExec","rsAstral","rsCombo","rsFitz","rsModifier","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsOptVar","rsSeq","rsSymbol","reComplexSymbol","reHasComplexSymbol","truncate_x_esm_getRxResult","separator","rxSeperator","source","newEnd","rxMatch","index","getNewEnd","__webpack_exports__","options","_getOptions","opts","omission","truncate_x_esm_getOptions","_getConsts","matchSymbols","strLength","getConsts","stringSize","truncate_x_esm_getResult"],"mappings":";;;;;;;;;;;;;CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAmB,UAAID,IAEvBD,EAAgB,UAAIC,IARtB,CASI,WACF,aAEA,IAGIK,EAHAC,EAAY,GAAGC,YACfC,EAAkBF,EAAUG,UAC5BC,EAAiBJ,EAAUI,eAE3BC,EAAoB,WACtB,MAAoB,oBAATC,KACFA,KAGa,oBAAXC,OACFA,OAGa,oBAAXC,OACFA,YADT,GAOEC,EAAa,WACf,OAAOC,MAGT,IAcE,OAbIN,EACFA,EAAeF,EAAiB,iBAAkB,CAChDS,IAAKF,EACLG,cAAc,IAGhBV,EAAgBW,iBAAiB,iBAAkBJ,GAGrDV,EAAwC,oBAAnBe,eAAiCT,IAAsBS,sBAErEZ,EAAgBY,eAEhBf,EACP,MAAOgB,GACP,OAAOV,KA3CR,GA6CG,WACN,O,YCtDE,IAAIW,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUvB,QAGnC,IAAIC,EAASoB,EAAiBE,GAAY,CACzCC,EAAGD,EACHE,GAAG,EACHzB,QAAS,IAUV,OANA0B,EAAQH,GAAUI,KAAK1B,EAAOD,QAASC,EAAQA,EAAOD,QAASsB,GAG/DrB,EAAOwB,GAAI,EAGJxB,EAAOD,QA0Df,OArDAsB,EAAoBM,EAAIF,EAGxBJ,EAAoBO,EAAIR,EAGxBC,EAAoBQ,EAAI,SAAS9B,EAAS+B,EAAMC,GAC3CV,EAAoBW,EAAEjC,EAAS+B,IAClCG,OAAOzB,eAAeT,EAAS+B,EAAM,CAAEI,YAAY,EAAMnB,IAAKgB,KAKhEV,EAAoBc,EAAI,SAASpC,GACX,oBAAXqC,QAA0BA,OAAOC,aAC1CJ,OAAOzB,eAAeT,EAASqC,OAAOC,YAAa,CAAEC,MAAO,WAE7DL,OAAOzB,eAAeT,EAAS,aAAc,CAAEuC,OAAO,KAQvDjB,EAAoBkB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQjB,EAAoBiB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKT,OAAOU,OAAO,MAGvB,GAFAtB,EAAoBc,EAAEO,GACtBT,OAAOzB,eAAekC,EAAI,UAAW,CAAER,YAAY,EAAMI,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOjB,EAAoBQ,EAAEa,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRrB,EAAoByB,EAAI,SAAS9C,GAChC,IAAI+B,EAAS/B,GAAUA,EAAOyC,WAC7B,WAAwB,OAAOzC,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAqB,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASe,EAAQC,GAAY,OAAOf,OAAO1B,UAAU0C,eAAevB,KAAKqB,EAAQC,IAGzG3B,EAAoB6B,EAAI,GAIjB7B,EAAoBA,EAAoB8B,EAAI,G,+BChFrD,IAAIC,EAAQnB,OAAO1B,UAAU8C,SAG7B,GAFiBhC,EAAQ,EAARA,GAED,CACf,IAAIiC,EAAWlB,OAAO7B,UAAU8C,SAC5BE,EAAiB,iBAQrBvD,EAAOD,QAAU,SAAkBuC,GAClC,GAAqB,iBAAVA,EACV,OAAO,EAER,GAA0B,oBAAtBc,EAAM1B,KAAKY,GACd,OAAO,EAER,IACC,OAfmB,SAA4BA,GAChD,MAA+B,iBAApBA,EAAMkB,WAGVD,EAAeE,KAAKH,EAAS5B,KAAKY,IAWjCoB,CAAepB,GACrB,MAAOqB,GACR,OAAO,SAKT3D,EAAOD,QAAU,SAAkBuC,GAElC,OAAO,I,6BC9BT,IAAIsB,EAAWC,OAAOtD,UAAUiD,QAS5BJ,EAAQnB,OAAO1B,UAAU8C,SAEzBS,EAAmC,mBAAX1B,QAAuD,iBAAvBA,OAAOC,YAEnErC,EAAOD,QAAU,SAAkBuC,GAClC,MAAqB,iBAAVA,GACU,iBAAVA,IACJwB,EAfc,SAAyBxB,GAC9C,IAEC,OADAsB,EAASlC,KAAKY,IACP,EACN,MAAOqB,GACR,OAAO,GAUgBI,CAAgBzB,GAN1B,oBAMmCc,EAAM1B,KAAKY,M,6BChB7D,IAAI0B,EAASC,KAAK1D,UAAUyD,OAUxBZ,EAAQnB,OAAO1B,UAAU8C,SAEzBS,EAAmC,mBAAX1B,QAAuD,iBAAvBA,OAAOC,YAEnErC,EAAOD,QAAU,SAAsBuC,GACtC,MAAqB,iBAAVA,GAAgC,OAAVA,IAC1BwB,EAfY,SAAuBxB,GAC1C,IAEC,OADA0B,EAAOtC,KAAKY,IACL,EACN,MAAOqB,GACR,OAAO,GAUgBO,CAAc5B,GALvB,kBAKgCc,EAAM1B,KAAKY,M,6BChB3D,IAAIwB,EAAmC,mBAAX1B,QAAuD,iBAAvBA,OAAOC,YAC/De,EAAQnB,OAAO1B,UAAU8C,SAEzBc,EAAsB,SAAqB7B,GAC9C,QAAIwB,GAAkBxB,GAA0B,iBAAVA,GAAsBF,OAAOC,eAAeC,IAGrD,uBAAtBc,EAAM1B,KAAKY,IAGf8B,EAAoB,SAAqB9B,GAC5C,QAAI6B,EAAoB7B,IAGP,OAAVA,GACW,iBAAVA,GACiB,iBAAjBA,EAAM+B,QACb/B,EAAM+B,QAAU,GACM,mBAAtBjB,EAAM1B,KAAKY,IACkB,sBAA7Bc,EAAM1B,KAAKY,EAAMgC,SAGfC,EAA6B,WAChC,OAAOJ,EAAoBK,WADI,GAIhCL,EAAoBC,kBAAoBA,EAExCpE,EAAOD,QAAUwE,EAA4BJ,EAAsBC,G,8BC9BnE,SAAAxD,GAEA,IAAI6D,EAAa7D,EAAOwB,OACpBsC,EAAgBrD,EAAQ,GAE5BrB,EAAOD,QAAU,WAChB,MAA0B,mBAAf0E,IACW,mBAAXrC,SACsB,iBAAtBqC,EAAW,SACO,iBAAlBrC,OAAO,QAEXsC,U,+BCXR,IAAIC,EAGJA,EAAI,WACH,OAAO7D,KADJ,GAIJ,IAEC6D,EAAIA,GAAK,IAAIC,SAAS,cAAb,GACR,MAAOjB,GAEc,iBAAXhD,SAAqBgE,EAAIhE,QAOrCX,EAAOD,QAAU4E,G,6BChBjB3E,EAAOD,QAAU,WAChB,GAAsB,mBAAXqC,QAAiE,mBAAjCH,OAAO4C,sBAAwC,OAAO,EACjG,GAA+B,iBAApBzC,OAAO0C,SAAyB,OAAO,EAElD,IAAIC,EAAM,GACNC,EAAM5C,OAAO,QACb6C,EAAShD,OAAO+C,GACpB,GAAmB,iBAARA,EAAoB,OAAO,EAEtC,GAA4C,oBAAxC/C,OAAO1B,UAAU8C,SAAS3B,KAAKsD,GAA8B,OAAO,EACxE,GAA+C,oBAA3C/C,OAAO1B,UAAU8C,SAAS3B,KAAKuD,GAAiC,OAAO,EAY3E,IAAKD,KADLD,EAAIC,GADS,GAEDD,EAAO,OAAO,EAC1B,GAA2B,mBAAhB9C,OAAOiD,MAAmD,IAA5BjD,OAAOiD,KAAKH,GAAKV,OAAgB,OAAO,EAEjF,GAA0C,mBAA/BpC,OAAOkD,qBAAiF,IAA3ClD,OAAOkD,oBAAoBJ,GAAKV,OAAgB,OAAO,EAE/G,IAAIe,EAAOnD,OAAO4C,sBAAsBE,GACxC,GAAoB,IAAhBK,EAAKf,QAAgBe,EAAK,KAAOJ,EAAO,OAAO,EAEnD,IAAK/C,OAAO1B,UAAU8E,qBAAqB3D,KAAKqD,EAAKC,GAAQ,OAAO,EAEpE,GAA+C,mBAApC/C,OAAOqD,yBAAyC,CAC1D,IAAIC,EAAatD,OAAOqD,yBAAyBP,EAAKC,GACtD,GAdY,KAcRO,EAAWjD,QAA8C,IAA1BiD,EAAWrD,WAAuB,OAAO,EAG7E,OAAO,I,6RClCR,IAIesD,EAJK,SAAqBC,GACvC,MAAsB,WAAfC,EAAOD,GAA2B,OAARA,EAA8B,mBAARA,G,gBCNnDE,EAAc,GAAGtF,YADR,KAaAuF,EAbA,MAWED,EAAY,IAAiB,KAAKA,ECT5CE,ECGM,aDHNhD,KA2DQiD,EAFmB,mBAATD,GAvDX,WACZ,IAAIE,EAAK,KACLC,EAAK,KACLC,EAAU,KACRC,EAAW,GAYjB,IACE,IAAMC,EAAUN,EAAKO,MAXP,SAAiBC,EAAMC,GAOrC,OALAL,EAAUnF,KACViF,EAAKM,EACLL,EAAKM,EAGE9B,WAI6B,CAAC0B,EAAU,IACzCK,EAAOJ,EAAQ,GAErB,OAA0B,IAAnBA,EAAQ9B,QAAgC,IAAhBkC,EAAKlC,QAAuB,IAAP0B,GAAmB,IAAPC,GAAYC,IAAYC,EACxF,MAAOvC,GACP,OAAO,GAiCqC6C,IA7BlC,WACZ,IAAIT,EAAK,KACLC,EAAK,KACLC,EAAU,KACRQ,EAAS,CAAC,EAAG,EAAG,GAEhBC,EAAM,SAAaL,EAAMC,GAK7B,OAJAP,EAAKM,EACLL,EAAKM,EACLL,EAAUnF,KAEH2F,GAGT,IACE,IAAME,EAAUd,EAAKO,MAAMM,EAAK,CAAC,OAC3BE,EAAW,IAAID,EAAQ,EAAG,GAEhC,OAAOA,EAAQtC,SAAWqC,EAAIrC,QAAUuC,IAAaH,GAAiB,IAAPV,GAAmB,IAAPC,GAAYC,IAAYQ,EACnG,MAAO9C,GACP,OAAO,GASgDkD,GErDpDC,EADc,GACdA,MACAC,EAAOC,KAAPC,IACAC,EAAc1B,EAAd3C,KAAMsE,EAAQ3B,EAAR9D,KAMA0F,EAAStB,EAAiBoB,EAAKxF,KAAKyF,EAAML,GAL5B,SAAqBO,EAAQC,GAEtD,OAAOR,EAAMpF,KAAK2F,EAAQC,IAKfC,EAAc,SAAqBC,GAE9C,OAAOC,IAASD,GAAaJ,EAAOI,EAbjB,IAa4CA,GA+BlDE,EAjBA,SAAgBF,EAAWG,GAExC,IAAMC,EAASpD,UAAUH,OAAS,EAAIG,UAAU,GAAK,GAErD,GAAyB,iBAAdgD,GAA0BhC,EAAYgC,GAC/C,OAAOI,EAKT,IAFA,IAAMC,EAAWjC,EAAW4B,EAAYD,EAAYC,GAC7CnD,EAAUwD,EAAVxD,OACE9C,EAAIwF,EAAI,EAAGY,IAAS,EAAGpG,EAAI8C,EAAQ9C,GAAK,EAC/CqG,EAAOA,EAAOvD,QAAUmD,EAAUjG,GAGpC,OAAOqG,G,sZC3CIE,EAAoBJ,EAA1B7E,KAAkBkF,EAAQL,EAARhG,KAEnBsG,EAAS,GACT5H,EAAY4H,EAAO3H,YACnBgC,EAAc2F,EAAO3E,SAKrB4E,EAAS,SAAgBC,EAAGC,GAChC,OAAOD,GAAKC,EAAID,EAAIC,GAGhBC,EAAmB,SAA0B9F,GACjD,GAAqB,mBAAVA,GATI,sBASoBD,EAAY+D,MAAM9D,GACnD,MAAM,IAAI+F,UAdQ,+BAckB/F,IAIlCgG,EAAW,CACf,SAAcC,GACZ,OAAO,WAEL,OAAOA,EAAOnC,MAAMtF,KAAM4G,EAAOlD,cAGrC,SAAa+D,EAAQC,GACnB,OAAO,SAAiBN,GAEtB,OAAOK,EAAOnC,MAAMtF,KAAM4G,EAAOlD,UAAWgE,EAAa,CAACN,OAG9D,SAAaK,EAAQC,GACnB,OAAO,SAAiBN,EAAGC,GAEzB,OAAOI,EAAOnC,MAAMtF,KAAM4G,EAAOlD,UAAWgE,EAAa,CAACN,EAAGC,OAGjE,SAAeI,EAAQC,GAErB,OAAO,SAAiBN,EAAGC,EAAGvG,GAE5B,OAAO2G,EAAOnC,MAAMtF,KAAM4G,EAAOlD,UAAWgE,EAAa,CAACN,EAAGC,EAAGvG,OAGpE,SAAc2G,EAAQC,GAEpB,OAAO,SAAiBN,EAAGC,EAAGvG,EAAGC,GAE/B,OAAO0G,EAAOnC,MAAMtF,KAAM4G,EAAOlD,UAAWgE,EAAa,CAACN,EAAGC,EAAGvG,EAAGC,OAGvE,SAAc0G,EAAQC,GAEpB,OAAO,SAAiBN,EAAGC,EAAGvG,EAAGC,EAAG8B,GAElC,OAAO4E,EAAOnC,MAAMtF,KAAM4G,EAAOlD,UAAWgE,EAAa,CAACN,EAAGC,EAAGvG,EAAGC,EAAG8B,OAG1E,SAAa4E,EAAQC,GAEnB,OAAO,SAAiBN,EAAGC,EAAGvG,EAAGC,EAAG8B,EAAG8E,GAErC,OAAOF,EAAOnC,MAAMtF,KAAM4G,EAAOlD,UAAWgE,EAAa,CAACN,EAAGC,EAAGvG,EAAGC,EAAG8B,EAAG8E,OAG7E,SAAeF,EAAQC,GAErB,OAAO,SAAiBN,EAAGC,EAAGvG,EAAGC,EAAG8B,EAAG8E,EAAG9D,GAExC,OAAO4D,EAAOnC,MAAMtF,KAAM4G,EAAOlD,UAAWgE,EAAa,CAACN,EAAGC,EAAGvG,EAAGC,EAAG8B,EAAG8E,EAAG9D,OAGhF,SAAe4D,EAAQC,GAErB,OAAO,SAAiBN,EAAGC,EAAGvG,EAAGC,EAAG8B,EAAG8E,EAAG9D,EAAG+D,GAE3C,OAAOH,EAAOnC,MAAMtF,KAAM4G,EAAOlD,UAAWgE,EAAa,CAACN,EAAGC,EAAGvG,EAAGC,EAAG8B,EAAG8E,EAAG9D,EAAG+D,QAK/EC,EAAa,SAAoBpC,GAAM,IAAAqC,EAAAC,EACRtC,EADQ,GACpCgC,EADoCK,EAAA,GAC5BhB,EAD4BgB,EAAA,GACpBE,EADoBF,EAAA,GAErCJ,EAAcP,EA9ET,EA8EsBL,EAAOvD,OAAS4D,EA9EtC,EA8EmDa,EAASzE,OA7EtD,IA8EX0E,EAAKT,EAASE,GACdrC,EAAU4C,EAAKA,EAAGR,EAAQC,GAAeF,EAhFpC,GAgFmDC,GAE9D,GAAIX,EAAOrH,UAAW,CAEpB,IAAMyI,EAAQ,aAEdA,EAAMzI,UAAYqH,EAAOrH,UACzB4F,EAAQ5F,UAAY,IAAIyI,EACxBA,EAAMzI,UAAY,KAGpB,OAAO4F,GAGH8C,EAAY,SAAmBrB,EAAQsB,GAE3C,IAAMC,EAASvB,EAAOxB,MAAMtF,KAAMoI,GAGlC,OAAO9I,EAAU+I,KAAYA,EAASA,EAASrI,MAuClCsI,EAFDtD,EAAiBiC,EAAKlF,KAAKiF,GAlCX,SAAcF,EAAQyB,GAClDjB,EAAiBR,GAEjB,IAEI0B,EAFER,EAAWtE,UAGX+D,EAAS,WAEb,IAAMW,EAAYxB,EAAOlD,UA9GhB,EA8GiCkD,EAAOoB,EA7GlC,IAgHf,OAAOhI,gBAAgBwI,EAAQL,EAAU7C,MAAMtF,KAAM,CAAC8G,EAAQsB,IAActB,EAAOxB,MAAMiD,EAASH,IAKpG,OAFAI,EAAQX,EAAW,CAACJ,EAAQX,EAAQkB,KC1HhCS,EAAalB,UACLmB,EAAiCJ,EAAxChD,MACDqD,EAASL,EADgCA,EAApB1H,KACK8H,GAC1BE,EAAcN,EAAKI,EAAa,GAAGnG,UAInCsG,EAAmB,SAA0BrH,GACjD,GAAqB,mBAAVA,GAHI,sBAGoBoH,EAAYpH,GAC7C,MAAM,IAAIiH,EAAWjH,EALH,sBAQpB,OAAOA,GAsBMsH,EALF,SAAcC,EAAGC,GAE5B,OAAOL,EAAOE,EAAiBE,GAAIC,EAAGpC,EAAOlD,UAAU,MCH1CuF,EAfC,SAAiBhB,GAC/B,IACE,MAAO,CACLiB,OAAO,EAEP1H,MAAOsH,EAAKb,EAAIjI,KAAM4G,EAAOlD,UAAW,KAE1C,MAAOb,GACP,MAAO,CACLqG,OAAO,EACP1H,MAAOqB,KCuSb,IC9TA,IAAMsG,EAAmBF,EAAQ,WAE/B,O,mFAFqCG,CAAApJ,U,GAEZ,mBAAXsB,QAAyB+H,IAAS/H,OAAO,MAFzBS,UAAAuH,IAWjBC,GAA2B,IAA3BJ,EAAiBD,QAA8C,IAA3BC,EAAiB3H,M,gBCJrDgI,EAJG,SAAmBhI,GACnC,QAASA,GCJLiI,EAAc,GAAGlH,SA4BRmH,EATG,SAAmBC,GAGnC,OAlBuB,SAA0BnI,GACjD,GAAqB,mBAAVA,GAHI,sBAGoBsH,EAAKW,EAAajI,GACnD,MAAM,IAAI+F,UALQ,oCAKkB/F,GActCoI,CAAiBD,GAEV,WAEL,OAAOb,EAAKa,EAAiBjG,UAAU,GAAIkD,EAAOlD,UAAW,MCzB3DmG,EAAqBH,EAAU,GAAGnH,UAqBzBuH,EAZK,SAAqBtI,GACvC,OAAc,OAAVA,EACK,qBAGY,IAAVA,EACF,qBAGFqI,EAAmBrI,ICXbuI,EAAAR,GAEbF,IAAS/H,OAAOC,aCAHyI,EALD,SAAexI,GAE3B,OAAOA,SCUMyI,EARgB,SAAgCzI,GAC7D,GAAIwI,EAAMxI,GACR,MAAM,IAAI+F,UAAJ,yBAAA2C,OAAuC1I,IAG/C,OAAOA,GCZH2I,EADgB,4CACW5K,YAgBlB6K,EARE,SAAkB5I,GACjC,GAAI6H,IAAS7H,GACX,MAAM,IAAI+F,UAXQ,6CAcpB,OAAO4C,EAAW3I,ICFL6I,EAJkB,SAAkC7I,GACjE,OAAO4I,EAAMH,EAAuBzI,KTSzB8I,GAAO,CAClB,CACEC,KAAM,EACNC,YAAa,MACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRtE,OAAQ,MAEV,CACEgE,KAAM,GACNC,YAAa,YACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRtE,OAAQ,MAEV,CACEgE,KAAM,GACNC,YAAa,eACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRtE,OAAQ,MAEV,CACEgE,KAAM,GACNC,YAAa,YACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRtE,OAAQ,MAEV,CACEgE,KAAM,GACNC,YAAa,kBACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRtE,OAAQ,MAEV,CACEgE,KAAM,GACNC,YAAa,QACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRtE,OAAQ,KAcV,CACEgE,KAAM,IACNC,YAAa,iBACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRtE,OAAQ,KAEV,CACEgE,KAAM,KACNC,YAAa,mBACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRtE,OAAQ,KAEV,CACEgE,KAAM,KACNC,YAAa,4BACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRtE,OAAQ,KAEV,CACEgE,KAAM,KACNC,YAAa,UACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRtE,OAAQ,KAEV,CACEgE,KAAM,KACNC,YAAa,UACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRtE,OAAQ,KAEV,CACEgE,KAAM,KACNC,YAAa,WACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRtE,OAAQ,KAEV,CACEgE,KAAM,KACNC,YAAa,WACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRtE,OAAQ,KAEV,CACEgE,KAAM,KACNC,YAAa,qBACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRtE,OAAQ,KAEV,CACEgE,KAAM,KACNC,YAAa,oBACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRtE,OAAQ,KAEV,CACEgE,KAAM,KACNC,YAAa,mBACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRtE,OAAQ,KAEV,CACEgE,KAAM,KACNC,YAAa,eACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRtE,OAAQ,KAEV,CACEgE,KAAM,KACNC,YAAa,oBACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRtE,OAAQ,KAEV,CACEgE,KAAM,KACNC,YAAa,aACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRtE,OAAQ,KAEV,CACEgE,KAAM,KACNC,YAAa,aACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRtE,OAAQ,KAcV,CACEgE,KAAM,KACNC,YAAa,iBACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRtE,OAAQ,UAEV,CACEgE,KAAM,KACNC,YAAa,sBACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRtE,OAAQ,UAEV,CACEgE,KAAM,KACNC,YAAa,wBACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRtE,OAAQ,KAEV,CACEgE,KAAM,KACNC,YAAa,4BACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRtE,OAAQ,KAEV,CACEgE,KAAM,MACNC,YAAa,oBACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRtE,OAAQ,KAEV,CACEgE,KAAM,MACNC,YAAa,kBACbC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRtE,OAAQ,WAgBRuE,GAAe,GACZC,GAAUT,GAAV/G,OACEyH,GAAI,EAAGA,GAAID,GAAQC,IAAK,EAC3BV,GAAKU,IAAGL,QACML,GAAKU,IAAGzE,OAGtB+D,GAAKU,IAAGH,SACVC,IAAgBR,GAAKU,IAAGzE,QAI5B,IAEe0E,GAFIH,GUrUbI,GAAS,IAAIC,EADD,OAAO5L,aACV,KAAA2K,OAAmBe,GAAnB,OACTG,GAAoB1B,EAHL,GAG4B2B,SAalCC,GAJG,SAAmB/E,GACnC,OAAO6E,GAAkBf,EAAyB9D,GAAS2E,GAbxC,KCEfK,GAAU,IAAIC,EADF,OAAOjM,aACT,IAAA2K,OAAkBe,GAAlB,QACVQ,GAAoB/B,EAHL,GAG4B2B,SAalCK,GAJC,SAAiBnF,GAC/B,OAAOkF,GAAkBpB,EAAyB9D,GAASgF,GAbxC,KCWNI,GAJF,SAAcpF,GACzB,OAAO+E,GAAUI,GAAQnF,KCNrBqF,GAAc,IAAIC,EADN,OAAOtM,aACL,IAAA2K,OAAkBe,GAAlB,MAAkC,KAChDa,GAAoBpC,EAHZ,IAG4B2B,SAc3BU,GAJQ,SAAwBxF,GAC7C,OAAOuF,GAAkBH,GAAKpF,GAASqF,GAd3B,MCCRI,GAAiB,mCACjBC,GAAoBvC,EAFL,GAE4B2B,SAmBlCa,GARS,SAAyB3F,EAAQ4F,GACvD,OAAOF,GACL5B,EAAyB9D,GACzByF,GACAtI,UAAUH,OAAS,EAAI6G,EAAM+B,GAjBZ,KCKfC,GAAcnD,EAAQ1J,YAEtB8M,GAA6B3C,EAAUT,EAAQ1G,UAI/C+J,GAAQ,UACRC,GAAiB7C,EAAU4C,GAAM3J,MAEjC6J,IAIS,IAHbvD,EAAQ,WAEN,OAAOmD,GAAY,oCAAZA,KACNlD,MAECuD,GAAkB,SAAyBjL,GAC/C,OAAO+K,GAAeD,GAAOP,GAAUG,GAAUG,GAA2B7K,GAfhE,QAkBRkL,GAAe,SAAwBlL,GAC3C,IAAM6G,EAASY,EAAQwD,GAAiBjL,GAExC,OAAwB,IAAjB6G,EAAOa,OAAmBb,EAAO7G,OAsD3BmL,GAhBI,SAAoBnL,EAAOoL,GAC5C,OAAIlI,EAAYlD,KAIZuI,EA/BkB,SAAsBvI,EAAOoL,GACnD,QAAIJ,KAAiC,IAAfI,GAAwBF,GAAalL,KAO5C,IAFbyH,EAAQ,WACN,OAAOoD,GAA2B7K,KACjC0H,OAwBI2D,CAAgBrL,EAAOgI,EAAUoD,MAGtCJ,KAA4C,IAA1BhD,EAAUoD,KAAyBF,GAAalL,KAvBpD,SAAqBA,GACvC,IAAMsL,EAAShD,EAAYtI,GAE3B,MA9Cc,sBA8CPsL,GA7CM,+BA6CgBA,GA5Cd,2BA4CmCA,EAwB3CC,CAAYvL,KClEfwL,GAFS,SAEUzN,YACnB0N,IARO,GAQU1N,YAEjB2N,GAAiB3D,GAAcjI,OAAO6L,YAEtCC,GAAa7D,GAAcjI,OAAO7B,UAAUiD,QAE5C2K,GAAgB,CAAC,WAAY,WAC7BC,GAAgB,CAAC,UAAW,YAgB5BC,GAAsB,SAA6BC,EAAUC,GACjExD,EAAuBuD,GAdN,SAAoBC,GACrC,GAAoB,iBAATA,GAfE,WAeoBA,GAdpB,WAcuCA,EAClD,MAAM,IAAIlG,UAAU,qCAatBmG,CAAWD,GAGX,IADA,IAAME,EA9BO,WA8BOF,EAAkBJ,GAAgBC,GAC7C7M,EApCE,EAoCQA,EApBD,EAoBkBA,GAnC1B,EAmCoC,CAC5C,IAAMmN,EAASJ,EAASG,EAAYlN,IAEpC,GAAIkM,GAAWiB,GAAS,CACtB,IAAMvF,EAASS,EAAK8E,EAAQJ,GAE5B,GAAI9I,EAAY2D,GACd,OAAOA,GAKb,MAAM,IAAId,UAAU,qBA6BhBsG,GAAU,SAAiBrM,EAAOsM,GACtC,GAAIA,EAAU,CACZ,GAAItM,IAAUwL,GACZ,MA3ES,SA8EX,GAAIxL,IAAUyL,GACZ,MAhFS,SAoFb,MAlFc,WA2FVc,GAAkB,SAAyBvM,GAC/C,GAAI+H,EAAY,CACd,GAAI2D,GACF,OA5CY,SAAmBjL,EAAQC,GAC3C,IAAM8L,EAAO/L,EAAOC,GAEpB,IAAoB,IAAhB8H,EAAMgE,GAAiB,CACzB,IAAyB,IAArBrB,GAAWqB,GACb,MAAM,IAAIzG,UAAJ,GAAA2C,OAAiB8D,EAAjB,2BAAA9D,OAA+ChI,EAA/C,eAAAgI,OAAqEjI,EAArE,uBAGR,OAAO+L,GAoCEC,CAAUzM,EAAO0L,IAG1B,GAAI7D,IAAS7H,GACX,OAAO4L,KAOPc,GAAa,SAAoBjK,GAAK,IACnCkK,EAA6BlK,EAA7BkK,aAAcC,EAAenK,EAAfmK,MAAOX,EAAQxJ,EAARwJ,KACtBpF,EAASS,EAAKqF,EAAcC,EAAO,CAACX,IAE1C,GAAI/I,EAAY2D,GACd,OAAOA,EAGT,MAAM,IAAId,UAAU,iDAGhB8G,GAAgB,SAAuBD,EAAOX,GAClD,IAAMa,EArHQ,YAqHEb,IAAqBc,IAAOH,IAAU/E,IAAS+E,IAtHlD,SAsHqEX,EAElF,OAAOF,GAAoBa,EAvHb,YAuHoBE,EAzHrB,SAyHoDA,IA6BpDE,GAXK,SAAqBJ,EAAOK,GAC9C,GAAI/J,EAAY0J,GACd,OAAOA,EAGT,IAAMX,EAAOI,GAAQY,EAAe/K,UAAUH,OAnJpC,GAoJJ4K,EAAeJ,GAAgBK,GAErC,YAA+B,IAAjBD,EAA+BE,GAAcD,EAAOX,GAAQS,GAAW,CAACC,eAAcC,QAAOX,UC3JvGiB,GAAiBC,SAEjBC,IAAc,GAAGrP,YAEjBsP,GAAmBnF,EADR,IAC2BoF,QACtCC,GAAW,cACXC,GAAiBtF,EAAUqF,GAASpM,MA6B3BsM,GAVG,SAAmB1I,EAAQ2I,GAC3C,IAAMC,EAAM7D,GAASlB,EAAM7D,IAE3B,MAzBe,MAyBXsI,GAAiBM,EAAK,GC5BR,IDgCXT,GAAeS,EAAKP,GAAWM,KAAWF,GAAeD,GAAUI,GAAO,GAAK,MEzBlFC,GAHiB,GAGW7P,YAC5B8P,GAAwB3F,EAHR,4CAGgC4F,OAEhDC,GAAc,aACdC,GAAoBD,GAAYhQ,YAGhCkQ,GAAiB/F,EAAU6F,GAAY5M,MAKvC+M,GAAa,cAKbC,GAAa,IAAIH,GAAkB,SAA8B,KAKjEI,GAAoB,qBAapBC,GAAY,SAAmBrO,EAAO0N,GAC1C,OAAOD,GAAUI,GAAsB7N,EAvClB,GAuC0C0N,IAG3DY,GAAc,SAAqBC,EAAOvO,GAC9C,OAhCe,SAAkBA,GACjC,OAAOiO,GAAeF,GAAa/N,GA+B/BwO,CAASxO,GACJuO,EAAMF,GAAUrO,EA9CP,IAkBJ,SAAiBA,GAC/B,OAAOiO,GAAeC,GAAYlO,GA8B9ByO,CAAQzO,GACHuO,EAAMF,GAAUrO,EAjDR,IAoDV,MAGH0O,GAAgB,SAAuBH,EAAOvO,GAClD,IAAMmD,EAAMmL,GAAYC,EAAOvO,GAE/B,GAAY,OAARmD,EACF,OAAOA,EAGT,GAxCe,SAAkBnD,GACjC,OAAOiO,GAAeE,GAAYnO,GAuC9B2O,CAAS3O,IAnCa,SAA6BA,GACvD,OAAOiO,GAAeG,GAAmBpO,GAkClB4O,CAAoB5O,GACzC,ODlEgB,ICqElB,IAAM6O,EAAU1E,GAAKnK,GAErB,OAAI6O,IAAY7O,EACPuO,EAAMM,GAGR,MAwBMC,GAdE,SAASC,EAASC,GACjC,IAAMhP,EApDgB,SAAyBA,GAC/C,GAAI6H,IAAS7H,GACX,MAAM,IAAI+F,UA/BQ,6CAkCpB,OAAO/F,EA+COiP,CAAgBjC,GAAYgC,EAAUpB,KAEpD,GAAqB,iBAAV5N,EAAoB,CAC7B,IAAMmD,EAAMuL,GAAcK,EAAU/O,GAEpC,GAAY,OAARmD,EACF,OAAOA,EAIX,OAAOyK,GAAW5N,ICxFLkP,GALD,SAAelP,GAE3B,OAAOA,GAAUA,GCGJmP,GAJE,SAAkBC,GACjC,MAAyB,iBAAXA,IAA+C,IAAxBF,GAAYE,IAAqBA,ICL/C,KDKsEA,KAAW,KEY3FC,GAVF,SAAcC,GACzB,IAAM9O,EAAIsO,GAASQ,GAEnB,OAAU,IAAN9O,GAAW0O,GAAY1O,GAClBA,EAGFA,EAAI,EAAI,GAAK,GCdf+O,GAAc7K,KAAd6K,IAAKC,GAAS9K,KAAT8K,MAsBGC,GAdG,SAAmBzP,GACnC,IAAMoP,EAASN,GAAS9O,GAExB,OAAIkP,GAAYE,GACP,EAGM,IAAXA,IAA2C,IAA3BD,GAAeC,GAC1BA,EAGFC,GAASD,GAAUI,GAAMD,GAAIH,KCEvBM,GAfE,SAAkB1P,GACjC,IAAM2P,EAAMF,GAAUzP,GAGtB,OAAI2P,GAAO,EACF,EAGLA,EAjBmB,kCAqBhBA,GCTMC,GAJM,SAAsB5P,GACzC,OAA8B,IAAvBkD,EAAYlD,KAAgD,IAA5BmL,GAAWnL,GAAO,ICTrD6P,GAAa,GAAG9R,YAcP+R,GAJE,SAAkB9P,GACjC,OAAO6P,GAAWpH,EAAuBzI,K,uOCF3C,ICMI+P,GACAC,GAqIAC,GDtIWC,GANO,SAAuBlB,GAC3C,IAAM1O,EAAM0M,GAAYgC,EAAUzN,QAElC,OAAOwG,GAA6B,WAAfoI,GAAO7P,GAAmBA,EAAMsI,EAAMtI,IEVvD8P,GAAMlI,EAAU,GAAGvH,gBAgBV0P,GAJQ,SAAwB5P,EAAQC,GACrD,OAAO0P,GAAIN,GAASrP,GAASyP,GAAcxP,KCbvC4P,GAAYvI,GAAcjI,OAAO7B,UAAU8C,SAC3CwP,GAAkC,mBAAdD,IAA4BzI,EAAAjC,EAEhD4K,GAAa,GAAGzS,YAeP0S,GAJkB,SAAkCzQ,GACjE,OAAOuQ,IAAcA,GAAWvQ,GAASsQ,GAAUlR,KAAKY,GAASwQ,GAAWxQ,ICjBxE0Q,GAAY,SAAmBzM,GACnC,IAAM0M,EAAS7B,GAAS7K,EAAK,IACvB4C,EAAS5C,EAAKlC,OAAS,EAAI,CAAC4C,IAAKgM,EAAQC,IAAK,GAAK,CAACjM,IAAKmK,GAAS7K,EAAK,IAAK2M,IAAKD,GAEvF,GAAI9J,EAAO+J,IAAM/J,EAAOlC,IACtB,MAAM,IAAIkM,WAAW,iCAGvB,OAAOhK,GAoCMiK,GArBD,SAAe9Q,GAC3B,IAAMoP,EAASN,GAAS9O,GAExB,GAAIkC,UAAUH,OAAS,EACrB,OAAOqN,EAJyB,IAAA2B,EAQfL,GAAUxO,WAAtByC,EAR2BoM,EAQ3BpM,IAAKiM,EARsBG,EAQtBH,IAEZ,OAAIxB,EAASwB,EACJA,EAGLxB,EAASzK,EACJA,EAGFyK,GCrCH4B,GAAW,mBACXC,GAASD,GAAS7P,KA6BT+P,GAhBC,SAAiBlR,EAAO+B,GACtC,IAAMgD,EAAS0L,GAAazQ,GAE5B,IAAsC,IAAlCiR,GAAO7R,KAAK4R,GAAUjM,GACxB,OAAO,EAGT,IAAMqK,EAASN,GAAS/J,GAExB,OAAI7C,UAAUH,OAAS,EACdqN,EAAS0B,GAAUrB,GAAU1N,GAzBf,kBA4BhBqN,EA5BgB,kBCDnB+B,GAAmBjJ,EAAU,GAAGnF,sBAiBvBqO,GAJc,SAA8B3Q,EAAQC,GACjE,OAAOyQ,GAAiBrB,GAASrP,GAASyP,GAAcxP,KLLpD4M,GAASpF,EADM,GACiBoF,QAChC+D,GAAY,GAAGtT,YACfuT,GAAQD,GAAUrO,yBAClBuO,GAA8B,mBAAVD,IAAwBA,GAO5CE,GAAe,SAAsB/Q,EAAQgR,GACjDhR,EAAOyP,GAAcuB,IAAS,EAC9B,IAAMC,EAAajK,EAAQ8J,GAAY9Q,EAAQgR,GAE/C,OAA4B,IAArBC,EAAWhK,OAA8C,IAA3BgK,EAAW1R,MAAMA,OAGlD2R,GAAoBN,GAAUpT,UAG9B2T,GAAoBvB,GAAKsB,GAAmB,oBAE5CE,GAAeD,IAAqB1J,EAAUyJ,GAAkBG,kBAEhEC,GAAeH,IAAqB1J,EAAUyJ,GAAkBK,kBAqHtE,GAAIT,GAAY,CACd,IAAMU,GAA0B,oBAAbC,UAA4BA,SAG/C,IAFyBD,IAAMT,GAAaS,GAAIE,cAAc,OAAQ,YAEhD,CACpB,IAAMC,GAAM3K,EAAQ8J,GAAYzB,GAAS,OAAQ,GAGjD,IAFmC,IAAdsC,GAAI1K,OAAmB0K,GAAIpS,OAA6B,MAApBoS,GAAIpS,MAAMA,MAKjE,GAF4BwR,GAAa,GAAI,YAEpB,CACvB,IAAMa,IAA0D,IAA1C5K,EAAQ8J,GAAY,GAAI,QAAQ7J,MAMlDuI,GAJoBlI,GAAoByJ,GAAa,GAAI1B,GAAShQ,OA5JzD,MA+JPuS,GAC0Bd,GAEA,SAAkC9Q,EAAQC,GACpE,OAAO6Q,GAAWzB,GAASrP,GAASC,IAG/B2R,GACmB,SAAkC5R,EAAQC,GACpE,OAAO6Q,GAAW9Q,EAAQyP,GAAcxP,KAGd,SAAkCD,EAAQC,GACpE,OAAO6Q,GAAWzB,GAASrP,GAASyP,GAAcxP,UAItDqP,GAAkBwB,QAGpBvB,GAAkBuB,MAKqB,IAAzCvJ,EAAUiI,KAAwCF,IAAmBC,MACvEC,GA9J4B,SAAkCxP,EAAQC,GACtE,IAGImG,EAHEpE,EAAMqN,GAASrP,GACf6R,EAAUpC,GAAcxP,GAK9B,GAAIqP,KAKmB,KAJrBlJ,EAASY,EAAQ,WACf,OAAOsI,GAAgBD,GAASrN,GAAM6P,MAG7B5K,MACT,OAAOb,EAAO7G,MAKlB,IAAMuS,EAAgBpN,IAAS1C,IAAQyO,GAAQoB,EAAS7P,EAAIV,QAE5D,GAAIiO,KAAqC,IAAlBuC,IAKA,KAJrB1L,EAASY,EAAQ,WACf,OAAOuI,GAAgBF,GAASrN,GAAM6P,MAG7B5K,MACT,OAAOb,EAAO7G,MAMlB,IAAIiD,OAAa,EAGjB,IAAsB,IAAlBsP,IAAkD,IAAvBlC,GAAK5N,EAAK6P,GACvC,OAAOrP,EAYT,GAPAA,EAAa,CACXvE,cAAsC,IAAxBwE,EAAYzC,KAAuC,IAAlB8R,EAC/C3S,WAAYwR,GAAqB3O,EAAK6P,IAKpCV,GAAmB,CAOrB,IAAM3T,EAAYwE,EAAI+P,UAChBC,EAAuBhQ,IAAQkP,GAKjCc,IAEFhQ,EAAI+P,UAAYb,IAGlB,IAAMlS,EAASoS,GAAapP,EAAK6P,GAC3BI,EAASX,GAAatP,EAAK6P,GAQjC,GANIG,IAGFhQ,EAAI+P,UAAYvU,GAGdwB,GAAUiT,EAWZ,OAVIjT,IACFwD,EAAWxE,IAAMgB,GAGfiT,IACFzP,EAAW0P,IAAMD,GAKZzP,EAcX,OARIsP,GACFtP,EAAWjD,MAAQsN,GAAO7K,EAAK6P,GAC/BrP,EAAW2P,UAAW,IAEtB3P,EAAWjD,MAAQyC,EAAI6P,GACvBrP,EAAW2P,UAAW,GAGjB3P,IA6DT,IM5LI4P,GA0IAC,GNoDWC,GAFF9C,GOlLE+C,GAVQ,SAAwBhT,EAAOiT,GACpD,GAAI/P,EAAYlD,GAAQ,CACtB,IAAMkT,EAAMhR,UAAUH,OAAS,EAAI0O,GAAawC,GAApC,GAAAvK,OAAkD+H,GAAazQ,GAA/D,qBAEZ,MAAM,IAAI+F,UAAUmN,GAGtB,OAAOlT,GDVHmT,GAAY,GAAGpV,YACfqV,GAAKD,GAAUjV,eACfmV,GAA8B,mBAAPD,IAAqBA,GAG5CE,GAAuB,SAA8BC,GACzD,IAAM9S,EAASqP,GAASyD,GAClBtQ,EAAa,GAkBnB,GAhBIoN,GAAI5P,EAAQ,gBACdwC,EAAWrD,WAAaoI,EAAUvH,EAAOb,aAGvCyQ,GAAI5P,EAAQ,kBACdwC,EAAWvE,aAAesJ,EAAUvH,EAAO/B,eAGzC2R,GAAI5P,EAAQ,WACdwC,EAAWjD,MAAQS,EAAOT,OAGxBqQ,GAAI5P,EAAQ,cACdwC,EAAW2P,SAAW5K,EAAUvH,EAAOmS,WAGrCvC,GAAI5P,EAAQ,OAAQ,CACtB,IAAMhB,EAASgB,EAAOhC,IAEtB,QAAsB,IAAXgB,IAAiD,IAAvB0L,GAAW1L,GAC9C,MAAM,IAAIsG,UAAU,6BAGtB9C,EAAWxE,IAAMgB,EAGnB,GAAI4Q,GAAI5P,EAAQ,OAAQ,CACtB,IAAMiS,EAASjS,EAAOkS,IAEtB,QAAsB,IAAXD,IAAiD,IAAvBvH,GAAWuH,GAC9C,MAAM,IAAI3M,UAAU,6BAGtB9C,EAAW0P,IAAMD,EAGnB,IAAKrC,GAAIpN,EAAY,QAAUoN,GAAIpN,EAAY,UAAYoN,GAAIpN,EAAY,UAAYoN,GAAIpN,EAAY,aACrG,MAAM,IAAI8C,UAAU,gGAGtB,OAAO9C,GAeHuQ,GAAoBL,GAAUlV,UAE9BwV,GAAoBpD,GAAImD,GAAmB,oBAE3CE,GAAeD,IAAqBvL,EAAUsL,GAAkB7U,kBAEhEgV,GAAeF,IAAqBvL,EAAUsL,GAAkBI,kBAEhEC,GAAeJ,IAAqBvL,EAAUsL,GAAkB1B,kBAEhEgC,GAAeL,IAAqBvL,EAAUsL,GAAkBxB,kBAsEtE,GAAIqB,GAAe,CACjB,IAAMU,GAAgB,SAAuBtT,GAC3C,IAAMiR,EAAajK,EAAQ4L,GAAe5S,EAAQ,WAAY,IAE9D,OAA4B,IAArBiR,EAAWhK,OAAmBgK,EAAW1R,QAAUS,GAAU,aAAcA,GAG9EuT,GAA0B,oBAAb9B,UAA4BA,SAE3C6B,GAAc,OAA2B,IAAnB/L,EAAUgM,KAAkBD,GAAcC,GAAI7B,cAAc,SACpFW,GAAkB,SAAwBrS,EAAQC,EAAUuC,GAC1D,OAAOoQ,GAAcL,GAAevS,GAASyP,GAAcxP,GAAW4S,GAAqBrQ,KAG7F4P,GAAyBQ,KAII,IAA7BrL,EAAUqL,KAA4BR,MACxCC,GAvF4B,SAAwBrS,EAAQC,EAAUuC,GACtE+P,GAAevS,GACf,IAAM6R,EAAUpC,GAAcxP,GACxBuT,EAAWX,GAAqBrQ,GAGtC,GAAI4P,GAAwB,CAC1B,IAAMhM,EAASY,EAAQ,WACrB,OAAOoL,GAAuBM,GAAW1S,EAAQ6R,EAAS2B,KAG5D,IAAqB,IAAjBpN,EAAOa,MACT,OAAOb,EAAO7G,MAMlB,GAAIqQ,GAAI4D,EAAU,SAEhB,GAAIR,KAAsBI,GAAapT,EAAQ6R,IAAYwB,GAAarT,EAAQ6R,IAAW,CAKzF,IAAMrU,EAAYwC,EAAO+R,UAEzB/R,EAAO+R,UAAYgB,UAEZ/S,EAAO6R,GACd7R,EAAO6R,GAAW2B,EAASjU,MAG3BS,EAAO+R,UAAYvU,OAEnBwC,EAAO6R,GAAW2B,EAASjU,UAExB,CACL,IAA0B,IAAtByT,KAAgCQ,EAASxV,KAAOwV,EAAStB,KAC3D,MAAM,IAAI5M,UAAU,kEAIlBkO,EAASxV,KACXiV,GAAajT,EAAQ6R,EAAS2B,EAASxV,KAGrCwV,EAAStB,KACXgB,GAAalT,EAAQ6R,EAAS2B,EAAStB,KAI3C,OAAOlS,IAsCT,IEpKQyT,GAgBAC,GACAC,GFqJOC,GAFCvB,GGvKVwB,GAAYpM,EAAU,OAAOqM,MAyCpBC,GAnBC,SAAiBxU,GAC/B,IAA4B,IAAxB4P,GAAa5P,GACf,OAAO,EAGT,IAAuB,IAAnBuI,EACF,MA3Be,oBA2BRD,EAAYtI,GAGrB,IAAMiD,EAAa8P,GAAK/S,EAAO,aAG/B,OAAiC,KAFAiD,GAAcoN,GAAIpN,EAAY,WA7BxC,SAAsBjD,EAAOiD,GACpD,IAIE,OAHAjD,EAAMyU,UAAY,EAClBH,GAAUtU,IAEH,EACP,MAAOqB,GACP,OAAO,EANT,QAQEgT,GAAerU,EAAO,YAAaiD,IA0B9ByR,CAAiB1U,EAAOiD,I,mBC3C3B0R,GAAM,GAAGC,QACTC,GAA+B,mBAARF,IAAsBA,GAE7CG,GAAarN,EAAQ,WACzB,OAA6B,IAAtBoN,GAAc,MAA+C,IAA/BA,GAAc,CAAC9S,OAAQ,MAiB/CgT,IAdwB,IAArBD,GAAWpN,QAAwC,IAArBoN,GAAW9U,MAY/B6U,GAVE,SAAiB7U,GAC7C,MAA8B,mBAAvBsI,EAAYtI,ICRfgV,GAAW9M,EADI,GACmB1D,OAElCyQ,GAAW,SAAyBjV,GACxC,OAAOA,GAiBMkV,GAFU5R,EAAW2R,GAZN,SAAyBjV,GACrD,OAAOmF,IAASnF,GAASgV,GAAShV,EARf,IAQsCiV,GAASjV,ICP9DmV,GAAS,SAAgBvP,EAAGC,GAChC,OAAOD,GAAKC,EAAID,EAAIC,GAOhBuP,GAAc,SAAqBpV,EAAO+B,GAC9C,OAAO/B,EAAQ,EAAImV,GAAOpT,EAAS/B,EAAO,IALb4F,EAKyB5F,KALtB6F,EAK6B9D,GAJ7C6D,EAAIC,EADP,IAAgBD,EAAGC,GAmDnBwP,GArBD,SAAenQ,EAAWoQ,EAAOC,GAC7C,IAAMhQ,EAAW2P,GAAgBpF,GAAS5K,IACpCnD,EAAS2N,GAASnK,EAASxD,QAC7ByT,EAAIJ,GAAY3F,GAAU6F,GAAQvT,GAChC0T,OAA6B,IAARF,EAAsBxT,EAAS0N,GAAU8F,GAC9DG,EAAWN,GAAYK,EAAa1T,GACpCoB,EAAM,GACZA,EAAIpB,OAASoT,GAAOO,EAAWF,EAAG,GAElC,IADA,IAAIG,EAAO,EACJH,EAAIE,GACLF,KAAKjQ,IACPpC,EAAIwS,GAAQpQ,EAASiQ,IAGvBG,GAAQ,EACRH,GAAK,EAGP,OAAOrS,GJjDHyS,GAAkB1N,EAAU,GAAG4F,OA6B/B+H,IA1BE3B,GAAMzM,EAAQ,WAClB,OAAOmO,GAAgB,CAAC,EAAG,EAAG,GAAI,EAAG,MAG5BlO,QAAgC,IAAvBqN,GAAQb,GAAIlU,QAAyC,IAArBkU,GAAIlU,MAAM+B,QAAiC,IAAjBmS,GAAIlU,MAAM,GAuBpF8V,GApBa,WACjB,IAAM5B,EAAMzM,EAAQ,WAClB,OAAOmO,GAAgB,MAAO,EAAG,KAGnC,OAAO1B,EAAIxM,QAAgC,IAAvBqN,GAAQb,EAAIlU,QAAyC,IAArBkU,EAAIlU,MAAM+B,QAAiC,MAAjBmS,EAAIlU,MAAM,GAevE+V,GACbC,IAZE7B,GAA0B,oBAAbjC,UAA4BA,YACzCkC,KAAmBD,IACrB1M,EAAQ,WACN,OAAOmO,GAAgBzB,GAAI8B,mBAC1BvO,QAGmB0M,GAAiB1M,OAwC9BwO,GAND,SAAeC,EAAOb,EAAOC,GACzC,IAAM9U,EAASqP,GAASqG,GAExB,OA9BmB,SAAsB1V,GACzC,OAAOoV,IAAcG,KAA+B,IAApBjB,GAAQtU,IAAuBqV,IAAc3Q,IAAS1E,IAAY2V,KAAY3V,GA6BvG4V,CAAa5V,GAAU4U,GAAe5U,EAAQ6U,EAAOC,GAAOK,GAAgBnV,EAAQ6U,EAAOC,IK5D9Fe,GAAQpO,EADO,GACgBoO,OAC/BC,GAAQrO,EAFO,GAEgB4F,OAC/B0I,GAAStO,EAHM,GAGiBsO,QAChCC,GAAUvO,EAJK,GAIkBuO,SACjCC,GAAcxO,EALC,GAKsBwO,aACrCC,GAAQzO,EAAU,GAAG0O,MAGrBC,GAAU,OACVC,GAAYD,GAAQ9Y,YACpBgZ,GAAS7O,EAAU2O,GAAQ1V,MAC3B6V,GAAS9O,EAAU2O,GAAQtC,MAS3B0C,GAAW,IAAHvO,OANQ,kBAMR,KACRwO,GAAU,IAAHxO,OANa,kCAMbA,OALe,kBAKf,KACPyO,GAAS,2BACTC,GAAa,MAAH1O,OAASwO,GAAT,KAAAxO,OAAoByO,GAApB,KACVE,GAAc,KAAH3O,OAVK,kBAUL,KACX4O,GAAa,kCACbC,GAAa,qCAIbC,GAAW,GAAH9O,OAAM0O,GAAN,KACRK,GAAW,IAAH/O,OAdK,iBAcL,MAERgP,GAAQD,GAAWD,GADP,MAAH9O,OALD,UAKC,OAAAA,OAAoBiO,GAAM,CAACU,GAAaC,GAAYC,IAAa,KAAjE,KAAA7O,OAAyE+O,IAAzE/O,OAAoF8O,GAApF,MAETG,GAAW,MAAHjP,OAASiO,GAAM,CAAC,GAADjO,OAAI2O,GAAcH,GAAlB,KAA8BA,GAASI,GAAYC,GAAYN,IAAW,KAAzF,KAMRW,GAAkB,IAAId,GAAJ,GAAApO,OAAiByO,GAAjB,OAAAzO,OAA6ByO,GAA7B,MAAAzO,OAAwCiP,IAAxCjP,OAAmDgP,IAAS,KAM9EG,GAAqB,IAAIf,GAAJ,IAAApO,OAnBb,WAmBaA,OAhCL,mBAgCKA,OA/BD,kCA+BCA,OA9BC,mBA8BDA,OA7BR,iBA6BQ,MAsErBoP,GAAc,SAAqBrV,GAAK,IACrCkL,EAA+BlL,EAA/BkL,IAAKoK,EAA0BtV,EAA1BsV,UAAWxC,EAAe9S,EAAf8S,IAAK1O,EAAUpE,EAAVoE,OAE5B,GAAI2P,GAAOD,GAAM5I,EAAK4H,GAAMwC,GAAY,CACtC,IAAMC,EAAchQ,EAAU+P,EAAUzZ,QACpCyZ,EACA,IAAIjB,GAAUiB,EAAUE,OAAxB,GAAAvP,OAAmC+H,GAAauG,GAAOH,GAASkB,IAAhE,MAEJC,EAAYvD,UAAY,EACxB,IAAMyD,EApBQ,SAAmBF,EAAanR,GAGhD,IAFA,IAAIqR,EACAC,EAAUnB,GAAOgB,EAAanR,GAC3BsR,GACLD,EAASC,EAAQC,MACjBD,EAAUnB,GAAOgB,EAAanR,GAGhC,OAAOqR,EAYUG,CAAUL,EAAanR,GAEtC,OAAO0P,GAAM1P,EAAQ,OAAqB,IAAXqR,EAAyB3C,EAAM2C,GAGhE,OAAOrR,GA2DMyR,EAAA,QAxBE,SAAkBvT,EAAQwT,GACzC,IAAM5K,EAAM8C,GAAa1L,GADyByT,EAhGjC,SAAoBD,GACrC,IAAME,EAAO,CAAC1W,OAAQ,GAAI2W,SAAU,MAAOX,UAAW,MAgBtD,OAdInI,GAAa2I,KACXlI,GAAOkI,EAAS,YAClBE,EAAK1W,OAAS2N,GAAS6I,EAAQxW,SAG7BsO,GAAOkI,EAAS,cAClBE,EAAKC,SAAWH,EAAQG,UAGtBrI,GAAOkI,EAAS,eAClBE,EAAKV,UAAYQ,EAAQR,YAItBU,EAiF+BE,CAAWJ,GAA1CxW,EAF2CyW,EAE3CzW,OAAQ2W,EAFmCF,EAEnCE,SAAUX,EAFyBS,EAEzBT,UAFyBa,EA5ElC,SAAmBjL,GACnC,GAAIoJ,GAAOc,GAAoBlK,GAAM,CACnC,IAAMkL,EAAevC,GAAM3I,EAAKiK,IAEhC,MAAO,CACLiB,aAAcvC,GAAM3I,EAAKiK,IACzBkB,UAAWD,EAAa9W,QAI5B,MAAO,CACL8W,aAAc,KACdC,UAAWnL,EAAI5L,QAmEiBgX,CAAUpL,GAArCmL,EAH2CF,EAG3CE,UAAWD,EAHgCD,EAGhCC,aAElB,GAAI9W,GAAU+W,EACZ,OAAOnL,EAGT,IAAM4H,EAAMxT,EAvHK,SAAqBgD,GACtC,IAA0B,IAAtBiD,EAAUjD,KAA4D,IAAvCgS,GAAOc,GAAoB9S,GAC5D,OAAOA,EAAOhD,OAGhB6V,GAAgBnD,UAAY,EAE5B,IADA,IAAI5N,EAAS,EACNkQ,GAAOa,GAAiB7S,IAC7B8B,GAAU,EAGZ,OAAOA,EA4GcmS,CAAWN,GAEhC,GAAInD,EAAM,EACR,OAAOmD,EAGT,IAAM7R,EAASgS,EAAelC,GAAMT,GAAW2C,EAAc,EAAGtD,GArL7C,IAqLmEgB,GAAM5I,EAAK,EAAG4H,GAEpG,OAAI/M,EAAMuP,GACDlR,EAAS6R,EAlDF,SAAmBjW,GAAK,IACjCkL,EAA+BlL,EAA/BkL,IAAKoK,EAA0BtV,EAA1BsV,UAAWxC,EAAe9S,EAAf8S,IAAK1O,EAAUpE,EAAVoE,OAE5B,GAAI2N,GAASuD,GACX,OAAOD,GAAY,CAACnK,MAAKoK,YAAWxC,MAAK1O,WAG3C,GAAI4P,GAAQ9I,EAAKoK,EAAWxC,KAASA,EAAK,CACxC,IAAM6C,EAAQ1B,GAAY7P,EAAQkR,GAElC,GAAIK,GAAS,EACX,OAAO7B,GAAM1P,EAAQ,EAAGuR,GAI5B,OAAOvR,EAsCAoS,CAAU,CAACtL,MAAKoK,YAAWxC,IAAKsD,EAAehS,EAAO9E,OAASwT,EAAK1O,WAAW6R","file":"truncate-x.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"truncateX\"] = factory();\n\telse\n\t\troot[\"truncateX\"] = factory();\n})((function () {\n  'use strict';\n\n  var ObjectCtr = {}.constructor;\n  var objectPrototype = ObjectCtr.prototype;\n  var defineProperty = ObjectCtr.defineProperty;\n  var $globalThis;\n  var getGlobalFallback = function() {\n    if (typeof self !== 'undefined') {\n      return self;\n    }\n\n    if (typeof window !== 'undefined') {\n      return window;\n    }\n\n    if (typeof global !== 'undefined') {\n      return global;\n    }\n\n    return void 0;\n  };\n\n  var returnThis = function() {\n    return this;\n  };\n\n  try {\n    if (defineProperty) {\n      defineProperty(objectPrototype, '$$globalThis$$', {\n        get: returnThis,\n        configurable: true\n      });\n    } else {\n      objectPrototype.__defineGetter__('$$globalThis$$', returnThis);\n    }\n\n    $globalThis = typeof $$globalThis$$ === 'undefined' ? getGlobalFallback() : $$globalThis$$;\n\n    delete objectPrototype.$$globalThis$$;\n\n    return $globalThis;\n  } catch (error) {\n    return getGlobalFallback();\n  }\n}()), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","'use strict';\n\nvar toStr = Object.prototype.toString;\nvar hasSymbols = require('has-symbols')();\n\nif (hasSymbols) {\n\tvar symToStr = Symbol.prototype.toString;\n\tvar symStringRegex = /^Symbol\\(.*\\)$/;\n\tvar isSymbolObject = function isRealSymbolObject(value) {\n\t\tif (typeof value.valueOf() !== 'symbol') {\n\t\t\treturn false;\n\t\t}\n\t\treturn symStringRegex.test(symToStr.call(value));\n\t};\n\n\tmodule.exports = function isSymbol(value) {\n\t\tif (typeof value === 'symbol') {\n\t\t\treturn true;\n\t\t}\n\t\tif (toStr.call(value) !== '[object Symbol]') {\n\t\t\treturn false;\n\t\t}\n\t\ttry {\n\t\t\treturn isSymbolObject(value);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n} else {\n\n\tmodule.exports = function isSymbol(value) {\n\t\t// this environment does not support Symbols.\n\t\treturn false && value;\n\t};\n}\n","'use strict';\n\nvar strValue = String.prototype.valueOf;\nvar tryStringObject = function tryStringObject(value) {\n\ttry {\n\t\tstrValue.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar strClass = '[object String]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isString(value) {\n\tif (typeof value === 'string') { return true; }\n\tif (typeof value !== 'object') { return false; }\n\treturn hasToStringTag ? tryStringObject(value) : toStr.call(value) === strClass;\n};\n","'use strict';\n\nvar getDay = Date.prototype.getDay;\nvar tryDateObject = function tryDateObject(value) {\n\ttry {\n\t\tgetDay.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n\nvar toStr = Object.prototype.toString;\nvar dateClass = '[object Date]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isDateObject(value) {\n\tif (typeof value !== 'object' || value === null) { return false; }\n\treturn hasToStringTag ? tryDateObject(value) : toStr.call(value) === dateClass;\n};\n","'use strict';\n\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\nvar toStr = Object.prototype.toString;\n\nvar isStandardArguments = function isArguments(value) {\n\tif (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {\n\t\treturn false;\n\t}\n\treturn toStr.call(value) === '[object Arguments]';\n};\n\nvar isLegacyArguments = function isArguments(value) {\n\tif (isStandardArguments(value)) {\n\t\treturn true;\n\t}\n\treturn value !== null &&\n\t\ttypeof value === 'object' &&\n\t\ttypeof value.length === 'number' &&\n\t\tvalue.length >= 0 &&\n\t\ttoStr.call(value) !== '[object Array]' &&\n\t\ttoStr.call(value.callee) === '[object Function]';\n};\n\nvar supportsStandardArguments = (function () {\n\treturn isStandardArguments(arguments);\n}());\n\nisStandardArguments.isLegacyArguments = isLegacyArguments; // for tests\n\nmodule.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;\n","'use strict';\n\nvar origSymbol = global.Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict';\n\n/* eslint complexity: [2, 17], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n","/**\n * Returns true if the value is a primitive.\n *\n * @param {*} [val] - The value to test.\n * @returns {boolean} True if a primitive, otherwise false..\n */\nconst isPrimitive = function isPrimitive(val) {\n  return typeof val === 'object' ? val === null : typeof val !== 'function';\n};\n\nexport default isPrimitive;\n","const string = 'a';\nconst boxedString = {}.constructor(string);\n\n/**\n * Check failure of by-index access of string characters (IE < 9)\n * and failure of `0 in boxedString` (Rhino).\n *\n * `true` if no failure; otherwise `false`.\n *\n * @type boolean\n */\nconst hasBoxed = boxedString[0] === string && 0 in boxedString;\n\nexport default hasBoxed;\n","import noop from 'noop-x';\n\nconst {bind} = noop;\n\nconst test1 = function test1() {\n  let a1 = null;\n  let a2 = null;\n  let context = null;\n  const testThis = [];\n\n  const test1Fn = function test1Fn(arg1, arg2) {\n    /* eslint-disable-next-line babel/no-invalid-this */\n    context = this;\n    a1 = arg1;\n    a2 = arg2;\n\n    /* eslint-disable-next-line prefer-rest-params */\n    return arguments;\n  };\n\n  try {\n    const boundFn = bind.apply(test1Fn, [testThis, 1]);\n    const args = boundFn(2);\n\n    return boundFn.length === 1 && args.length === 2 && a1 === 1 && a2 === 2 && context === testThis;\n  } catch (e) {\n    return false;\n  }\n};\n\nconst test2 = function test2() {\n  let a1 = null;\n  let a2 = null;\n  let context = null;\n  const oracle = [1, 2, 3];\n\n  const Ctr = function Ctr(arg1, arg2) {\n    a1 = arg1;\n    a2 = arg2;\n    context = this;\n\n    return oracle;\n  };\n\n  try {\n    const BoundFn = bind.apply(Ctr, [null]);\n    const returned = new BoundFn(1, 2);\n\n    return BoundFn.length === Ctr.length && returned === oracle && a1 === 1 && a2 === 2 && context !== oracle;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Indicates if the engine has a working bind function.\n *\n * @type {boolean}\n */\nconst isWorking = typeof bind === 'function' && test1() && test2();\n\nexport default isWorking;\n","/**\n * This method returns undefined.\n *\n * @returns {undefined} Always undefined.\n */\nconst noop = function noop() {}; /* eslint-disable-line lodash/prefer-noop */\n\nexport default noop;\n","import isPrimitive from 'is-primitive-x';\nimport isString from 'is-string';\nimport hasBoxed from 'has-boxed-string-x';\nimport hasWorkingBind from 'has-working-bind-x';\n\nconst EMPTY_STRING = '';\nconst {split} = EMPTY_STRING;\nconst {max} = Math;\nconst {bind, call} = isPrimitive;\nexport const stringSplit = function stringSplit(string, pattern) {\n  // noinspection JSUnresolvedFunction\n  return split.call(string, pattern);\n};\n\nexport const $split = hasWorkingBind ? bind.call(call, split) : stringSplit;\n\nexport const getIterable = function getIterable(arrayLike) {\n  // noinspection JSUnresolvedFunction\n  return isString(arrayLike) ? $split(arrayLike, EMPTY_STRING) : arrayLike;\n};\n\n// eslint-disable jsdoc/no-undefined-types\n// noinspection JSCommentMatchesSignature\n/**\n * This pushes or concatenates into a new or existing array.\n *\n * @param {Array} arrayLike - The source.\n * @param {number} [from=0] - The from source index.\n * @param {Array} [target=[]] - The target array.\n * @returns {*} The target array.\n */\n// eslint-enable jsdoc/no-undefined-types\nconst pusher = function pusher(arrayLike, from) {\n  /* eslint-disable-next-line prefer-rest-params */\n  const target = arguments.length > 2 ? arguments[2] : [];\n\n  if (typeof arrayLike !== 'string' && isPrimitive(arrayLike)) {\n    return target;\n  }\n\n  const iterable = hasBoxed ? arrayLike : getIterable(arrayLike);\n  const {length} = iterable;\n  for (let i = max(0, from) || 0; i < length; i += 1) {\n    target[target.length] = arrayLike[i];\n  }\n\n  return target;\n};\n\nexport default pusher;\n","import hasWorkingBind from 'has-working-bind-x';\nimport pusher from 'util-pusher-x';\n\nconst {bind: nativeBind, call} = pusher;\nconst ERROR_MESSAGE = 'bind called on incompatible ';\nconst object = {};\nconst ObjectCtr = object.constructor;\nconst toStringTag = object.toString;\nconst funcType = '[object Function]';\nconst ZERO = 0;\nconst argsOffset = 2;\n\nconst getMax = function getMax(a, b) {\n  return a >= b ? a : b;\n};\n\nconst assertIsFunction = function assertIsFunction(value) {\n  if (typeof value !== 'function' && toStringTag.apply(value) !== funcType) {\n    throw new TypeError(ERROR_MESSAGE + value);\n  }\n};\n\nconst boundFns = [\n  function zero(binder) {\n    return function boundFn() {\n      /* eslint-disable-next-line babel/no-invalid-this,prefer-rest-params */\n      return binder.apply(this, pusher(arguments));\n    };\n  },\n  function one(binder, boundLength) {\n    return function boundFn(a) {\n      /* eslint-disable-next-line babel/no-invalid-this,prefer-rest-params */\n      return binder.apply(this, pusher(arguments, boundLength, [a]));\n    };\n  },\n  function two(binder, boundLength) {\n    return function boundFn(a, b) {\n      /* eslint-disable-next-line babel/no-invalid-this,prefer-rest-params */\n      return binder.apply(this, pusher(arguments, boundLength, [a, b]));\n    };\n  },\n  function three(binder, boundLength) {\n    /* eslint-disable-next-line max-params */\n    return function boundFn(a, b, c) {\n      /* eslint-disable-next-line babel/no-invalid-this,prefer-rest-params */\n      return binder.apply(this, pusher(arguments, boundLength, [a, b, c]));\n    };\n  },\n  function four(binder, boundLength) {\n    /* eslint-disable-next-line max-params */\n    return function boundFn(a, b, c, d) {\n      /* eslint-disable-next-line babel/no-invalid-this,prefer-rest-params */\n      return binder.apply(this, pusher(arguments, boundLength, [a, b, c, d]));\n    };\n  },\n  function five(binder, boundLength) {\n    /* eslint-disable-next-line max-params */\n    return function boundFn(a, b, c, d, e) {\n      /* eslint-disable-next-line babel/no-invalid-this,prefer-rest-params */\n      return binder.apply(this, pusher(arguments, boundLength, [a, b, c, d, e]));\n    };\n  },\n  function six(binder, boundLength) {\n    /* eslint-disable-next-line max-params */\n    return function boundFn(a, b, c, d, e, f) {\n      /* eslint-disable-next-line babel/no-invalid-this,prefer-rest-params */\n      return binder.apply(this, pusher(arguments, boundLength, [a, b, c, d, e, f]));\n    };\n  },\n  function seven(binder, boundLength) {\n    /* eslint-disable-next-line max-params */\n    return function boundFn(a, b, c, d, e, f, g) {\n      /* eslint-disable-next-line babel/no-invalid-this,prefer-rest-params */\n      return binder.apply(this, pusher(arguments, boundLength, [a, b, c, d, e, f, g]));\n    };\n  },\n  function eight(binder, boundLength) {\n    /* eslint-disable-next-line max-params */\n    return function boundFn(a, b, c, d, e, f, g, h) {\n      /* eslint-disable-next-line babel/no-invalid-this,prefer-rest-params */\n      return binder.apply(this, pusher(arguments, boundLength, [a, b, c, d, e, f, g, h]));\n    };\n  },\n];\n\nconst getBoundFn = function getBoundFn(args) {\n  const [binder, target, bindArgs] = args;\n  const boundLength = getMax(ZERO, target.length - getMax(ZERO, bindArgs.length - argsOffset));\n  const fn = boundFns[boundLength];\n  const boundFn = fn ? fn(binder, boundLength) : boundFns[ZERO](binder);\n\n  if (target.prototype) {\n    /* eslint-disable-next-line lodash/prefer-noop */\n    const Empty = function Empty() {};\n\n    Empty.prototype = target.prototype;\n    boundFn.prototype = new Empty();\n    Empty.prototype = null;\n  }\n\n  return boundFn;\n};\n\nconst getResult = function getResult(target, boundArgs) {\n  /* eslint-disable-next-line babel/no-invalid-this */\n  const result = target.apply(this, boundArgs);\n\n  /* eslint-disable-next-line babel/no-invalid-this,babel/new-cap */\n  return ObjectCtr(result) === result ? result : this;\n};\n\nexport const implementation = function bind(target, thisArg) {\n  assertIsFunction(target);\n  /* eslint-disable-next-line prefer-rest-params */\n  const bindArgs = arguments;\n\n  let bound;\n  const binder = function binder() {\n    /* eslint-disable-next-line prefer-rest-params */\n    const boundArgs = pusher(arguments, ZERO, pusher(bindArgs, argsOffset));\n\n    /* eslint-disable-next-line babel/no-invalid-this */\n    return this instanceof bound ? getResult.apply(this, [target, boundArgs]) : target.apply(thisArg, boundArgs);\n  };\n\n  bound = getBoundFn([binder, target, bindArgs]);\n\n  return bound;\n};\n\n/**\n * The bind() method creates a new function that, when called, has its this\n * keyword set to the provided value, with a given sequence of arguments\n * preceding any provided when the new function is called.\n *\n * @function bind\n * @param {Function} target - The target function.\n * @param {*} [thisArg] - The value to be passed as the this parameter to the target\n *  function when the bound function is called. The value is ignored if the\n *  bound function is constructed using the new operator.\n * @param {...*} [args] - Arguments to prepend to arguments provided to the bound\n *  function when invoking the target function.\n * @throws {TypeError} If target is not a function.\n * @returns {Function} The bound function.\n */\nconst $bind = hasWorkingBind ? call.bind(nativeBind) : implementation;\n\nexport default $bind;\n","import pusher from 'util-pusher-x';\nimport bind from 'simple-bind-x';\n\nconst $TypeError = TypeError;\nconst {apply: nativeApply, call: nativeCall} = bind;\nconst $apply = bind(nativeCall, nativeApply);\nconst toStringTag = bind(nativeApply, {}.toString);\nconst ERROR_MESSAGE = ' is not a function';\nconst funcType = '[object Function]';\n\nconst assertIsFunction = function assertIsFunction(value) {\n  if (typeof value !== 'function' && toStringTag(value) !== funcType) {\n    throw new $TypeError(value + ERROR_MESSAGE);\n  }\n\n  return value;\n};\n\n// eslint-disable jsdoc/check-param-names\n// noinspection JSCommentMatchesSignature\n/**\n * The abstract operation Call is used to call the [[Call]] internal method of a function object.\n *\n * @function call\n * @param {Function} F - The target function.\n * @param {*} [V] - The context.\n * @param {Array} [args] - Argument to call the function with.\n * @throws {TypeError} If target is not a function.\n * @returns {*} The the result of invoking the function.\n * @see https://www.ecma-international.org/ecma-262/6.0/#sec-call\n */\n// eslint-enable jsdoc/check-param-names\nconst call = function call(F, V) {\n  /* eslint-disable-next-line prefer-rest-params */\n  return $apply(assertIsFunction(F), V, pusher(arguments[2]));\n};\n\nexport default call;\n","import pusher from 'util-pusher-x';\nimport call from 'simple-call-x';\n\n// eslint-disable jsdoc/check-param-names\n// noinspection JSCommentMatchesSignature\n/**\n * This method attempts to invoke the function, returning either the result or\n * the caught error object. Any additional arguments are provided to the\n * function when it's invoked.\n *\n * @function attempt\n * @param {Function} [fn] - The function to attempt.\n * @param {...*} [args] - The arguments to invoke the function with.\n * @returns {object} Returns an object of the result.\n */\n// eslint-disable jsdoc/check-param-names\nconst attempt = function attempt(fn) {\n  try {\n    return {\n      threw: false,\n      /* eslint-disable-next-line babel/no-invalid-this,prefer-rest-params */\n      value: call(fn, this, pusher(arguments, 1)),\n    };\n  } catch (e) {\n    return {\n      threw: true,\n      value: e,\n    };\n  }\n};\n\nexport default attempt;\n","/**\n * A record of a white space character.\n *\n * @typedef {object} CharRecord\n * @property {number} code - The character code.\n * @property {string} description - A description of the character.\n * @property {boolean} es5 - Whether the spec lists this as a white space.\n * @property {boolean} es2015 - Whether the spec lists this as a white space.\n * @property {boolean} es2016 - Whether the spec lists this as a white space.\n * @property {boolean} es2017 - Whether the spec lists this as a white space.\n * @property {boolean} es2018 - Whether the spec lists this as a white space.\n * @property {string} string - The character string.\n */\n\n/**\n * An array of the whitespace char codes, string, descriptions and language\n * presence in the specifications.\n *\n * @type Array.<CharRecord>\n */\nexport const list = [\n  {\n    code: 0x0009,\n    description: 'Tab',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u0009',\n  },\n  {\n    code: 0x000a,\n    description: 'Line Feed',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u000a',\n  },\n  {\n    code: 0x000b,\n    description: 'Vertical Tab',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u000b',\n  },\n  {\n    code: 0x000c,\n    description: 'Form Feed',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u000c',\n  },\n  {\n    code: 0x000d,\n    description: 'Carriage Return',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u000d',\n  },\n  {\n    code: 0x0020,\n    description: 'Space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u0020',\n  },\n  /*\n  {\n    code: 0x0085,\n    description: 'Next line',\n    es5: false,\n    es2015: false,\n    es2016: false,\n    es2017: false,\n    es2018: false,\n    string: '\\u0085'\n  }\n  */\n  {\n    code: 0x00a0,\n    description: 'No-break space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u00a0',\n  },\n  {\n    code: 0x1680,\n    description: 'Ogham space mark',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u1680',\n  },\n  {\n    code: 0x180e,\n    description: 'Mongolian vowel separator',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: false,\n    es2018: false,\n    string: '\\u180e',\n  },\n  {\n    code: 0x2000,\n    description: 'En quad',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2000',\n  },\n  {\n    code: 0x2001,\n    description: 'Em quad',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2001',\n  },\n  {\n    code: 0x2002,\n    description: 'En space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2002',\n  },\n  {\n    code: 0x2003,\n    description: 'Em space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2003',\n  },\n  {\n    code: 0x2004,\n    description: 'Three-per-em space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2004',\n  },\n  {\n    code: 0x2005,\n    description: 'Four-per-em space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2005',\n  },\n  {\n    code: 0x2006,\n    description: 'Six-per-em space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2006',\n  },\n  {\n    code: 0x2007,\n    description: 'Figure space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2007',\n  },\n  {\n    code: 0x2008,\n    description: 'Punctuation space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2008',\n  },\n  {\n    code: 0x2009,\n    description: 'Thin space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2009',\n  },\n  {\n    code: 0x200a,\n    description: 'Hair space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u200a',\n  },\n  /*\n  {\n    code: 0x200b,\n    description: 'Zero width space',\n    es5: false,\n    es2015: false,\n    es2016: false,\n    es2017: false,\n    es2018: false,\n    string: '\\u200b'\n  },\n  */\n  {\n    code: 0x2028,\n    description: 'Line separator',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2028',\n  },\n  {\n    code: 0x2029,\n    description: 'Paragraph separator',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2029',\n  },\n  {\n    code: 0x202f,\n    description: 'Narrow no-break space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u202f',\n  },\n  {\n    code: 0x205f,\n    description: 'Medium mathematical space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u205f',\n  },\n  {\n    code: 0x3000,\n    description: 'Ideographic space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u3000',\n  },\n  {\n    code: 0xfeff,\n    description: 'Byte Order Mark',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\ufeff',\n  },\n];\n\n/**\n * A string of the ES5 to ES2016 whitespace characters.\n *\n * @type string\n */\nlet stringES2016 = '';\n\n/**\n * A string of the ES2017 to ES2018 whitespace characters.\n *\n * @type string\n */\nlet stringES2018 = '';\nconst {length} = list;\nfor (let i = 0; i < length; i += 1) {\n  if (list[i].es2016) {\n    stringES2016 += list[i].string;\n  }\n\n  if (list[i].es2018) {\n    stringES2018 += list[i].string;\n  }\n}\n\nconst string2018 = stringES2018;\n\nexport default string2018;\nexport const string2016 = stringES2016;\n","import attempt from 'attempt-x';\nimport isSymbol from 'is-symbol';\n\nconst hasSymbolSupport = attempt(() => {\n  /* eslint-disable-next-line compat/compat */\n  return typeof Symbol === 'function' && isSymbol(Symbol(''));\n});\n\n/**\n * Indicates if `Symbol`exists and creates the correct type.\n * `true`, if it exists and creates the correct type, otherwise `false`.\n *\n * @type boolean\n */\nexport default hasSymbolSupport.threw === false && hasSymbolSupport.value === true;\n","/**\n * The abstract operation ToBoolean converts argument to a value of type Boolean.\n *\n * @param {*} [value] - The value to be converted.\n * @returns {boolean} 'true' if value is truthy; otherwise 'false'.\n */\nconst toBoolean = function toBoolean(value) {\n  return !!value;\n};\n\nexport default toBoolean;\n","import call from 'simple-call-x';\nimport pusher from 'util-pusher-x';\n\nconst toStringTag = {}.toString;\nconst ERROR_MESSAGE = 'methodize called on incompatible ';\nconst funcType = '[object Function]';\n\nconst assertIsFunction = function assertIsFunction(value) {\n  if (typeof value !== 'function' && call(toStringTag, value) !== funcType) {\n    throw new TypeError(ERROR_MESSAGE + value);\n  }\n\n  return value;\n};\n\n/**\n * Methodize a prototype method. Compliant to 8 arguments.\n *\n * @param {Function} prototypeMethod - The prototype method to methodize.\n * @throws {TypeError} If target is not a function.\n * @returns {Function} The static method.\n */\nconst methodize = function methodize(prototypeMethod) {\n  assertIsFunction(prototypeMethod);\n\n  return function methodized() {\n    /* eslint-disable-next-line prefer-rest-params */\n    return call(prototypeMethod, arguments[0], pusher(arguments, 1));\n  };\n};\n\nexport default methodize;\n","import methodize from 'simple-methodize-x';\n\nconst methodizedToString = methodize({}.toString);\n\n/**\n * The `toStringTag` method returns \"[object type]\", where type is the\n * object type.\n *\n * @param {*} [value] - The object of which to get the object type string.\n * @returns {string} The object type string.\n */\nconst toStringTag = function toStringTag(value) {\n  if (value === null) {\n    return '[object Null]';\n  }\n\n  if (typeof value === 'undefined') {\n    return '[object Undefined]';\n  }\n\n  return methodizedToString(value);\n};\n\nexport default toStringTag;\n","import hasSymbols from 'has-symbol-support-x';\nimport isSymbol from 'is-symbol';\n\n/**\n * Indicates if `Symbol.toStringTag`exists and is the correct type.\n * `true`, if it exists and is the correct type, otherwise `false`.\n *\n * @type boolean\n */\nexport default hasSymbols &&\n  /* eslint-disable-next-line compat/compat */\n  isSymbol(Symbol.toStringTag);\n","/**\n * Checks if `value` is `null` or `undefined`.\n *\n * @param {*} [value] - The value to check.\n * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n */\nconst isNil = function isNil(value) {\n  /* eslint-disable-next-line lodash/prefer-is-nil */\n  return value === null || typeof value === 'undefined';\n};\n\nexport default isNil;\n","import isNil from 'is-nil-x';\n\n/**\n * The abstract operation RequireObjectCoercible throws an error if argument\n * is a value that cannot be converted to an Object using ToObject.\n *\n * @param {*} [value] - The `value` to check.\n * @throws {TypeError} If `value` is a `null` or `undefined`.\n * @returns {string} The `value`.\n */\nconst requireObjectCoercible = function requireObjectCoercible(value) {\n  if (isNil(value)) {\n    throw new TypeError(`Cannot call method on ${value}`);\n  }\n\n  return value;\n};\n\nexport default requireObjectCoercible;\n","import isSymbol from 'is-symbol';\n\nconst ERROR_MESSAGE = 'Cannot convert a Symbol value to a string';\nconst castString = ERROR_MESSAGE.constructor;\n/**\n * The abstract operation ToString converts argument to a value of type String.\n *\n * @param {*} [value] - The value to convert to a string.\n * @throws {TypeError} If `value` is a Symbol.\n * @returns {string} The converted value.\n */\nconst ToString = function ToString(value) {\n  if (isSymbol(value)) {\n    throw new TypeError(ERROR_MESSAGE);\n  }\n\n  return castString(value);\n};\n\nexport default ToString;\n","import requireObjectCoercible from 'require-object-coercible-x';\nimport toStr from 'to-string-x';\n\n/**\n * This method requires an argument is corecible then converts using ToString.\n *\n * @param {*} [value] - The value to converted to a string.\n * @throws {TypeError} If value is null or undefined.\n * @returns {string} The value as a string.\n */\nconst requireCoercibleToString = function requireCoercibleToString(value) {\n  return toStr(requireObjectCoercible(value));\n};\n\nexport default requireCoercibleToString;\n","import requireCoercibleToString from 'require-coercible-to-string-x';\nimport whiteSpace from 'white-space-x';\nimport methodize from 'simple-methodize-x';\n\nconst EMPTY_STRING = '';\nconst RegExpCtr = /none/.constructor;\nconst reLeft = new RegExpCtr(`^[${whiteSpace}]+`);\nconst methodizedReplace = methodize(EMPTY_STRING.replace);\n\n/**\n * This method removes whitespace from the start of a string. (ES2019).\n *\n * @param {string} [string] - The string to trim the left end whitespace from.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @returns {string} The left trimmed string.\n */\nconst trimStart = function trimStart(string) {\n  return methodizedReplace(requireCoercibleToString(string), reLeft, EMPTY_STRING);\n};\n\nexport default trimStart;\n","import requireCoercibleToString from 'require-coercible-to-string-x';\nimport whiteSpace from 'white-space-x';\nimport methodize from 'simple-methodize-x';\n\nconst EMPTY_STRING = '';\nconst RegExpCtr = /none/.constructor;\nconst reRight = new RegExpCtr(`[${whiteSpace}]+$`);\nconst methodizedReplace = methodize(EMPTY_STRING.replace);\n\n/**\n * This method removes whitespace from the end of a string. (ES2019).\n *\n * @param {string} [string] - The string to trim the right end whitespace from.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @returns {string} The right trimmed string.\n */\nconst trimEnd = function trimEnd(string) {\n  return methodizedReplace(requireCoercibleToString(string), reRight, EMPTY_STRING);\n};\n\nexport default trimEnd;\n","import trimStart from 'trim-left-x';\nimport trimEnd from 'trim-right-x';\n\n/**\n * This method removes whitespace from the start and end of a string.\n * (ES2019).\n *\n * @param {string} [string] - The string to trim the whitespace from.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @returns {string} The trimmed string.\n */\nconst trim = function trim(string) {\n  return trimStart(trimEnd(string));\n};\n\nexport default trim;\n","import trim from 'trim-x';\nimport whiteSpace from 'white-space-x';\nimport methodize from 'simple-methodize-x';\n\nconst SPACE = ' ';\nconst RegExpCtr = /none/.constructor;\nconst reNormalize = new RegExpCtr(`[${whiteSpace}]+`, 'g');\nconst methodizedReplace = methodize(SPACE.replace);\n\n/**\n * This method strips leading and trailing white-space from a string,\n * replaces sequences of whitespace characters by a single space,\n * and returns the resulting string. (ES2019).\n *\n * @param {string} [string] - The string to be normalized.\n * @throws {TypeError} If string is null or undefined or not coercible.\n */\nconst normalizeSpace = function normalizeSpace(string) {\n  return methodizedReplace(trim(string), reNormalize, SPACE);\n};\n\nexport default normalizeSpace;\n","import toStr from 'to-string-x';\nimport requireCoercibleToString from 'require-coercible-to-string-x';\nimport methodize from 'simple-methodize-x';\n\nconst EMPTY_STRING = '';\nconst STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/gm;\nconst methodizedReplace = methodize(EMPTY_STRING.replace);\n\n/**\n * This method replaces comments in a string.\n *\n * @param {string} [string] - The string to be stripped.\n * @param {string} [replacement=''] - The string to be used as a replacement.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @throws {TypeError} If replacement is not coercible.\n * @returns {string} The new string with the comments replaced.\n */\nconst replaceComments = function replaceComments(string, replacement) {\n  return methodizedReplace(\n    requireCoercibleToString(string),\n    STRIP_COMMENTS,\n    arguments.length > 1 ? toStr(replacement) : EMPTY_STRING,\n  );\n};\n\nexport default replaceComments;\n","import attempt from 'attempt-x';\nimport toBoolean from 'to-boolean-x';\nimport toStringTag from 'to-string-tag-x';\nimport hasToStringTag from 'has-to-string-tag-x';\nimport isPrimitive from 'is-primitive-x';\nimport normalise from 'normalize-space-x';\nimport deComment from 'replace-comments-x';\nimport methodize from 'simple-methodize-x';\n\nconst FunctionCtr = attempt.constructor;\nconst SPACE = ' ';\nconst methodizedFunctionToString = methodize(attempt.toString);\nconst funcTag = '[object Function]';\nconst genTag = '[object GeneratorFunction]';\nconst asyncTag = '[object AsyncFunction]';\nconst ctrRx = /^class /;\nconst methodizedTest = methodize(ctrRx.test);\n\nconst hasNativeClass =\n  attempt(function attemptee() {\n    /* eslint-disable-next-line babel/new-cap */\n    return FunctionCtr('\"use strict\"; return class My {};')();\n  }).threw === false;\n\nconst testClassString = function testClassString(value) {\n  return methodizedTest(ctrRx, normalise(deComment(methodizedFunctionToString(value), SPACE)));\n};\n\nconst isES6ClassFn = function isES6ClassFunc(value) {\n  const result = attempt(testClassString, value);\n\n  return result.threw === false && result.value;\n};\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @private\n * @param {*} value - The value to check.\n * @param {boolean} allowClass - Whether to filter ES6 classes.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n * else `false`.\n */\nconst tryFuncToString = function funcToString(value, allowClass) {\n  if (hasNativeClass && allowClass === false && isES6ClassFn(value)) {\n    return false;\n  }\n\n  return (\n    attempt(function attemptee() {\n      return methodizedFunctionToString(value);\n    }).threw === false\n  );\n};\n\nconst compareTags = function compareTags(value) {\n  const strTag = toStringTag(value);\n\n  return strTag === funcTag || strTag === genTag || strTag === asyncTag;\n};\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @param {*} value - The value to check.\n * @param {boolean} [allowClass=false] - Whether to filter ES6 classes.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n * else `false`.\n */\nconst isFunction = function isFunction(value, allowClass) {\n  if (isPrimitive(value)) {\n    return false;\n  }\n\n  if (hasToStringTag) {\n    return tryFuncToString(value, toBoolean(allowClass));\n  }\n\n  if (hasNativeClass && toBoolean(allowClass) === false && isES6ClassFn(value)) {\n    return false;\n  }\n\n  return compareTags(value);\n};\n\nexport default isFunction;\n","import hasSymbols from 'has-symbol-support-x';\nimport isPrimitive from 'is-primitive-x';\nimport isDate from 'is-date-object';\nimport isSymbol from 'is-symbol';\nimport isFunction from 'is-function-x';\nimport requireObjectCoercible from 'require-object-coercible-x';\nimport isNil from 'is-nil-x';\nimport call from 'simple-call-x';\n\nconst ZERO = 0;\nconst ONE = 1;\n/* eslint-disable-next-line no-void */\nconst UNDEFINED = void ZERO;\nconst NUMBER = 'number';\nconst STRING = 'string';\nconst DEFAULT = 'default';\nconst StringCtr = STRING.constructor;\nconst NumberCtr = ZERO.constructor;\n/* eslint-disable-next-line compat/compat */\nconst symToPrimitive = hasSymbols && Symbol.toPrimitive;\n/* eslint-disable-next-line compat/compat */\nconst symValueOf = hasSymbols && Symbol.prototype.valueOf;\n\nconst toStringOrder = ['toString', 'valueOf'];\nconst toNumberOrder = ['valueOf', 'toString'];\nconst orderLength = 2;\n\nconst assertHint = function assertHint(hint) {\n  if (typeof hint !== 'string' || (hint !== NUMBER && hint !== STRING)) {\n    throw new TypeError('hint must be \"string\" or \"number\"');\n  }\n\n  return hint;\n};\n\n/**\n * @param {*} ordinary - The ordinary to convert.\n * @param {*} hint - The hint.\n * @returns {*} - The primitive.\n */\nconst ordinaryToPrimitive = function ordinaryToPrimitive(ordinary, hint) {\n  requireObjectCoercible(ordinary);\n  assertHint(hint);\n\n  const methodNames = hint === STRING ? toStringOrder : toNumberOrder;\n  for (let i = ZERO; i < orderLength; i += ONE) {\n    const method = ordinary[methodNames[i]];\n\n    if (isFunction(method)) {\n      const result = call(method, ordinary);\n\n      if (isPrimitive(result)) {\n        return result;\n      }\n    }\n  }\n\n  throw new TypeError('No default value');\n};\n\n/**\n * @param {*} object - The object.\n * @param {*} property - The property.\n * @returns {undefined|Function} - The method.\n */\nconst getMethod = function getMethod(object, property) {\n  const func = object[property];\n\n  if (isNil(func) === false) {\n    if (isFunction(func) === false) {\n      throw new TypeError(`${func} returned for property ${property} of object ${object} is not a function`);\n    }\n\n    return func;\n  }\n\n  return UNDEFINED;\n};\n\n/**\n * Get the hint.\n *\n * @param {*} value - The value to compare.\n * @param {boolean} supplied - Was a value supplied.\n * @returns {string} - The hint string.\n */\nconst getHint = function getHint(value, supplied) {\n  if (supplied) {\n    if (value === StringCtr) {\n      return STRING;\n    }\n\n    if (value === NumberCtr) {\n      return NUMBER;\n    }\n  }\n\n  return DEFAULT;\n};\n\n/**\n * Get the primitive from the exotic.\n *\n * @param {*} value - The exotic.\n * @returns {*} - The primitive.\n */\nconst getExoticToPrim = function getExoticToPrim(value) {\n  if (hasSymbols) {\n    if (symToPrimitive) {\n      return getMethod(value, symToPrimitive);\n    }\n\n    if (isSymbol(value)) {\n      return symValueOf;\n    }\n  }\n\n  return UNDEFINED;\n};\n\nconst evalExotic = function evalExotic(obj) {\n  const {exoticToPrim, input, hint} = obj;\n  const result = call(exoticToPrim, input, [hint]);\n\n  if (isPrimitive(result)) {\n    return result;\n  }\n\n  throw new TypeError('unable to convert exotic object to primitive');\n};\n\nconst evalPrimitive = function evalPrimitive(input, hint) {\n  const newHint = hint === DEFAULT && (isDate(input) || isSymbol(input)) ? STRING : hint;\n\n  return ordinaryToPrimitive(input, newHint === DEFAULT ? NUMBER : newHint);\n};\n\n/**\n * This method converts a JavaScript object to a primitive value.\n * Note: When toPrimitive is called with no hint, then it generally behaves as\n * if the hint were Number. However, objects may over-ride this behaviour by\n * defining a @@toPrimitive method. Of the objects defined in this specification\n * only Date objects (see 20.3.4.45) and Symbol objects (see 19.4.3.4) over-ride\n * the default ToPrimitive behaviour. Date objects treat no hint as if the hint\n * were String.\n *\n * @param {*} input - The input to convert.\n * @param {Function} [preferredType] - The preferred type (String or Number).\n * @throws {TypeError} If unable to convert input to a primitive.\n * @returns {string|number} The converted input as a primitive.\n * @see {http://www.ecma-international.org/ecma-262/6.0/#sec-toprimitive}\n */\nconst toPrimitive = function toPrimitive(input, preferredType) {\n  if (isPrimitive(input)) {\n    return input;\n  }\n\n  const hint = getHint(preferredType, arguments.length > ONE);\n  const exoticToPrim = getExoticToPrim(input);\n\n  return typeof exoticToPrim === 'undefined' ? evalPrimitive(input, hint) : evalExotic({exoticToPrim, input, hint});\n};\n\nexport default toPrimitive;\n","import NAN from 'nan-x';\nimport toStr from 'to-string-x';\nimport trimLeft from 'trim-left-x';\nimport methodize from 'simple-methodize-x';\n\nconst nativeParseInt = parseInt;\n/**  @type {Function} */\nconst castNumber = (0).constructor;\nconst BAD_CHAR = '\\u180E';\nconst methodizedCharAt = methodize(BAD_CHAR.charAt);\nconst hexRegex = /^[-+]?0[xX]/;\nconst methodizedTest = methodize(hexRegex.test);\n\n/**\n * This method parses a string argument and returns an integer of the specified\n * radix (the base in mathematical numeral systems). (ES2019).\n *\n * @param {string} [string] - The value to parse. If the string argument is not a\n *  string, then it is converted to a string (using the ToString abstract\n *  operation). Leading whitespace in the string argument is ignored.\n * @param {number} [radix] - An integer between 2 and 36 that represents the radix\n *  (the base in mathematical numeral systems) of the above mentioned string.\n *  Specify 10 for the decimal numeral system commonly used by humans. Always\n *  specify this parameter to eliminate reader confusion and to guarantee\n *  predictable behavior. Different implementations produce different results\n *  when a radix is not specified, usually defaulting the value to 10.\n * @throws {TypeError} If target is a Symbol or is not coercible.\n * @returns {number} An integer number parsed from the given string. If the first\n *  character cannot be converted to a number, NaN is returned.\n */\nconst $parseInt = function $parseInt(string, radix) {\n  const str = trimLeft(toStr(string));\n\n  if (methodizedCharAt(str, 0) === BAD_CHAR) {\n    return NAN;\n  }\n\n  return nativeParseInt(str, castNumber(radix) || (methodizedTest(hexRegex, str) ? 16 : 10));\n};\n\nexport default $parseInt;\n","/**\n * The constant NaN derived mathematically by 0 / 0.\n *\n * @type number\n */\nconst constantNAN = 0 / 0;\n\nexport default constantNAN;\n","import isSymbol from 'is-symbol';\nimport toPrimitive from 'to-primitive-x';\nimport trim from 'trim-x';\nimport $parseInt from 'parse-int-x';\nimport NAN from 'nan-x';\nimport methodize from 'simple-methodize-x';\n\nconst binaryRadix = 2;\nconst octalRadix = 8;\nconst testCharsCount = 2;\nconst ERROR_MESSAGE = 'Cannot convert a Symbol value to a number';\n\nconst castNumber = testCharsCount.constructor;\nconst methodizedStringSlice = methodize(ERROR_MESSAGE.slice);\n\nconst binaryRegex = /^0b[01]+$/i;\nconst RegExpConstructor = binaryRegex.constructor;\n// Note that in IE 8, RegExp.prototype.test doesn't seem to exist: ie, \"test\" is\n// an own property of regexes. wtf.\nconst methodizedTest = methodize(binaryRegex.test);\nconst isBinary = function isBinary(value) {\n  return methodizedTest(binaryRegex, value);\n};\n\nconst octalRegex = /^0o[0-7]+$/i;\nconst isOctal = function isOctal(value) {\n  return methodizedTest(octalRegex, value);\n};\n\nconst nonWSregex = new RegExpConstructor('[\\u0085\\u180e\\u200b\\ufffe]', 'g');\nconst hasNonWS = function hasNonWS(value) {\n  return methodizedTest(nonWSregex, value);\n};\n\nconst invalidHexLiteral = /^[-+]0x[0-9a-f]+$/i;\nconst isInvalidHexLiteral = function isInvalidHexLiteral(value) {\n  return methodizedTest(invalidHexLiteral, value);\n};\n\nconst assertNotSymbol = function assertNotSymbol(value) {\n  if (isSymbol(value)) {\n    throw new TypeError(ERROR_MESSAGE);\n  }\n\n  return value;\n};\n\nconst parseBase = function parseBase(value, radix) {\n  return $parseInt(methodizedStringSlice(value, testCharsCount), radix);\n};\n\nconst parseString = function parseString(toNum, value) {\n  if (isBinary(value)) {\n    return toNum(parseBase(value, binaryRadix));\n  }\n\n  if (isOctal(value)) {\n    return toNum(parseBase(value, octalRadix));\n  }\n\n  return null;\n};\n\nconst convertString = function convertString(toNum, value) {\n  const val = parseString(toNum, value);\n\n  if (val !== null) {\n    return val;\n  }\n\n  if (hasNonWS(value) || isInvalidHexLiteral(value)) {\n    return NAN;\n  }\n\n  const trimmed = trim(value);\n\n  if (trimmed !== value) {\n    return toNum(trimmed);\n  }\n\n  return null;\n};\n\n/**\n * This method converts argument to a value of type Number. (ES2019).\n *\n * @param {*} [argument] - The argument to convert to a number.\n * @throws {TypeError} - If argument is a Symbol or not coercible.\n * @returns {*} The argument converted to a number.\n */\nconst toNumber = function toNumber(argument) {\n  const value = assertNotSymbol(toPrimitive(argument, castNumber));\n\n  if (typeof value === 'string') {\n    const val = convertString(toNumber, value);\n\n    if (val !== null) {\n      return val;\n    }\n  }\n\n  return castNumber(value);\n};\n\nexport default toNumber;\n","/**\n * This method determines whether the passed value is NaN and its type is\n * `Number`. It is a more robust version of the original, global isNaN().\n *\n * @param {*} [value] - The value to be tested for NaN.\n * @returns {boolean} `true` if the given value is NaN and its type is Number;\n *  otherwise, `false`.\n */\nconst isNaN = function isNaN(value) {\n  /* eslint-disable-next-line no-self-compare */\n  return value !== value;\n};\n\nexport default isNaN;\n","import numberIsNaN from 'is-nan-x';\nimport INFINITY from 'infinity-x';\n\n/**\n * This method determines whether the passed value is a finite number.\n *\n * @param {*} [number] - The value to be tested for finiteness.\n * @returns {boolean} A Boolean indicating whether or not the given value is a finite number.\n */\nconst isFinite = function isFinite(number) {\n  return typeof number === 'number' && numberIsNaN(number) === false && number !== INFINITY && number !== -INFINITY;\n};\n\nexport default isFinite;\n","/**\n * The constant value Infinity derived mathematically by 1 / 0.\n *\n * @type number\n */\nconst constantInfinity = 1 / 0;\n\nexport default constantInfinity;\n","import toNumber from 'to-number-x';\nimport numberIsNaN from 'is-nan-x';\n\n/**\n * This method returns the sign of a number, indicating whether the number is positive,\n * negative or zero. (ES2019).\n *\n * @param {*} x - A number.\n * @returns {number} A number representing the sign of the given argument. If the argument\n * is a positive number, negative number, positive zero or negative zero, the function will\n * return 1, -1, 0 or -0 respectively. Otherwise, NaN is returned.\n */\nconst sign = function sign(x) {\n  const n = toNumber(x);\n\n  if (n === 0 || numberIsNaN(n)) {\n    return n;\n  }\n\n  return n > 0 ? 1 : -1;\n};\n\nexport default sign;\n","import toNumber from 'to-number-x';\nimport numberIsNaN from 'is-nan-x';\nimport numberIsFinite from 'is-finite-x';\nimport mathSign from 'math-sign-x';\n\nconst {abs, floor} = Math;\n\n/**\n * Converts `value` to an integer. (ES2019).\n *\n * @param {*} value - The value to convert.\n * @returns {number} Returns the converted integer.\n */\nconst toInteger = function toInteger(value) {\n  const number = toNumber(value);\n\n  if (numberIsNaN(number)) {\n    return 0;\n  }\n\n  if (number === 0 || numberIsFinite(number) === false) {\n    return number;\n  }\n\n  return mathSign(number) * floor(abs(number));\n};\n\nexport default toInteger;\n","import toInteger from 'to-integer-x';\n\nconst MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Converts `value` to an integer suitable for use as the length of an\n * array-like object. (ES2019).\n *\n * @param {*} value - The value to convert.\n * @returns {number} Returns the converted integer.\n */\nconst toLength = function toLength(value) {\n  const len = toInteger(value);\n\n  // includes converting -0 to +0\n  if (len <= 0) {\n    return 0;\n  }\n\n  if (len > MAX_SAFE_INTEGER) {\n    return MAX_SAFE_INTEGER;\n  }\n\n  return len;\n};\n\nexport default toLength;\n","import isFunction from 'is-function-x';\nimport isPrimitive from 'is-primitive-x';\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not a\n * primitive and not a function.\n *\n * @param {*} [value] - The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nconst isObjectLike = function isObjectLike(value) {\n  return isPrimitive(value) === false && isFunction(value, true) === false;\n};\n\nexport default isObjectLike;\n","import requireObjectCoercible from 'require-object-coercible-x';\n\nconst castObject = {}.constructor;\n\n/**\n * The abstract operation ToObject converts argument to a value of\n * type Object.\n *\n * @param {*} value - The `value` to convert.\n * @throws {TypeError} If `value` is a `null` or `undefined`.\n * @returns {!object} The `value` converted to an object.\n */\nconst toObject = function toObject(value) {\n  return castObject(requireObjectCoercible(value));\n};\n\nexport default toObject;\n","import hasSymbols from 'has-symbol-support-x';\nimport toPrimitive from 'to-primitive-x';\nimport toStr from 'to-string-x';\n\n/**\n * This method Converts argument to a value that can be used as a property key.\n *\n * @param {*} argument - The argument to convert to a property key.\n * @throws {TypeError} If argument is not a symbol and is not coercible to a string.\n * @returns {string|symbol} The converted argument.\n */\nconst toPropertyKey = function toPropertyKey(argument) {\n  const key = toPrimitive(argument, String);\n\n  return hasSymbols && typeof key === 'symbol' ? key : toStr(key);\n};\n\nexport default toPropertyKey;\n","import toObject from 'to-object-x';\nimport toPropertyKey from 'to-property-key-x';\nimport attempt from 'attempt-x';\nimport hasSymbolSupport from 'has-symbol-support-x';\nimport owns from 'has-own-property-x';\nimport isPrimitive from 'is-primitive-x';\nimport isString from 'is-string';\nimport isIndex from 'is-index-x';\nimport propertyIsEnumerable from 'property-is-enumerable-x';\nimport toBoolean from 'to-boolean-x';\nimport methodize from 'simple-methodize-x';\n\nconst EMPTY_STRING = '';\nconst charAt = methodize(EMPTY_STRING.charAt);\nconst ObjectCtr = {}.constructor;\nconst ngopd = ObjectCtr.getOwnPropertyDescriptor;\nconst nativeGOPD = typeof ngopd === 'function' && ngopd;\nlet getOPDFallback1;\nlet getOPDFallback2;\n\n// ES5 15.2.3.3\n// http://es5.github.com/#x15.2.3.3\n\nconst doesGOPDWork = function doesGOPDWork(object, prop) {\n  object[toPropertyKey(prop)] = 0;\n  const testResult = attempt(nativeGOPD, object, prop);\n\n  return testResult.threw === false && testResult.value.value === 0;\n};\n\nconst prototypeOfObject = ObjectCtr.prototype;\n\n// If JS engine supports accessors creating shortcuts.\nconst supportsAccessors = owns(prototypeOfObject, '__defineGetter__');\n/* eslint-disable-next-line no-underscore-dangle */\nconst lookupGetter = supportsAccessors && methodize(prototypeOfObject.__lookupGetter__);\n/* eslint-disable-next-line no-underscore-dangle */\nconst lookupSetter = supportsAccessors && methodize(prototypeOfObject.__lookupSetter__);\n\nexport const implementation = function getOwnPropertyDescriptor(object, property) {\n  const obj = toObject(object);\n  const propKey = toPropertyKey(property);\n\n  let result;\n\n  // make a valiant attempt to use the real getOwnPropertyDescriptor for I8's DOM elements.\n  if (getOPDFallback1) {\n    result = attempt(function attemptee() {\n      return getOPDFallback1(toObject(obj), propKey);\n    });\n\n    if (result.threw === false) {\n      return result.value;\n    }\n    // try the shim if the real one doesn't work\n  }\n\n  const isStringIndex = isString(obj) && isIndex(propKey, obj.length);\n\n  if (getOPDFallback2 && isStringIndex === false) {\n    result = attempt(function attemptee() {\n      return getOPDFallback2(toObject(obj), propKey);\n    });\n\n    if (result.threw === false) {\n      return result.value;\n    }\n    // try the shim if the real one doesn't work\n  }\n\n  /* eslint-disable-next-line no-void */\n  let descriptor = void 0;\n\n  // If object does not owns property return undefined immediately.\n  if (isStringIndex === false && owns(obj, propKey) === false) {\n    return descriptor;\n  }\n\n  // If object has a property then it's for sure `configurable`, and\n  // probably `enumerable`. Detect enumerability though.\n  descriptor = {\n    configurable: isPrimitive(object) === false && isStringIndex === false,\n    enumerable: propertyIsEnumerable(obj, propKey),\n  };\n\n  // If JS engine supports accessor properties then property may be a\n  // getter or setter.\n  if (supportsAccessors) {\n    // Unfortunately `__lookupGetter__` will return a getter even\n    // if object has own non getter property along with a same named\n    // inherited getter. To avoid misbehavior we temporary remove\n    // `__proto__` so that `__lookupGetter__` will return getter only\n    // if it's owned by an object.\n    /* eslint-disable-next-line no-proto */\n    const prototype = obj.__proto__;\n    const notPrototypeOfObject = obj !== prototypeOfObject;\n\n    // avoid recursion problem, breaking in Opera Mini when\n    // Object.getOwnPropertyDescriptor(Object.prototype, 'toString')\n    // or any other Object.prototype accessor\n    if (notPrototypeOfObject) {\n      /* eslint-disable-next-line no-proto */\n      obj.__proto__ = prototypeOfObject;\n    }\n\n    const getter = lookupGetter(obj, propKey);\n    const setter = lookupSetter(obj, propKey);\n\n    if (notPrototypeOfObject) {\n      // Once we have getter and setter we can put values back.\n      /* eslint-disable-next-line no-proto */\n      obj.__proto__ = prototype;\n    }\n\n    if (getter || setter) {\n      if (getter) {\n        descriptor.get = getter;\n      }\n\n      if (setter) {\n        descriptor.set = setter;\n      }\n\n      // If it was accessor property we're done and return here\n      // in order to avoid adding `value` to the descriptor.\n      return descriptor;\n    }\n  }\n\n  // If we got this far we know that object has an own property that is\n  // not an accessor so we set it as a value and return descriptor.\n  if (isStringIndex) {\n    descriptor.value = charAt(obj, propKey);\n    descriptor.writable = false;\n  } else {\n    descriptor.value = obj[propKey];\n    descriptor.writable = true;\n  }\n\n  return descriptor;\n};\n\n/**\n * This method returns a property descriptor for an own property (that is,\n * one directly present on an object and not in the object's prototype chain)\n * of a given object.\n *\n * @param {*} object - The object in which to look for the property.\n * @param {*} property - The name of the property whose description is to be retrieved.\n * @returns {object} A property descriptor of the given property if it exists on the object, undefined otherwise.\n */\nlet $getOwnPropertyDescriptor;\n\n// check whether getOwnPropertyDescriptor works if it's given. Otherwise, shim partially.\nif (nativeGOPD) {\n  const doc = typeof document !== 'undefined' && document;\n  const getOPDWorksOnDom = doc ? doesGOPDWork(doc.createElement('div'), 'sentinel') : true;\n\n  if (getOPDWorksOnDom) {\n    const res = attempt(nativeGOPD, toObject('abc'), 1);\n    const worksWithStr = res.threw === false && res.value && res.value.value === 'b';\n\n    if (worksWithStr) {\n      const getOPDWorksOnObject = doesGOPDWork({}, 'sentinel');\n\n      if (getOPDWorksOnObject) {\n        const worksWithPrim = attempt(nativeGOPD, 42, 'name').threw === false;\n        /* eslint-disable-next-line compat/compat */\n        const worksWithObjSym = hasSymbolSupport && doesGOPDWork({}, toObject(Symbol(EMPTY_STRING)));\n\n        if (worksWithObjSym) {\n          if (worksWithPrim) {\n            $getOwnPropertyDescriptor = nativeGOPD;\n          } else {\n            $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(object, property) {\n              return nativeGOPD(toObject(object), property);\n            };\n          }\n        } else if (worksWithPrim) {\n          $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(object, property) {\n            return nativeGOPD(object, toPropertyKey(property));\n          };\n        } else {\n          $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(object, property) {\n            return nativeGOPD(toObject(object), toPropertyKey(property));\n          };\n        }\n      } else {\n        getOPDFallback1 = nativeGOPD;\n      }\n    } else {\n      getOPDFallback2 = nativeGOPD;\n    }\n  }\n}\n\nif (toBoolean($getOwnPropertyDescriptor) === false || getOPDFallback1 || getOPDFallback2) {\n  $getOwnPropertyDescriptor = implementation;\n}\n\nconst gOPS = $getOwnPropertyDescriptor;\n\nexport default gOPS;\n","import toObject from 'to-object-x';\nimport toPropertyKey from 'to-property-key-x';\nimport methodize from 'simple-methodize-x';\n\nconst hop = methodize({}.hasOwnProperty);\n\n/**\n * The `hasOwnProperty` method returns a boolean indicating whether\n * the `object` has the specified `property`. Does not attempt to fix known\n * issues in older browsers, but does ES6ify the method.\n *\n * @param {!object} object - The object to test.\n * @throws {TypeError} If object is null or undefined.\n * @param {string|number|symbol} property - The name or Symbol of the property to test.\n * @returns {boolean} `true` if the property is set on `object`, else `false`.\n */\nconst hasOwnProperty = function hasOwnProperty(object, property) {\n  return hop(toObject(object), toPropertyKey(property));\n};\n\nexport default hasOwnProperty;\n","import hasSymbols from 'has-symbol-support-x';\nimport isSymbol from 'is-symbol';\n\n/* eslint-disable-next-line compat/compat */\nconst pToString = hasSymbols && Symbol.prototype.toString;\nconst isSymbolFn = typeof pToString === 'function' && isSymbol;\n/** @type {Function} */\nconst castString = ''.constructor;\n\n/**\n * The abstract operation ToString converts argument to a value of type String,\n * however the specification states that if the argument is a Symbol then a\n * 'TypeError' is thrown. This version also allows Symbols be converted to\n * a string. Other uncoercible exotics will still throw though.\n *\n * @param {*} [value] - The value to convert to a string.\n * @returns {string} The converted value.\n */\nconst toStringSymbolsSupported = function toStringSymbolsSupported(value) {\n  return isSymbolFn && isSymbolFn(value) ? pToString.call(value) : castString(value);\n};\n\nexport default toStringSymbolsSupported;\n","import toNumber from 'to-number-x';\n\nconst getMaxMin = function getMaxMin(args) {\n  const minVal = toNumber(args[1]);\n  const result = args.length < 3 ? {max: minVal, min: 0} : {max: toNumber(args[2]), min: minVal};\n\n  if (result.min > result.max) {\n    throw new RangeError('\"min\" must be less than \"max\"');\n  }\n\n  return result;\n};\n\n// eslint-disable jsdoc/check-param-names\n// noinspection JSCommentMatchesSignature\n/**\n * This method clamp a number to min and max limits inclusive.\n *\n * @param {number} value - The number to be clamped.\n * @param {number} [min=0] - The minimum number.\n * @param {number} max - The maximum number.\n * @throws {RangeError} If min > max.\n * @returns {number} The clamped number.\n */\n// eslint-enable jsdoc/check-param-names\nconst clamp = function clamp(value) {\n  const number = toNumber(value);\n\n  if (arguments.length < 2) {\n    return number;\n  }\n\n  /* eslint-disable-next-line prefer-rest-params */\n  const {max, min} = getMaxMin(arguments);\n\n  if (number < min) {\n    return min;\n  }\n\n  if (number > max) {\n    return max;\n  }\n\n  return number;\n};\n\nexport default clamp;\n","import safeToString from 'to-string-symbols-supported-x';\nimport toInteger from 'to-integer-x';\nimport toNumber from 'to-number-x';\nimport mathClamp from 'math-clamp-x';\n\nconst MAX_SAFE_INTEGER = 9007199254740991;\nconst reIsUint = /^(?:0|[1-9]\\d*)$/;\nconst rxTest = reIsUint.test;\n\n/**\n * This method determines whether the passed value is a zero based index.\n * JavaScript arrays are zero-indexed: the first element of an array is at\n * index 0, and the last element is at the index equal to the value of the\n * array's length property minus 1.\n *\n * @param {number|string} value - The value to be tested for being a zero based index.\n * @param {number} [length=MAX_SAFE_INTEGER] - The length that sets the upper bound.\n * @returns {boolean} A Boolean indicating whether or not the given value is a\n * zero based index within bounds.\n */\nconst isIndex = function isIndex(value, length) {\n  const string = safeToString(value);\n\n  if (rxTest.call(reIsUint, string) === false) {\n    return false;\n  }\n\n  const number = toNumber(string);\n\n  if (arguments.length > 1) {\n    return number < mathClamp(toInteger(length), MAX_SAFE_INTEGER);\n  }\n\n  return number < MAX_SAFE_INTEGER;\n};\n\nexport default isIndex;\n","import toPropertyKey from 'to-property-key-x';\nimport toObject from 'to-object-x';\nimport methodize from 'simple-methodize-x';\n\nconst propIsEnumerable = methodize({}.propertyIsEnumerable);\n\n/**\n * This method returns a Boolean indicating whether the specified property is\n * enumerable. Does not attempt to fix bugs in IE<9 or old Opera, otherwise it\n * does ES6ify the method.\n *\n * @param {!object} object - The object on which to test the property.\n * @param {string|symbol} property - The name of the property to test.\n * @throws {TypeError} If target is null or undefined.\n * @returns {boolean} A Boolean indicating whether the specified property is\n *  enumerable.\n */\nconst propertyIsEnumerable = function propertyIsEnumerable(object, property) {\n  return propIsEnumerable(toObject(object), toPropertyKey(property));\n};\n\nexport default propertyIsEnumerable;\n","import attempt from 'attempt-x';\nimport toObject from 'to-object-x';\nimport toPropertyKey from 'to-property-key-x';\nimport has from 'has-own-property-x';\nimport isFunction from 'is-function-x';\nimport assertIsObject from 'assert-is-object-x';\nimport toBoolean from 'to-boolean-x';\nimport methodize from 'simple-methodize-x';\n\nconst ObjectCtr = {}.constructor;\nconst nd = ObjectCtr.defineProperty;\nconst nativeDefProp = typeof nd === 'function' && nd;\nlet definePropertyFallback;\n\nconst toPropertyDescriptor = function toPropertyDescriptor(desc) {\n  const object = toObject(desc);\n  const descriptor = {};\n\n  if (has(object, 'enumerable')) {\n    descriptor.enumerable = toBoolean(object.enumerable);\n  }\n\n  if (has(object, 'configurable')) {\n    descriptor.configurable = toBoolean(object.configurable);\n  }\n\n  if (has(object, 'value')) {\n    descriptor.value = object.value;\n  }\n\n  if (has(object, 'writable')) {\n    descriptor.writable = toBoolean(object.writable);\n  }\n\n  if (has(object, 'get')) {\n    const getter = object.get;\n\n    if (typeof getter !== 'undefined' && isFunction(getter) === false) {\n      throw new TypeError('getter must be a function');\n    }\n\n    descriptor.get = getter;\n  }\n\n  if (has(object, 'set')) {\n    const setter = object.set;\n\n    if (typeof setter !== 'undefined' && isFunction(setter) === false) {\n      throw new TypeError('setter must be a function');\n    }\n\n    descriptor.set = setter;\n  }\n\n  if ((has(descriptor, 'get') || has(descriptor, 'set')) && (has(descriptor, 'value') || has(descriptor, 'writable'))) {\n    throw new TypeError('Invalid property descriptor. Cannot both specify accessors and a value or writable attribute');\n  }\n\n  return descriptor;\n};\n\n// ES5 15.2.3.6\n// http://es5.github.com/#x15.2.3.6\n\n// Patch for WebKit and IE8 standard mode\n// Designed by hax <hax.github.com>\n// related issue: https://github.com/es-shims/es5-shim/issues#issue/5\n// IE8 Reference:\n//     http://msdn.microsoft.com/en-us/library/dd282900.aspx\n//     http://msdn.microsoft.com/en-us/library/dd229916.aspx\n// WebKit Bugs:\n//     https://bugs.webkit.org/show_bug.cgi?id=36423\n\nconst prototypeOfObject = ObjectCtr.prototype;\n// If JS engine supports accessors creating shortcuts.\nconst supportsAccessors = has(prototypeOfObject, '__defineGetter__');\n/* eslint-disable-next-line no-underscore-dangle,no-restricted-properties */\nconst defineGetter = supportsAccessors && methodize(prototypeOfObject.__defineGetter__);\n/* eslint-disable-next-line no-underscore-dangle,no-restricted-properties */\nconst defineSetter = supportsAccessors && methodize(prototypeOfObject.__defineSetter__);\n/* eslint-disable-next-line no-underscore-dangle */\nconst lookupGetter = supportsAccessors && methodize(prototypeOfObject.__lookupGetter__);\n/* eslint-disable-next-line no-underscore-dangle */\nconst lookupSetter = supportsAccessors && methodize(prototypeOfObject.__lookupSetter__);\n\nexport const implementation = function defineProperty(object, property, descriptor) {\n  assertIsObject(object);\n  const propKey = toPropertyKey(property);\n  const propDesc = toPropertyDescriptor(descriptor);\n\n  // make a valiant attempt to use the real defineProperty for IE8's DOM elements.\n  if (definePropertyFallback) {\n    const result = attempt(function attemptee() {\n      return definePropertyFallback(ObjectCtr, object, propKey, propDesc);\n    });\n\n    if (result.threw === false) {\n      return result.value;\n    }\n    // try the shim if the real one doesn't work\n  }\n\n  // If it's a data property.\n  if (has(propDesc, 'value')) {\n    // fail silently if 'writable', 'enumerable', or 'configurable' are requested but not supported\n    if (supportsAccessors && (lookupGetter(object, propKey) || lookupSetter(object, propKey))) {\n      // As accessors are supported only on engines implementing\n      // `__proto__` we can safely override `__proto__` while defining\n      // a property to make sure that we don't hit an inherited accessor.\n      /* eslint-disable-next-line no-proto */\n      const prototype = object.__proto__;\n      /* eslint-disable-next-line no-proto */\n      object.__proto__ = prototypeOfObject;\n      // Deleting a property anyway since getter / setter may be defined on object itself.\n      delete object[propKey];\n      object[propKey] = propDesc.value;\n      // Setting original `__proto__` back now.\n      /* eslint-disable-next-line no-proto */\n      object.__proto__ = prototype;\n    } else {\n      object[propKey] = propDesc.value;\n    }\n  } else {\n    if (supportsAccessors === false && (propDesc.get || propDesc.set)) {\n      throw new TypeError('getters & setters can not be defined on this javascript engine');\n    }\n\n    // If we got that far then getters and setters can be defined !!\n    if (propDesc.get) {\n      defineGetter(object, propKey, propDesc.get);\n    }\n\n    if (propDesc.set) {\n      defineSetter(object, propKey, propDesc.set);\n    }\n  }\n\n  return object;\n};\n\n/**\n * This method defines a new property directly on an object, or modifies an\n * existing property on an object, and returns the object.\n *\n * @param {object} object - The object on which to define the property.\n * @param {string} property - The name of the property to be defined or modified.\n * @param {object} descriptor - The descriptor for the property being defined or modified.\n * @returns {object} The object that was passed to the function.\n * });.\n */\nlet $defineProperty;\n\n// check whether defineProperty works if it's given. Otherwise, shim partially.\nif (nativeDefProp) {\n  const testWorksWith = function testWorksWith(object) {\n    const testResult = attempt(nativeDefProp, object, 'sentinel', {});\n\n    return testResult.threw === false && testResult.value === object && 'sentinel' in object;\n  };\n\n  const doc = typeof document !== 'undefined' && document;\n\n  if (testWorksWith({}) && (toBoolean(doc) === false || testWorksWith(doc.createElement('div')))) {\n    $defineProperty = function defineProperty(object, property, descriptor) {\n      return nativeDefProp(assertIsObject(object), toPropertyKey(property), toPropertyDescriptor(descriptor));\n    };\n  } else {\n    definePropertyFallback = nativeDefProp;\n  }\n}\n\nif (toBoolean(nativeDefProp) === false || definePropertyFallback) {\n  $defineProperty = implementation;\n}\n\nconst defProp = $defineProperty;\n\nexport default defProp;\n","import safeToString from 'to-string-symbols-supported-x';\nimport isPrimitive from 'is-primitive-x';\n\n/**\n * Tests `value` to see if it is an object, throws a `TypeError` if it is\n * not. Otherwise returns the `value`.\n *\n * @param {*} value - The argument to be tested.\n * @param {string} [message] - An alternative user message.\n * @throws {TypeError} Throws if `value` is not an object.\n * @returns {*} Returns `value` if it is an object.\n */\nconst assertIsObject = function assertIsObject(value, message) {\n  if (isPrimitive(value)) {\n    const msg = arguments.length > 1 ? safeToString(message) : `${safeToString(value)} is not an object`;\n\n    throw new TypeError(msg);\n  }\n\n  return value;\n};\n\nexport default assertIsObject;\n","import toObject from 'to-object-x';\nimport isArguments from 'is-arguments';\nimport isArray from 'is-array-x';\nimport arrayLikeSlice from 'array-like-slice-x';\nimport attempt from 'attempt-x';\nimport isString from 'is-string';\nimport methodize from 'simple-methodize-x';\n\nconst methodizedSlice = methodize([].slice);\n\nconst testArray = function testArray() {\n  const res = attempt(function attemptee() {\n    return methodizedSlice([1, 2, 3], 1, 2);\n  });\n\n  return res.threw || isArray(res.value) === false || res.value.length !== 1 || res.value[0] !== 2;\n};\n\nconst testString = function testString() {\n  const res = attempt(function attemptee() {\n    return methodizedSlice('abc', 1, 2);\n  });\n\n  return res.threw || isArray(res.value) === false || res.value.length !== 1 || res.value[0] !== 'b';\n};\n\nconst testDOM = function testDOM() {\n  const doc = typeof document !== 'undefined' && document;\n  const resultDocElement = doc\n    ? attempt(function attemptee() {\n        return methodizedSlice(doc.documentElement);\n      }).threw\n    : false;\n\n  return resultDocElement ? resultDocElement.threw : false;\n};\n\nconst failArray = testArray();\nconst failString = testString();\nconst failDOM = testDOM();\n\nconst useArrayLike = function useArrayLike(object) {\n  return failArray || (failDOM && isArray(object) === false) || (failString && isString(object)) || isArguments(object);\n};\n\n/**\n * The slice() method returns a shallow copy of a portion of an array into a new\n * array object selected from begin to end (end not included). The original\n * array will not be modified.\n *\n * @param {Array|object} array - The array to slice.\n * @param {number} [start] - Zero-based index at which to begin extraction.\n *  A negative index can be used, indicating an offset from the end of the\n *  sequence. Running slice(-2) extracts the last two elements in the sequence.\n *  If begin is undefined, slice begins from index 0.\n * @param {number} [end] - Zero-based index before which to end extraction.\n *  Slice extracts up to but not including end. For example, slice(1,4)\n *  extracts the second element through the fourth element (elements indexed\n *  1, 2, and 3).\n *  A negative index can be used, indicating an offset from the end of the\n *  sequence. Running slice(2,-1) extracts the third element through the second-to-last\n *  element in the sequence.\n *  If end is omitted, slice extracts through the end of the\n *  sequence (arr.length).\n *  If end is greater than the length of the sequence, slice extracts through\n *  the end of the sequence (arr.length).\n * @returns {Array} A new array containing the extracted elements.\n */\nconst slice = function slice(array, start, end) {\n  const object = toObject(array);\n\n  return useArrayLike(object) ? arrayLikeSlice(object, start, end) : methodizedSlice(object, start, end);\n};\n\nexport default slice;\n","import isObjectLike from 'is-object-like-x';\nimport hasToStringTag from 'has-to-string-tag-x';\nimport has from 'has-own-property-x';\nimport gOPD from 'object-get-own-property-descriptor-x';\nimport defineProperty from 'object-define-property-x';\nimport toStringTag from 'to-string-tag-x';\nimport methodize from 'simple-methodize-x';\n\nconst regexExec = methodize(/none/.exec);\nconst regexClass = '[object RegExp]';\n\nconst tryRegexExecCall = function tryRegexExec(value, descriptor) {\n  try {\n    value.lastIndex = 0;\n    regexExec(value);\n\n    return true;\n  } catch (e) {\n    return false;\n  } finally {\n    defineProperty(value, 'lastIndex', descriptor);\n  }\n};\n\n/**\n * This method tests if a value is a regex.\n *\n * @param {*} value - The value to test.\n * @returns {boolean} `true` if value is a regex; otherwise `false`.\n */\nconst isRegex = function isRegex(value) {\n  if (isObjectLike(value) === false) {\n    return false;\n  }\n\n  if (hasToStringTag === false) {\n    return toStringTag(value) === regexClass;\n  }\n\n  const descriptor = gOPD(value, 'lastIndex');\n  const hasLastIndexDataProperty = descriptor && has(descriptor, 'value');\n\n  if (hasLastIndexDataProperty !== true) {\n    return false;\n  }\n\n  return tryRegexExecCall(value, descriptor);\n};\n\nexport default isRegex;\n","import attempt from 'attempt-x';\nimport toStringTag from 'to-string-tag-x';\n\nconst nia = [].isArray;\nconst nativeIsArray = typeof nia === 'function' && nia;\n\nconst testResult = attempt(function attemptee() {\n  return nativeIsArray([]) === true && nativeIsArray({length: 0}) === false;\n});\n\nconst isWorking = testResult.threw === false && testResult.value === true;\n\nexport const implementation = function isArray(value) {\n  return toStringTag(value) === '[object Array]';\n};\n\n/**\n * Determines whether the passed value is an Array.\n *\n * @param {*} value - The value to test.\n * @returns {boolean} - True if an array; otherwise false.\n */\nconst isArray = isWorking ? nativeIsArray : implementation;\n\nexport default isArray;\n","import hasBoxed from 'has-boxed-string-x';\nimport isString from 'is-string';\nimport methodize from 'simple-methodize-x';\n\nconst EMPTY_STRING = '';\nconst strSplit = methodize(EMPTY_STRING.split);\n\nconst identity = function splitIfBoxedBug(value) {\n  return value;\n};\n\nexport const implementation = function splitIfBoxedBug(value) {\n  return isString(value) ? strSplit(value, EMPTY_STRING) : identity(value);\n};\n\n/**\n * This method tests if a value is a string with the boxed bug; splits to an\n * array for iteration; otherwise returns the original value.\n *\n * @param {*} [value] - The value to be tested.\n * @returns {*} An array or characters if value was a string with the boxed bug;\n *  otherwise the value.\n */\nconst $splitIfBoxedBug = hasBoxed ? identity : implementation;\n\nexport default $splitIfBoxedBug;\n","import toObject from 'to-object-x';\nimport toInteger from 'to-integer-x';\nimport toLength from 'to-length-x';\nimport splitIfBoxedBug from 'split-if-boxed-bug-x';\n\nconst getMax = function getMax(a, b) {\n  return a >= b ? a : b;\n};\n\nconst getMin = function getMin(a, b) {\n  return a <= b ? a : b;\n};\n\nconst setRelative = function setRelative(value, length) {\n  return value < 0 ? getMax(length + value, 0) : getMin(value, length);\n};\n\n/**\n * The slice() method returns a shallow copy of a portion of an array into a new\n * array object selected from begin to end (end not included). The original\n * array will not be modified.\n *\n * @param {!object} arrayLike - The array like object to slice.\n * @param {number} [start] - Zero-based index at which to begin extraction.\n *  A negative index can be used, indicating an offset from the end of the\n *  sequence. Running slice(-2) extracts the last two elements in the sequence.\n *  If begin is undefined, slice begins from index 0.\n * @param {number} [end] - Zero-based index before which to end extraction.\n *  Slice extracts up to but not including end. For example, slice([0,1,2,3,4],1,4)\n *  extracts the second element through the fourth element (elements indexed\n *  1, 2, and 3).\n *  A negative index can be used, indicating an offset from the end of the\n *  sequence. Running slice(2,-1) extracts the third element through the second-to-last\n *  element in the sequence.\n *  If end is omitted, slice extracts through the end of the sequence (arr.length).\n *  If end is greater than the length of the sequence, slice extracts through\n *  the end of the sequence (arr.length).\n * @returns {Array} A new array containing the extracted elements.\n */\nconst slice = function slice(arrayLike, start, end) {\n  const iterable = splitIfBoxedBug(toObject(arrayLike));\n  const length = toLength(iterable.length);\n  let k = setRelative(toInteger(start), length);\n  const relativeEnd = typeof end === 'undefined' ? length : toInteger(end);\n  const finalEnd = setRelative(relativeEnd, length);\n  const val = [];\n  val.length = getMax(finalEnd - k, 0);\n  let next = 0;\n  while (k < finalEnd) {\n    if (k in iterable) {\n      val[next] = iterable[k];\n    }\n\n    next += 1;\n    k += 1;\n  }\n\n  return val;\n};\n\nexport default slice;\n","import toLength from 'to-length-x';\nimport isRegExp from 'is-regexp-x';\nimport safeToString from 'to-string-symbols-supported-x';\nimport isObjectLike from 'is-object-like-x';\nimport hasOwn from 'has-own-property-x';\nimport arraySlice from 'array-slice-x';\nimport toBoolean from 'to-boolean-x';\nimport isNil from 'is-nil-x';\nimport methodize from 'simple-methodize-x';\n\nconst EMPTY_STRING = '';\nconst match = methodize(EMPTY_STRING.match);\nconst slice = methodize(EMPTY_STRING.slice);\nconst search = methodize(EMPTY_STRING.search);\nconst indexOf = methodize(EMPTY_STRING.indexOf);\nconst lastIndexOf = methodize(EMPTY_STRING.lastIndexOf);\nconst aJoin = methodize([].join);\n\n/* Used to match `RegExp` flags from their coerced string values. */\nconst reFlags = /\\w*$/;\nconst RegExpCtr = reFlags.constructor;\nconst rxTest = methodize(reFlags.test);\nconst rxExec = methodize(reFlags.exec);\n\n/* Used to compose unicode character classes. */\nconst rsAstralRange = '\\\\ud800-\\\\udfff';\nconst rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23';\nconst rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0';\nconst rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/* Used to compose unicode capture groups. */\nconst rsAstral = `[${rsAstralRange}]`;\nconst rsCombo = `[${rsComboMarksRange}${rsComboSymbolsRange}]`;\nconst rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]';\nconst rsModifier = `(?:${rsCombo}|${rsFitz})`;\nconst rsNonAstral = `[^${rsAstralRange}]`;\nconst rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}';\nconst rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]';\nconst rsZWJ = '\\\\u200d';\n\n/* Used to compose unicode regexes. */\nconst reOptMod = `${rsModifier}?`;\nconst rsOptVar = `[${rsVarRange}]?`;\nconst rsOptJoin = `(?:${rsZWJ}(?:${aJoin([rsNonAstral, rsRegional, rsSurrPair], '|')})${rsOptVar}${reOptMod})*`;\nconst rsSeq = rsOptVar + reOptMod + rsOptJoin;\nconst rsSymbol = `(?:${aJoin([`${rsNonAstral + rsCombo}?`, rsCombo, rsRegional, rsSurrPair, rsAstral], '|')})`;\n\n/*\n * Used to match string symbols\n * @see https://mathiasbynens.be/notes/javascript-unicode\n */\nconst reComplexSymbol = new RegExpCtr(`${rsFitz}(?=${rsFitz})|${rsSymbol}${rsSeq}`, 'g');\n\n/*\n * Used to detect strings with [zero-width joiners or code points from\n * the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/).\n */\nconst reHasComplexSymbol = new RegExpCtr(`[${rsZWJ}${rsAstralRange}${rsComboMarksRange}${rsComboSymbolsRange}${rsVarRange}]`);\n\n/**\n * Gets the number of symbols in `string`.\n *\n * @private\n * @param {string} string - The string to inspect.\n * @returns {number} Returns the string size.\n */\nconst stringSize = function _stringSize(string) {\n  if (toBoolean(string) === false || rxTest(reHasComplexSymbol, string) === false) {\n    return string.length;\n  }\n\n  reComplexSymbol.lastIndex = 0;\n  let result = 0;\n  while (rxTest(reComplexSymbol, string)) {\n    result += 1;\n  }\n\n  return result;\n};\n\nconst getOptions = function getOptions(options) {\n  const opts = {length: 30, omission: '...', separator: null};\n\n  if (isObjectLike(options)) {\n    if (hasOwn(options, 'length')) {\n      opts.length = toLength(options.length);\n    }\n\n    if (hasOwn(options, 'omission')) {\n      opts.omission = options.omission;\n    }\n\n    if (hasOwn(options, 'separator')) {\n      opts.separator = options.separator;\n    }\n  }\n\n  return opts;\n};\n\nconst getConsts = function getConsts(str) {\n  if (rxTest(reHasComplexSymbol, str)) {\n    const matchSymbols = match(str, reComplexSymbol);\n\n    return {\n      matchSymbols: match(str, reComplexSymbol),\n      strLength: matchSymbols.length,\n    };\n  }\n\n  return {\n    matchSymbols: null,\n    strLength: str.length,\n  };\n};\n\nconst getNewEnd = function getNewEnd(rxSeperator, result) {\n  let newEnd;\n  let rxMatch = rxExec(rxSeperator, result);\n  while (rxMatch) {\n    newEnd = rxMatch.index;\n    rxMatch = rxExec(rxSeperator, result);\n  }\n\n  return newEnd;\n};\n\nconst getRxResult = function getRxResult(obj) {\n  const {str, separator, end, result} = obj;\n\n  if (search(slice(str, end), separator)) {\n    const rxSeperator = toBoolean(separator.global)\n      ? separator\n      : new RegExpCtr(separator.source, `${safeToString(rxExec(reFlags, separator))}g`);\n\n    rxSeperator.lastIndex = 0;\n    const newEnd = getNewEnd(rxSeperator, result);\n\n    return slice(result, 0, typeof newEnd === 'undefined' ? end : newEnd);\n  }\n\n  return result;\n};\n\nconst getResult = function getResult(obj) {\n  const {str, separator, end, result} = obj;\n\n  if (isRegExp(separator)) {\n    return getRxResult({str, separator, end, result});\n  }\n\n  if (indexOf(str, separator, end) !== end) {\n    const index = lastIndexOf(result, separator);\n\n    if (index > -1) {\n      return slice(result, 0, index);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Truncates `string` if it's longer than the given maximum string length.\n * The last characters of the truncated string are replaced with the omission\n * string which defaults to \"...\".\n *\n * @param {string} string - The string to truncate.\n * @param {object} [options] - The options object.\n * @param {number} [options.length=30] - The maximum string length.\n * @param {string} [options.omission='...'] - The string to indicate text\n * is omitted.\n * @param {RegExp|string} [options.separator] - The separator pattern to\n * truncate to.\n * @returns {string} Returns the truncated string.\n */\nconst truncate = function truncate(string, options) {\n  const str = safeToString(string);\n  const {length, omission, separator} = getOptions(options);\n  const {strLength, matchSymbols} = getConsts(str);\n\n  if (length >= strLength) {\n    return str;\n  }\n\n  const end = length - stringSize(omission);\n\n  if (end < 1) {\n    return omission;\n  }\n\n  const result = matchSymbols ? aJoin(arraySlice(matchSymbols, 0, end), EMPTY_STRING) : slice(str, 0, end);\n\n  if (isNil(separator)) {\n    return result + omission;\n  }\n\n  return getResult({str, separator, end: matchSymbols ? result.length : end, result}) + omission;\n};\n\nexport default truncate;\n"],"sourceRoot":""}