{"version":3,"sources":["../src/truncate-x.js"],"names":[],"mappings":"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","file":"truncate-x.esm.js","sourcesContent":["import toLength from 'to-length-x';\nimport isRegExp from 'is-regexp-x';\nimport safeToString from 'to-string-symbols-supported-x';\nimport isObjectLike from 'is-object-like-x';\nimport hasOwn from 'has-own-property-x';\nimport arraySlice from 'array-slice-x';\nimport toBoolean from 'to-boolean-x';\n\nconst EMPTY_STRING = '';\nconst sMatch = EMPTY_STRING.match;\nconst sSlice = EMPTY_STRING.slice;\nconst sSearch = EMPTY_STRING.search;\nconst sIndexOf = EMPTY_STRING.indexOf;\nconst sLastIndexOf = EMPTY_STRING.lastIndexOf;\nconst aJoin = [].join;\n/** @type {RegExpConstructor} */\nconst RegExpCtr = /none/.constructor;\n\n/* Used to match `RegExp` flags from their coerced string values. */\nconst reFlags = /\\w*$/;\nconst rxTest = reFlags.test;\nconst rxExec = reFlags.exec;\n\n/* Used to compose unicode character classes. */\nconst rsAstralRange = '\\\\ud800-\\\\udfff';\nconst rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23';\nconst rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0';\nconst rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/* Used to compose unicode capture groups. */\nconst rsAstral = `[${rsAstralRange}]`;\nconst rsCombo = `[${rsComboMarksRange}${rsComboSymbolsRange}]`;\nconst rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]';\nconst rsModifier = `(?:${rsCombo}|${rsFitz})`;\nconst rsNonAstral = `[^${rsAstralRange}]`;\nconst rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}';\nconst rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]';\nconst rsZWJ = '\\\\u200d';\n\n/* Used to compose unicode regexes. */\nconst reOptMod = `${rsModifier}?`;\nconst rsOptVar = `[${rsVarRange}]?`;\nconst rsOptJoin = `(?:${rsZWJ}(?:${aJoin.call([rsNonAstral, rsRegional, rsSurrPair], '|')})${rsOptVar}${reOptMod})*`;\nconst rsSeq = rsOptVar + reOptMod + rsOptJoin;\nconst rsSymbol = `(?:${aJoin.call([`${rsNonAstral + rsCombo}?`, rsCombo, rsRegional, rsSurrPair, rsAstral], '|')})`;\n\n/*\n * Used to match string symbols\n * @see https://mathiasbynens.be/notes/javascript-unicode\n */\nconst reComplexSymbol = new RegExpCtr(`${rsFitz}(?=${rsFitz})|${rsSymbol}${rsSeq}`, 'g');\n\n/*\n * Used to detect strings with [zero-width joiners or code points from\n * the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/).\n */\nconst reHasComplexSymbol = new RegExpCtr(`[${rsZWJ}${rsAstralRange}${rsComboMarksRange}${rsComboSymbolsRange}${rsVarRange}]`);\n\n/**\n * Gets the number of symbols in `string`.\n *\n * @private\n * @param {string} string - The string to inspect.\n * @returns {number} Returns the string size.\n */\nconst stringSize = function _stringSize(string) {\n  if (toBoolean(string) === false || rxTest.call(reHasComplexSymbol, string) === false) {\n    return string.length;\n  }\n\n  reComplexSymbol.lastIndex = 0;\n  let result = 0;\n  while (rxTest.call(reComplexSymbol, string)) {\n    result += 1;\n  }\n\n  return result;\n};\n\n/**\n * Truncates `string` if it's longer than the given maximum string length.\n * The last characters of the truncated string are replaced with the omission\n * string which defaults to \"...\".\n *\n * @param {string} string - The string to truncate.\n * @param {object} [options] - The options object.\n * @param {number} [options.length=30] - The maximum string length.\n * @param {string} [options.omission='...'] - The string to indicate text\n * is omitted.\n * @param {RegExp|string} [options.separator] - The separator pattern to\n * truncate to.\n * @returns {string} Returns the truncated string.\n */\nconst truncate = function truncate(string, options) {\n  const str = safeToString(string);\n  let length = 30;\n  let omission = '...';\n  let separator;\n\n  if (isObjectLike(options)) {\n    if (hasOwn(options, 'separator')) {\n      /* eslint-disable-next-line prefer-destructuring */\n      separator = options.separator;\n    }\n\n    if (hasOwn(options, 'length')) {\n      length = toLength(options.length);\n    }\n\n    if (hasOwn(options, 'omission')) {\n      omission = safeToString(options.omission);\n    }\n  }\n\n  let strLength = str.length;\n  let matchSymbols;\n\n  if (rxTest.call(reHasComplexSymbol, str)) {\n    matchSymbols = sMatch.call(str, reComplexSymbol);\n    strLength = matchSymbols.length;\n  }\n\n  if (length >= strLength) {\n    return str;\n  }\n\n  let end = length - stringSize(omission);\n\n  if (end < 1) {\n    return omission;\n  }\n\n  let result = matchSymbols ? aJoin.call(arraySlice(matchSymbols, 0, end), EMPTY_STRING) : sSlice.call(str, 0, end);\n\n  if (typeof separator === 'undefined') {\n    return result + omission;\n  }\n\n  if (matchSymbols) {\n    end += result.length - end;\n  }\n\n  if (isRegExp(separator)) {\n    if (sSearch.call(sSlice.call(str, end), separator)) {\n      const substr = result;\n\n      if (toBoolean(separator.global) === false) {\n        separator = new RegExpCtr(separator.source, `${safeToString(rxExec.call(reFlags, separator))}g`);\n      }\n\n      separator.lastIndex = 0;\n      let newEnd;\n      let match = rxExec.call(separator, substr);\n      while (match) {\n        newEnd = match.index;\n        match = rxExec.call(separator, substr);\n      }\n\n      result = sSlice.call(result, 0, typeof newEnd === 'undefined' ? end : newEnd);\n    }\n  } else if (sIndexOf.call(str, separator, end) !== end) {\n    const index = sLastIndexOf.call(result, separator);\n\n    if (index > -1) {\n      result = sSlice.call(result, 0, index);\n    }\n  }\n\n  return result + omission;\n};\n\nexport default truncate;\n"]}